// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2013.2
// Copyright (C) 2013 Xilinx Inc. All rights reserved.
// 
// ===========================================================

#ifndef _finger_counter_HH_
#define _finger_counter_HH_

#include "systemc.h"
#include "AESL_pkg.h"

#include "image_filter_dmul_64ns_64ns_64_9_max_dsp.h"
#include "image_filter_dcmp_64ns_64ns_1_3.h"
#include "image_filter_sitodp_64s_64_9.h"

namespace ap_rtl {

struct finger_counter : public sc_module {
    // Port declarations 17
    sc_in_clk ap_clk;
    sc_in< sc_logic > ap_rst;
    sc_in< sc_logic > ap_start;
    sc_out< sc_logic > ap_done;
    sc_in< sc_logic > ap_continue;
    sc_out< sc_logic > ap_idle;
    sc_out< sc_logic > ap_ready;
    sc_in< sc_lv<12> > src_rows_V_read;
    sc_in< sc_lv<12> > src_cols_V_read;
    sc_in< sc_lv<8> > src_data_stream_0_V_dout;
    sc_in< sc_logic > src_data_stream_0_V_empty_n;
    sc_out< sc_logic > src_data_stream_0_V_read;
    sc_out< sc_lv<8> > dst_data_stream_0_V_din;
    sc_in< sc_logic > dst_data_stream_0_V_full_n;
    sc_out< sc_logic > dst_data_stream_0_V_write;
    sc_out< sc_lv<3> > ges;
    sc_out< sc_logic > ges_ap_vld;


    // Module declarations
    finger_counter(sc_module_name name);
    SC_HAS_PROCESS(finger_counter);

    ~finger_counter();

    sc_trace_file* mVcdFile;

    image_filter_dmul_64ns_64ns_64_9_max_dsp<43,9,64,64,64>* image_filter_dmul_64ns_64ns_64_9_max_dsp_U43;
    image_filter_dcmp_64ns_64ns_1_3<44,3,64,64,1>* image_filter_dcmp_64ns_64ns_1_3_U44;
    image_filter_sitodp_64s_64_9<45,9,64,64>* image_filter_sitodp_64s_64_9_U45;
    sc_signal< sc_logic > ap_done_reg;
    sc_signal< sc_lv<6> > ap_CS_fsm;
    sc_signal< sc_lv<12> > t_V_5_reg_166;
    sc_signal< sc_lv<32> > rowcnt_reg_177;
    sc_signal< sc_lv<64> > grp_fu_199_p1;
    sc_signal< sc_lv<64> > reg_202;
    sc_signal< bool > ap_sig_bdd_82;
    sc_signal< sc_lv<13> > op2_assign_fu_212_p2;
    sc_signal< sc_lv<13> > op2_assign_reg_536;
    sc_signal< sc_lv<13> > op2_assign_3_fu_222_p2;
    sc_signal< sc_lv<13> > op2_assign_3_reg_541;
    sc_signal< sc_lv<12> > i_V_fu_252_p2;
    sc_signal< sc_lv<12> > i_V_reg_549;
    sc_signal< sc_lv<1> > not_fu_258_p2;
    sc_signal< sc_lv<1> > not_reg_554;
    sc_signal< sc_lv<1> > tmp_s_fu_247_p2;
    sc_signal< sc_lv<1> > notrhs_fu_263_p2;
    sc_signal< sc_lv<1> > notrhs_reg_559;
    sc_signal< sc_lv<64> > tmp_2_fu_269_p1;
    sc_signal< sc_lv<13> > tmp_16_cast_fu_274_p1;
    sc_signal< sc_lv<13> > tmp_16_cast_reg_569;
    sc_signal< sc_logic > ap_reg_ppiten_pp0_it0;
    sc_signal< sc_lv<1> > tmp_4_reg_574;
    sc_signal< sc_lv<1> > or_cond_reg_583;
    sc_signal< bool > ap_sig_bdd_121;
    sc_signal< sc_logic > ap_reg_ppiten_pp0_it1;
    sc_signal< sc_lv<1> > ap_reg_ppstg_tmp_4_reg_574_pp0_it1;
    sc_signal< sc_lv<1> > not_or_cond_reg_592;
    sc_signal< sc_lv<1> > ap_reg_ppstg_not_or_cond_reg_592_pp0_it1;
    sc_signal< bool > ap_sig_bdd_135;
    sc_signal< sc_logic > ap_reg_ppiten_pp0_it2;
    sc_signal< sc_logic > ap_reg_ppiten_pp0_it3;
    sc_signal< sc_lv<13> > ap_reg_ppstg_tmp_16_cast_reg_569_pp0_it1;
    sc_signal< sc_lv<1> > tmp_4_fu_278_p2;
    sc_signal< sc_lv<1> > ap_reg_ppstg_tmp_4_reg_574_pp0_it2;
    sc_signal< sc_lv<12> > j_V_fu_283_p2;
    sc_signal< sc_lv<1> > or_cond_fu_294_p2;
    sc_signal< sc_lv<8> > prevcol_1_fu_299_p1;
    sc_signal< sc_lv<8> > prevcol_1_reg_587;
    sc_signal< sc_lv<8> > ap_reg_ppstg_prevcol_1_reg_587_pp0_it1;
    sc_signal< sc_lv<1> > not_or_cond_fu_309_p2;
    sc_signal< sc_lv<1> > tmp_15_fu_329_p2;
    sc_signal< sc_lv<1> > tmp_15_reg_596;
    sc_signal< sc_lv<1> > sel_tmp1_fu_356_p2;
    sc_signal< sc_lv<1> > sel_tmp1_reg_601;
    sc_signal< sc_lv<32> > rowcnt_2_fu_416_p3;
    sc_signal< sc_lv<32> > flip2_2_fu_435_p3;
    sc_signal< sc_lv<32> > flip4_2_fu_455_p3;
    sc_signal< sc_lv<32> > flip8_2_fu_487_p3;
    sc_signal< sc_lv<64> > tmp_1_fu_495_p1;
    sc_signal< sc_lv<64> > grp_fu_190_p2;
    sc_signal< sc_lv<64> > tmp_3_reg_631;
    sc_signal< sc_lv<1> > grp_fu_195_p2;
    sc_signal< sc_lv<1> > tmp_reg_636;
    sc_signal< sc_lv<64> > tmp_5_fu_500_p1;
    sc_signal< sc_lv<12> > t_V_reg_119;
    sc_signal< sc_lv<32> > flip2_reg_130;
    sc_signal< sc_lv<32> > flip4_reg_142;
    sc_signal< sc_lv<32> > flip8_reg_154;
    sc_signal< sc_lv<8> > prevcol_fu_74;
    sc_signal< sc_lv<8> > prevcol_3_fu_385_p3;
    sc_signal< sc_lv<8> > prev_fu_78;
    sc_signal< sc_lv<8> > prev_3_fu_370_p3;
    sc_signal< sc_lv<8> > pixel_in_val_fu_82;
    sc_signal< sc_lv<64> > grp_fu_190_p0;
    sc_signal< sc_lv<64> > grp_fu_190_p1;
    sc_signal< sc_lv<64> > grp_fu_195_p0;
    sc_signal< sc_lv<64> > grp_fu_195_p1;
    sc_signal< sc_lv<64> > grp_fu_199_p0;
    sc_signal< sc_lv<13> > retval_i4_cast_fu_208_p1;
    sc_signal< sc_lv<13> > retval_i_cast_fu_218_p1;
    sc_signal< sc_lv<13> > tmp_cast_fu_243_p1;
    sc_signal< sc_lv<1> > not4_fu_289_p2;
    sc_signal< sc_lv<1> > notlhs_fu_303_p2;
    sc_signal< sc_lv<13> > tmp_25_cast_fu_335_p1;
    sc_signal< sc_lv<13> > tmp_16_fu_339_p2;
    sc_signal< sc_lv<1> > retval_s_fu_344_p2;
    sc_signal< sc_lv<1> > sel_tmp_fu_350_p2;
    sc_signal< sc_lv<8> > prev_2_fu_362_p3;
    sc_signal< sc_lv<8> > prevcol_2_fu_378_p3;
    sc_signal< sc_lv<32> > sel_tmp10_v_cast_cast_fu_403_p3;
    sc_signal< sc_lv<32> > rowcnt_1_fu_410_p2;
    sc_signal< sc_lv<1> > tmp_10_fu_429_p2;
    sc_signal< sc_lv<32> > flip2_1_fu_423_p2;
    sc_signal< sc_lv<1> > tmp_11_fu_449_p2;
    sc_signal< sc_lv<32> > flip4_1_fu_443_p2;
    sc_signal< sc_lv<1> > tmp_12_fu_463_p2;
    sc_signal< sc_lv<1> > tmp_13_fu_469_p2;
    sc_signal< sc_lv<1> > or_cond5_fu_481_p2;
    sc_signal< sc_lv<32> > flip8_1_fu_475_p2;
    sc_signal< sc_logic > grp_fu_190_ce;
    sc_signal< sc_logic > grp_fu_195_ce;
    sc_signal< sc_lv<5> > grp_fu_195_opcode;
    sc_signal< sc_logic > grp_fu_199_ce;
    sc_signal< sc_lv<6> > ap_NS_fsm;
    static const sc_logic ap_const_logic_1;
    static const sc_logic ap_const_logic_0;
    static const sc_lv<6> ap_ST_st1_fsm_0;
    static const sc_lv<6> ap_ST_st2_fsm_1;
    static const sc_lv<6> ap_ST_pp0_stg0_fsm_2;
    static const sc_lv<6> ap_ST_st7_fsm_3;
    static const sc_lv<6> ap_ST_st8_fsm_4;
    static const sc_lv<6> ap_ST_st9_fsm_5;
    static const sc_lv<6> ap_ST_st10_fsm_6;
    static const sc_lv<6> ap_ST_st11_fsm_7;
    static const sc_lv<6> ap_ST_st12_fsm_8;
    static const sc_lv<6> ap_ST_st13_fsm_9;
    static const sc_lv<6> ap_ST_st14_fsm_10;
    static const sc_lv<6> ap_ST_st15_fsm_11;
    static const sc_lv<6> ap_ST_st16_fsm_12;
    static const sc_lv<6> ap_ST_st17_fsm_13;
    static const sc_lv<6> ap_ST_st18_fsm_14;
    static const sc_lv<6> ap_ST_st19_fsm_15;
    static const sc_lv<6> ap_ST_st20_fsm_16;
    static const sc_lv<6> ap_ST_st21_fsm_17;
    static const sc_lv<6> ap_ST_st22_fsm_18;
    static const sc_lv<6> ap_ST_st23_fsm_19;
    static const sc_lv<6> ap_ST_st24_fsm_20;
    static const sc_lv<6> ap_ST_st25_fsm_21;
    static const sc_lv<6> ap_ST_st26_fsm_22;
    static const sc_lv<6> ap_ST_st27_fsm_23;
    static const sc_lv<6> ap_ST_st28_fsm_24;
    static const sc_lv<6> ap_ST_st29_fsm_25;
    static const sc_lv<6> ap_ST_st30_fsm_26;
    static const sc_lv<6> ap_ST_st31_fsm_27;
    static const sc_lv<6> ap_ST_st32_fsm_28;
    static const sc_lv<6> ap_ST_st33_fsm_29;
    static const sc_lv<6> ap_ST_st34_fsm_30;
    static const sc_lv<6> ap_ST_st35_fsm_31;
    static const sc_lv<6> ap_ST_st36_fsm_32;
    static const sc_lv<6> ap_ST_st37_fsm_33;
    static const sc_lv<6> ap_ST_st38_fsm_34;
    static const sc_lv<1> ap_const_lv1_0;
    static const sc_lv<12> ap_const_lv12_0;
    static const sc_lv<32> ap_const_lv32_0;
    static const sc_lv<8> ap_const_lv8_0;
    static const sc_lv<3> ap_const_lv3_0;
    static const sc_lv<3> ap_const_lv3_2;
    static const sc_lv<3> ap_const_lv3_1;
    static const sc_lv<32> ap_const_lv32_1;
    static const sc_lv<64> ap_const_lv64_3FD3333333333333;
    static const sc_lv<13> ap_const_lv13_1;
    static const sc_lv<12> ap_const_lv12_1;
    static const sc_lv<13> ap_const_lv13_14;
    static const sc_lv<1> ap_const_lv1_1;
    static const sc_lv<32> ap_const_lv32_FFFFFFFF;
    static const sc_lv<32> ap_const_lv32_2;
    static const sc_lv<32> ap_const_lv32_4;
    static const sc_lv<32> ap_const_lv32_6;
    static const sc_lv<32> ap_const_lv32_8;
    static const sc_lv<5> ap_const_lv5_3;
    // Thread declarations
    void thread_ap_clk_no_reset_();
    void thread_ap_done();
    void thread_ap_idle();
    void thread_ap_ready();
    void thread_ap_sig_bdd_121();
    void thread_ap_sig_bdd_135();
    void thread_ap_sig_bdd_82();
    void thread_dst_data_stream_0_V_din();
    void thread_dst_data_stream_0_V_write();
    void thread_flip2_1_fu_423_p2();
    void thread_flip2_2_fu_435_p3();
    void thread_flip4_1_fu_443_p2();
    void thread_flip4_2_fu_455_p3();
    void thread_flip8_1_fu_475_p2();
    void thread_flip8_2_fu_487_p3();
    void thread_ges();
    void thread_ges_ap_vld();
    void thread_grp_fu_190_ce();
    void thread_grp_fu_190_p0();
    void thread_grp_fu_190_p1();
    void thread_grp_fu_195_ce();
    void thread_grp_fu_195_opcode();
    void thread_grp_fu_195_p0();
    void thread_grp_fu_195_p1();
    void thread_grp_fu_199_ce();
    void thread_grp_fu_199_p0();
    void thread_i_V_fu_252_p2();
    void thread_j_V_fu_283_p2();
    void thread_not4_fu_289_p2();
    void thread_not_fu_258_p2();
    void thread_not_or_cond_fu_309_p2();
    void thread_notlhs_fu_303_p2();
    void thread_notrhs_fu_263_p2();
    void thread_op2_assign_3_fu_222_p2();
    void thread_op2_assign_fu_212_p2();
    void thread_or_cond5_fu_481_p2();
    void thread_or_cond_fu_294_p2();
    void thread_prev_2_fu_362_p3();
    void thread_prev_3_fu_370_p3();
    void thread_prevcol_1_fu_299_p1();
    void thread_prevcol_2_fu_378_p3();
    void thread_prevcol_3_fu_385_p3();
    void thread_retval_i4_cast_fu_208_p1();
    void thread_retval_i_cast_fu_218_p1();
    void thread_retval_s_fu_344_p2();
    void thread_rowcnt_1_fu_410_p2();
    void thread_rowcnt_2_fu_416_p3();
    void thread_sel_tmp10_v_cast_cast_fu_403_p3();
    void thread_sel_tmp1_fu_356_p2();
    void thread_sel_tmp_fu_350_p2();
    void thread_src_data_stream_0_V_read();
    void thread_tmp_10_fu_429_p2();
    void thread_tmp_11_fu_449_p2();
    void thread_tmp_12_fu_463_p2();
    void thread_tmp_13_fu_469_p2();
    void thread_tmp_15_fu_329_p2();
    void thread_tmp_16_cast_fu_274_p1();
    void thread_tmp_16_fu_339_p2();
    void thread_tmp_1_fu_495_p1();
    void thread_tmp_25_cast_fu_335_p1();
    void thread_tmp_2_fu_269_p1();
    void thread_tmp_4_fu_278_p2();
    void thread_tmp_5_fu_500_p1();
    void thread_tmp_cast_fu_243_p1();
    void thread_tmp_s_fu_247_p2();
    void thread_ap_NS_fsm();
};

}

using namespace ap_rtl;

#endif
