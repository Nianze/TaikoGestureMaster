// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2013.2
// Copyright (C) 2013 Xilinx Inc. All rights reserved.
// 
// ===========================================================

#include "finger_counter.h"
#include "AESL_pkg.h"

using namespace std;

namespace ap_rtl {

const sc_logic finger_counter::ap_const_logic_1 = sc_dt::Log_1;
const sc_logic finger_counter::ap_const_logic_0 = sc_dt::Log_0;
const sc_lv<2> finger_counter::ap_ST_st1_fsm_0 = "00";
const sc_lv<2> finger_counter::ap_ST_st2_fsm_1 = "1";
const sc_lv<2> finger_counter::ap_ST_pp0_stg0_fsm_2 = "10";
const sc_lv<1> finger_counter::ap_const_lv1_0 = "0";
const sc_lv<12> finger_counter::ap_const_lv12_0 = "000000000000";
const sc_lv<8> finger_counter::ap_const_lv8_0 = "00000000";
const sc_lv<13> finger_counter::ap_const_lv13_1 = "1";
const sc_lv<12> finger_counter::ap_const_lv12_1 = "1";

finger_counter::finger_counter(sc_module_name name) : sc_module(name), mVcdFile(0) {

    SC_METHOD(thread_ap_clk_no_reset_);
    dont_initialize();
    sensitive << ( ap_clk.pos() );

    SC_METHOD(thread_ap_done);
    sensitive << ( ap_done_reg );
    sensitive << ( ap_CS_fsm );
    sensitive << ( tmp_s_fu_153_p2 );

    SC_METHOD(thread_ap_idle);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_ready);
    sensitive << ( ap_CS_fsm );
    sensitive << ( tmp_s_fu_153_p2 );

    SC_METHOD(thread_ap_sig_bdd_102);
    sensitive << ( dst_data_stream_0_V_full_n );
    sensitive << ( dst_data_stream_1_V_full_n );
    sensitive << ( dst_data_stream_2_V_full_n );
    sensitive << ( ap_reg_ppstg_tmp_7_reg_267_pp0_it1 );
    sensitive << ( ap_reg_ppstg_not_or_cond_reg_280_pp0_it1 );

    SC_METHOD(thread_ap_sig_bdd_47);
    sensitive << ( ap_start );
    sensitive << ( ap_done_reg );

    SC_METHOD(thread_ap_sig_bdd_82);
    sensitive << ( src_data_stream_0_V_empty_n );
    sensitive << ( tmp_7_reg_267 );
    sensitive << ( or_cond_reg_276 );

    SC_METHOD(thread_dst_data_stream_0_V_din);
    sensitive << ( ap_CS_fsm );
    sensitive << ( ap_sig_bdd_82 );
    sensitive << ( ap_reg_ppiten_pp0_it1 );
    sensitive << ( ap_reg_ppstg_tmp_7_reg_267_pp0_it1 );
    sensitive << ( ap_reg_ppstg_not_or_cond_reg_280_pp0_it1 );
    sensitive << ( ap_sig_bdd_102 );
    sensitive << ( ap_reg_ppiten_pp0_it2 );
    sensitive << ( pixel_in_val_fu_58 );

    SC_METHOD(thread_dst_data_stream_0_V_write);
    sensitive << ( ap_CS_fsm );
    sensitive << ( ap_sig_bdd_82 );
    sensitive << ( ap_reg_ppiten_pp0_it1 );
    sensitive << ( ap_reg_ppstg_tmp_7_reg_267_pp0_it1 );
    sensitive << ( ap_reg_ppstg_not_or_cond_reg_280_pp0_it1 );
    sensitive << ( ap_sig_bdd_102 );
    sensitive << ( ap_reg_ppiten_pp0_it2 );

    SC_METHOD(thread_dst_data_stream_1_V_din);
    sensitive << ( ap_CS_fsm );
    sensitive << ( ap_sig_bdd_82 );
    sensitive << ( ap_reg_ppiten_pp0_it1 );
    sensitive << ( ap_reg_ppstg_tmp_7_reg_267_pp0_it1 );
    sensitive << ( ap_reg_ppstg_not_or_cond_reg_280_pp0_it1 );
    sensitive << ( ap_sig_bdd_102 );
    sensitive << ( ap_reg_ppiten_pp0_it2 );
    sensitive << ( pixel_in_val_fu_58 );

    SC_METHOD(thread_dst_data_stream_1_V_write);
    sensitive << ( ap_CS_fsm );
    sensitive << ( ap_sig_bdd_82 );
    sensitive << ( ap_reg_ppiten_pp0_it1 );
    sensitive << ( ap_reg_ppstg_tmp_7_reg_267_pp0_it1 );
    sensitive << ( ap_reg_ppstg_not_or_cond_reg_280_pp0_it1 );
    sensitive << ( ap_sig_bdd_102 );
    sensitive << ( ap_reg_ppiten_pp0_it2 );

    SC_METHOD(thread_dst_data_stream_2_V_din);
    sensitive << ( ap_CS_fsm );
    sensitive << ( ap_sig_bdd_82 );
    sensitive << ( ap_reg_ppiten_pp0_it1 );
    sensitive << ( ap_reg_ppstg_tmp_7_reg_267_pp0_it1 );
    sensitive << ( ap_reg_ppstg_not_or_cond_reg_280_pp0_it1 );
    sensitive << ( ap_sig_bdd_102 );
    sensitive << ( ap_reg_ppiten_pp0_it2 );
    sensitive << ( pixel_in_val_fu_58 );

    SC_METHOD(thread_dst_data_stream_2_V_write);
    sensitive << ( ap_CS_fsm );
    sensitive << ( ap_sig_bdd_82 );
    sensitive << ( ap_reg_ppiten_pp0_it1 );
    sensitive << ( ap_reg_ppstg_tmp_7_reg_267_pp0_it1 );
    sensitive << ( ap_reg_ppstg_not_or_cond_reg_280_pp0_it1 );
    sensitive << ( ap_sig_bdd_102 );
    sensitive << ( ap_reg_ppiten_pp0_it2 );

    SC_METHOD(thread_i_V_fu_158_p2);
    sensitive << ( t_V_5_reg_101 );

    SC_METHOD(thread_j_V_fu_184_p2);
    sensitive << ( t_V_reg_112 );

    SC_METHOD(thread_not4_fu_190_p2);
    sensitive << ( ap_CS_fsm );
    sensitive << ( src_cols_V_read );
    sensitive << ( t_V_reg_112 );
    sensitive << ( tmp_7_fu_179_p2 );
    sensitive << ( ap_reg_ppiten_pp0_it0 );
    sensitive << ( ap_sig_bdd_82 );
    sensitive << ( ap_reg_ppiten_pp0_it1 );
    sensitive << ( ap_sig_bdd_102 );
    sensitive << ( ap_reg_ppiten_pp0_it2 );

    SC_METHOD(thread_not_fu_164_p2);
    sensitive << ( ap_CS_fsm );
    sensitive << ( src_rows_V_read );
    sensitive << ( tmp_s_fu_153_p2 );
    sensitive << ( t_V_5_reg_101 );

    SC_METHOD(thread_not_or_cond_fu_206_p2);
    sensitive << ( notrhs_reg_262 );
    sensitive << ( notlhs_fu_200_p2 );

    SC_METHOD(thread_notlhs_fu_200_p2);
    sensitive << ( ap_CS_fsm );
    sensitive << ( t_V_reg_112 );
    sensitive << ( tmp_7_fu_179_p2 );
    sensitive << ( ap_reg_ppiten_pp0_it0 );
    sensitive << ( ap_sig_bdd_82 );
    sensitive << ( ap_reg_ppiten_pp0_it1 );
    sensitive << ( ap_sig_bdd_102 );
    sensitive << ( ap_reg_ppiten_pp0_it2 );

    SC_METHOD(thread_notrhs_fu_169_p2);
    sensitive << ( ap_CS_fsm );
    sensitive << ( tmp_s_fu_153_p2 );
    sensitive << ( t_V_5_reg_101 );

    SC_METHOD(thread_op2_assign_3_fu_138_p2);
    sensitive << ( retval_i_cast_fu_134_p1 );

    SC_METHOD(thread_op2_assign_fu_128_p2);
    sensitive << ( retval_i4_cast_fu_124_p1 );

    SC_METHOD(thread_or_cond_fu_195_p2);
    sensitive << ( not_reg_257 );
    sensitive << ( not4_fu_190_p2 );

    SC_METHOD(thread_retval_i4_cast_fu_124_p1);
    sensitive << ( src_rows_V_read );

    SC_METHOD(thread_retval_i_cast_fu_134_p1);
    sensitive << ( src_cols_V_read );

    SC_METHOD(thread_src_data_stream_0_V_read);
    sensitive << ( ap_CS_fsm );
    sensitive << ( tmp_7_reg_267 );
    sensitive << ( or_cond_reg_276 );
    sensitive << ( ap_sig_bdd_82 );
    sensitive << ( ap_reg_ppiten_pp0_it1 );
    sensitive << ( ap_sig_bdd_102 );
    sensitive << ( ap_reg_ppiten_pp0_it2 );

    SC_METHOD(thread_tmp_7_fu_179_p2);
    sensitive << ( ap_CS_fsm );
    sensitive << ( op2_assign_3_reg_244 );
    sensitive << ( ap_reg_ppiten_pp0_it0 );
    sensitive << ( ap_sig_bdd_82 );
    sensitive << ( ap_reg_ppiten_pp0_it1 );
    sensitive << ( ap_sig_bdd_102 );
    sensitive << ( ap_reg_ppiten_pp0_it2 );
    sensitive << ( tmp_9_cast_fu_175_p1 );

    SC_METHOD(thread_tmp_9_cast_fu_175_p1);
    sensitive << ( t_V_reg_112 );

    SC_METHOD(thread_tmp_cast_fu_149_p1);
    sensitive << ( t_V_5_reg_101 );

    SC_METHOD(thread_tmp_s_fu_153_p2);
    sensitive << ( ap_CS_fsm );
    sensitive << ( op2_assign_reg_239 );
    sensitive << ( tmp_cast_fu_149_p1 );

    SC_METHOD(thread_ap_NS_fsm);
    sensitive << ( ap_CS_fsm );
    sensitive << ( ap_sig_bdd_47 );
    sensitive << ( tmp_s_fu_153_p2 );
    sensitive << ( tmp_7_fu_179_p2 );
    sensitive << ( ap_reg_ppiten_pp0_it0 );
    sensitive << ( ap_sig_bdd_82 );
    sensitive << ( ap_reg_ppiten_pp0_it1 );
    sensitive << ( ap_sig_bdd_102 );
    sensitive << ( ap_reg_ppiten_pp0_it2 );

    ap_done_reg = SC_LOGIC_0;
    ap_CS_fsm = "00";
    ap_reg_ppiten_pp0_it0 = SC_LOGIC_0;
    ap_reg_ppiten_pp0_it1 = SC_LOGIC_0;
    ap_reg_ppiten_pp0_it2 = SC_LOGIC_0;
    static int apTFileNum = 0;
    stringstream apTFilenSS;
    apTFilenSS << "finger_counter_sc_trace_" << apTFileNum ++;
    string apTFn = apTFilenSS.str();
    mVcdFile = sc_create_vcd_trace_file(apTFn.c_str());
    mVcdFile->set_time_unit(1, SC_PS);
    const char* dump_vcd = std::getenv("AP_WRITE_VCD");
    if (dump_vcd && string(dump_vcd) == "1" ) {
    sc_trace(mVcdFile, ap_clk, "(port)ap_clk");
    sc_trace(mVcdFile, ap_rst, "(port)ap_rst");
    sc_trace(mVcdFile, ap_start, "(port)ap_start");
    sc_trace(mVcdFile, ap_done, "(port)ap_done");
    sc_trace(mVcdFile, ap_continue, "(port)ap_continue");
    sc_trace(mVcdFile, ap_idle, "(port)ap_idle");
    sc_trace(mVcdFile, ap_ready, "(port)ap_ready");
    sc_trace(mVcdFile, src_rows_V_read, "(port)src_rows_V_read");
    sc_trace(mVcdFile, src_cols_V_read, "(port)src_cols_V_read");
    sc_trace(mVcdFile, src_data_stream_0_V_dout, "(port)src_data_stream_0_V_dout");
    sc_trace(mVcdFile, src_data_stream_0_V_empty_n, "(port)src_data_stream_0_V_empty_n");
    sc_trace(mVcdFile, src_data_stream_0_V_read, "(port)src_data_stream_0_V_read");
    sc_trace(mVcdFile, dst_data_stream_0_V_din, "(port)dst_data_stream_0_V_din");
    sc_trace(mVcdFile, dst_data_stream_0_V_full_n, "(port)dst_data_stream_0_V_full_n");
    sc_trace(mVcdFile, dst_data_stream_0_V_write, "(port)dst_data_stream_0_V_write");
    sc_trace(mVcdFile, dst_data_stream_1_V_din, "(port)dst_data_stream_1_V_din");
    sc_trace(mVcdFile, dst_data_stream_1_V_full_n, "(port)dst_data_stream_1_V_full_n");
    sc_trace(mVcdFile, dst_data_stream_1_V_write, "(port)dst_data_stream_1_V_write");
    sc_trace(mVcdFile, dst_data_stream_2_V_din, "(port)dst_data_stream_2_V_din");
    sc_trace(mVcdFile, dst_data_stream_2_V_full_n, "(port)dst_data_stream_2_V_full_n");
    sc_trace(mVcdFile, dst_data_stream_2_V_write, "(port)dst_data_stream_2_V_write");
    sc_trace(mVcdFile, ap_done_reg, "ap_done_reg");
    sc_trace(mVcdFile, ap_CS_fsm, "ap_CS_fsm");
    sc_trace(mVcdFile, t_V_reg_112, "t_V_reg_112");
    sc_trace(mVcdFile, ap_sig_bdd_47, "ap_sig_bdd_47");
    sc_trace(mVcdFile, op2_assign_fu_128_p2, "op2_assign_fu_128_p2");
    sc_trace(mVcdFile, op2_assign_reg_239, "op2_assign_reg_239");
    sc_trace(mVcdFile, op2_assign_3_fu_138_p2, "op2_assign_3_fu_138_p2");
    sc_trace(mVcdFile, op2_assign_3_reg_244, "op2_assign_3_reg_244");
    sc_trace(mVcdFile, i_V_fu_158_p2, "i_V_fu_158_p2");
    sc_trace(mVcdFile, i_V_reg_252, "i_V_reg_252");
    sc_trace(mVcdFile, not_fu_164_p2, "not_fu_164_p2");
    sc_trace(mVcdFile, not_reg_257, "not_reg_257");
    sc_trace(mVcdFile, tmp_s_fu_153_p2, "tmp_s_fu_153_p2");
    sc_trace(mVcdFile, notrhs_fu_169_p2, "notrhs_fu_169_p2");
    sc_trace(mVcdFile, notrhs_reg_262, "notrhs_reg_262");
    sc_trace(mVcdFile, tmp_7_fu_179_p2, "tmp_7_fu_179_p2");
    sc_trace(mVcdFile, tmp_7_reg_267, "tmp_7_reg_267");
    sc_trace(mVcdFile, ap_reg_ppiten_pp0_it0, "ap_reg_ppiten_pp0_it0");
    sc_trace(mVcdFile, or_cond_reg_276, "or_cond_reg_276");
    sc_trace(mVcdFile, ap_sig_bdd_82, "ap_sig_bdd_82");
    sc_trace(mVcdFile, ap_reg_ppiten_pp0_it1, "ap_reg_ppiten_pp0_it1");
    sc_trace(mVcdFile, ap_reg_ppstg_tmp_7_reg_267_pp0_it1, "ap_reg_ppstg_tmp_7_reg_267_pp0_it1");
    sc_trace(mVcdFile, not_or_cond_reg_280, "not_or_cond_reg_280");
    sc_trace(mVcdFile, ap_reg_ppstg_not_or_cond_reg_280_pp0_it1, "ap_reg_ppstg_not_or_cond_reg_280_pp0_it1");
    sc_trace(mVcdFile, ap_sig_bdd_102, "ap_sig_bdd_102");
    sc_trace(mVcdFile, ap_reg_ppiten_pp0_it2, "ap_reg_ppiten_pp0_it2");
    sc_trace(mVcdFile, j_V_fu_184_p2, "j_V_fu_184_p2");
    sc_trace(mVcdFile, or_cond_fu_195_p2, "or_cond_fu_195_p2");
    sc_trace(mVcdFile, not_or_cond_fu_206_p2, "not_or_cond_fu_206_p2");
    sc_trace(mVcdFile, t_V_5_reg_101, "t_V_5_reg_101");
    sc_trace(mVcdFile, pixel_in_val_fu_58, "pixel_in_val_fu_58");
    sc_trace(mVcdFile, retval_i4_cast_fu_124_p1, "retval_i4_cast_fu_124_p1");
    sc_trace(mVcdFile, retval_i_cast_fu_134_p1, "retval_i_cast_fu_134_p1");
    sc_trace(mVcdFile, tmp_cast_fu_149_p1, "tmp_cast_fu_149_p1");
    sc_trace(mVcdFile, tmp_9_cast_fu_175_p1, "tmp_9_cast_fu_175_p1");
    sc_trace(mVcdFile, not4_fu_190_p2, "not4_fu_190_p2");
    sc_trace(mVcdFile, notlhs_fu_200_p2, "notlhs_fu_200_p2");
    sc_trace(mVcdFile, ap_NS_fsm, "ap_NS_fsm");

    }
}

finger_counter::~finger_counter() {
    if (mVcdFile) 
        sc_close_vcd_trace_file(mVcdFile);

}

void finger_counter::thread_ap_clk_no_reset_() {
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_CS_fsm = ap_ST_st1_fsm_0;
    } else {
        ap_CS_fsm = ap_NS_fsm.read();
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_done_reg = ap_const_logic_0;
    } else {
        if (esl_seteq<1,1,1>(ap_const_logic_1, ap_continue.read())) {
            ap_done_reg = ap_const_logic_0;
        } else if ((esl_seteq<1,2,2>(ap_ST_st2_fsm_1, ap_CS_fsm.read()) && 
                    esl_seteq<1,1,1>(tmp_s_fu_153_p2.read(), ap_const_lv1_0))) {
            ap_done_reg = ap_const_logic_1;
        }
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_reg_ppiten_pp0_it0 = ap_const_logic_0;
    } else {
        if ((esl_seteq<1,2,2>(ap_ST_pp0_stg0_fsm_2, ap_CS_fsm.read()) && 
             !((ap_sig_bdd_82.read() && 
  esl_seteq<1,1,1>(ap_const_logic_1, ap_reg_ppiten_pp0_it1.read())) || (ap_sig_bdd_102.read() && 
  esl_seteq<1,1,1>(ap_const_logic_1, ap_reg_ppiten_pp0_it2.read()))) && 
             esl_seteq<1,1,1>(ap_const_lv1_0, tmp_7_fu_179_p2.read()))) {
            ap_reg_ppiten_pp0_it0 = ap_const_logic_0;
        } else if ((esl_seteq<1,2,2>(ap_ST_st2_fsm_1, ap_CS_fsm.read()) && 
                    !esl_seteq<1,1,1>(tmp_s_fu_153_p2.read(), ap_const_lv1_0))) {
            ap_reg_ppiten_pp0_it0 = ap_const_logic_1;
        }
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_reg_ppiten_pp0_it1 = ap_const_logic_0;
    } else {
        if ((esl_seteq<1,2,2>(ap_ST_pp0_stg0_fsm_2, ap_CS_fsm.read()) && 
             !((ap_sig_bdd_82.read() && 
  esl_seteq<1,1,1>(ap_const_logic_1, ap_reg_ppiten_pp0_it1.read())) || (ap_sig_bdd_102.read() && 
  esl_seteq<1,1,1>(ap_const_logic_1, ap_reg_ppiten_pp0_it2.read()))) && 
             !esl_seteq<1,1,1>(ap_const_lv1_0, tmp_7_fu_179_p2.read()))) {
            ap_reg_ppiten_pp0_it1 = ap_const_logic_1;
        } else if (((esl_seteq<1,2,2>(ap_ST_st2_fsm_1, ap_CS_fsm.read()) && 
                     !esl_seteq<1,1,1>(tmp_s_fu_153_p2.read(), ap_const_lv1_0)) || 
                    (esl_seteq<1,2,2>(ap_ST_pp0_stg0_fsm_2, ap_CS_fsm.read()) && 
                     !((ap_sig_bdd_82.read() && 
  esl_seteq<1,1,1>(ap_const_logic_1, ap_reg_ppiten_pp0_it1.read())) || (ap_sig_bdd_102.read() && 
  esl_seteq<1,1,1>(ap_const_logic_1, ap_reg_ppiten_pp0_it2.read()))) && 
                     esl_seteq<1,1,1>(ap_const_lv1_0, tmp_7_fu_179_p2.read())))) {
            ap_reg_ppiten_pp0_it1 = ap_const_logic_0;
        }
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_reg_ppiten_pp0_it2 = ap_const_logic_0;
    } else {
        if ((esl_seteq<1,2,2>(ap_ST_pp0_stg0_fsm_2, ap_CS_fsm.read()) && 
             !((ap_sig_bdd_82.read() && 
  esl_seteq<1,1,1>(ap_const_logic_1, ap_reg_ppiten_pp0_it1.read())) || (ap_sig_bdd_102.read() && 
  esl_seteq<1,1,1>(ap_const_logic_1, ap_reg_ppiten_pp0_it2.read()))))) {
            ap_reg_ppiten_pp0_it2 = ap_reg_ppiten_pp0_it1.read();
        } else if ((esl_seteq<1,2,2>(ap_ST_st2_fsm_1, ap_CS_fsm.read()) && 
                    !esl_seteq<1,1,1>(tmp_s_fu_153_p2.read(), ap_const_lv1_0))) {
            ap_reg_ppiten_pp0_it2 = ap_const_logic_0;
        }
    }
    if ((esl_seteq<1,2,2>(ap_ST_pp0_stg0_fsm_2, ap_CS_fsm.read()) && 
         !esl_seteq<1,1,1>(ap_const_lv1_0, tmp_7_reg_267.read()) && 
         !esl_seteq<1,1,1>(ap_const_lv1_0, or_cond_reg_276.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_reg_ppiten_pp0_it1.read()) && 
         !((ap_sig_bdd_82.read() && 
  esl_seteq<1,1,1>(ap_const_logic_1, ap_reg_ppiten_pp0_it1.read())) || (ap_sig_bdd_102.read() && 
  esl_seteq<1,1,1>(ap_const_logic_1, ap_reg_ppiten_pp0_it2.read()))))) {
        pixel_in_val_fu_58 = src_data_stream_0_V_dout.read();
    } else if ((esl_seteq<1,2,2>(ap_ST_st1_fsm_0, ap_CS_fsm.read()) && 
                !ap_sig_bdd_47.read())) {
        pixel_in_val_fu_58 = ap_const_lv8_0;
    }
    if ((esl_seteq<1,2,2>(ap_ST_pp0_stg0_fsm_2, ap_CS_fsm.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_reg_ppiten_pp0_it0.read()) && 
         !((ap_sig_bdd_82.read() && 
  esl_seteq<1,1,1>(ap_const_logic_1, ap_reg_ppiten_pp0_it1.read())) || (ap_sig_bdd_102.read() && 
  esl_seteq<1,1,1>(ap_const_logic_1, ap_reg_ppiten_pp0_it2.read()))) && 
         esl_seteq<1,1,1>(ap_const_lv1_0, tmp_7_fu_179_p2.read()))) {
        t_V_5_reg_101 = i_V_reg_252.read();
    } else if ((esl_seteq<1,2,2>(ap_ST_st1_fsm_0, ap_CS_fsm.read()) && 
                !ap_sig_bdd_47.read())) {
        t_V_5_reg_101 = ap_const_lv12_0;
    }
    if ((esl_seteq<1,2,2>(ap_ST_st2_fsm_1, ap_CS_fsm.read()) && 
         !esl_seteq<1,1,1>(tmp_s_fu_153_p2.read(), ap_const_lv1_0))) {
        t_V_reg_112 = ap_const_lv12_0;
    } else if ((esl_seteq<1,2,2>(ap_ST_pp0_stg0_fsm_2, ap_CS_fsm.read()) && 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_reg_ppiten_pp0_it0.read()) && 
                !((ap_sig_bdd_82.read() && 
  esl_seteq<1,1,1>(ap_const_logic_1, ap_reg_ppiten_pp0_it1.read())) || (ap_sig_bdd_102.read() && 
  esl_seteq<1,1,1>(ap_const_logic_1, ap_reg_ppiten_pp0_it2.read()))) && 
                !esl_seteq<1,1,1>(ap_const_lv1_0, tmp_7_fu_179_p2.read()))) {
        t_V_reg_112 = j_V_fu_184_p2.read();
    }
    if ((esl_seteq<1,2,2>(ap_ST_pp0_stg0_fsm_2, ap_CS_fsm.read()) && !((ap_sig_bdd_82.read() && 
  esl_seteq<1,1,1>(ap_const_logic_1, ap_reg_ppiten_pp0_it1.read())) || (ap_sig_bdd_102.read() && 
  esl_seteq<1,1,1>(ap_const_logic_1, ap_reg_ppiten_pp0_it2.read()))))) {
        ap_reg_ppstg_not_or_cond_reg_280_pp0_it1 = not_or_cond_reg_280.read();
        ap_reg_ppstg_tmp_7_reg_267_pp0_it1 = tmp_7_reg_267.read();
    }
    if (esl_seteq<1,2,2>(ap_ST_st2_fsm_1, ap_CS_fsm.read())) {
        i_V_reg_252 = i_V_fu_158_p2.read();
    }
    if ((esl_seteq<1,2,2>(ap_ST_pp0_stg0_fsm_2, ap_CS_fsm.read()) && esl_seteq<1,1,1>(ap_const_logic_1, ap_reg_ppiten_pp0_it0.read()) && !((ap_sig_bdd_82.read() && 
  esl_seteq<1,1,1>(ap_const_logic_1, ap_reg_ppiten_pp0_it1.read())) || (ap_sig_bdd_102.read() && 
  esl_seteq<1,1,1>(ap_const_logic_1, ap_reg_ppiten_pp0_it2.read()))) && !esl_seteq<1,1,1>(ap_const_lv1_0, tmp_7_fu_179_p2.read()))) {
        not_or_cond_reg_280 = not_or_cond_fu_206_p2.read();
        or_cond_reg_276 = or_cond_fu_195_p2.read();
    }
    if ((esl_seteq<1,2,2>(ap_ST_st2_fsm_1, ap_CS_fsm.read()) && !esl_seteq<1,1,1>(tmp_s_fu_153_p2.read(), ap_const_lv1_0))) {
        not_reg_257 = not_fu_164_p2.read();
        notrhs_reg_262 = notrhs_fu_169_p2.read();
    }
    if ((esl_seteq<1,2,2>(ap_ST_st1_fsm_0, ap_CS_fsm.read()) && !ap_sig_bdd_47.read())) {
        op2_assign_3_reg_244 = op2_assign_3_fu_138_p2.read();
        op2_assign_reg_239 = op2_assign_fu_128_p2.read();
    }
    if ((esl_seteq<1,2,2>(ap_ST_pp0_stg0_fsm_2, ap_CS_fsm.read()) && esl_seteq<1,1,1>(ap_const_logic_1, ap_reg_ppiten_pp0_it0.read()) && !((ap_sig_bdd_82.read() && 
  esl_seteq<1,1,1>(ap_const_logic_1, ap_reg_ppiten_pp0_it1.read())) || (ap_sig_bdd_102.read() && 
  esl_seteq<1,1,1>(ap_const_logic_1, ap_reg_ppiten_pp0_it2.read()))))) {
        tmp_7_reg_267 = tmp_7_fu_179_p2.read();
    }
}

void finger_counter::thread_ap_done() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_done_reg.read()) || 
         (esl_seteq<1,2,2>(ap_ST_st2_fsm_1, ap_CS_fsm.read()) && 
          esl_seteq<1,1,1>(tmp_s_fu_153_p2.read(), ap_const_lv1_0)))) {
        ap_done = ap_const_logic_1;
    } else {
        ap_done = ap_const_logic_0;
    }
}

void finger_counter::thread_ap_idle() {
    if ((!esl_seteq<1,1,1>(ap_const_logic_1, ap_start.read()) && 
         esl_seteq<1,2,2>(ap_ST_st1_fsm_0, ap_CS_fsm.read()))) {
        ap_idle = ap_const_logic_1;
    } else {
        ap_idle = ap_const_logic_0;
    }
}

void finger_counter::thread_ap_ready() {
    if ((esl_seteq<1,2,2>(ap_ST_st2_fsm_1, ap_CS_fsm.read()) && 
         esl_seteq<1,1,1>(tmp_s_fu_153_p2.read(), ap_const_lv1_0))) {
        ap_ready = ap_const_logic_1;
    } else {
        ap_ready = ap_const_logic_0;
    }
}

void finger_counter::thread_ap_sig_bdd_102() {
    ap_sig_bdd_102 = ((esl_seteq<1,1,1>(dst_data_stream_0_V_full_n.read(), ap_const_logic_0) && 
  !esl_seteq<1,1,1>(ap_const_lv1_0, ap_reg_ppstg_tmp_7_reg_267_pp0_it1.read()) && 
  !esl_seteq<1,1,1>(ap_const_lv1_0, ap_reg_ppstg_not_or_cond_reg_280_pp0_it1.read())) || (!esl_seteq<1,1,1>(ap_const_lv1_0, ap_reg_ppstg_tmp_7_reg_267_pp0_it1.read()) && 
  !esl_seteq<1,1,1>(ap_const_lv1_0, ap_reg_ppstg_not_or_cond_reg_280_pp0_it1.read()) && 
  esl_seteq<1,1,1>(dst_data_stream_1_V_full_n.read(), ap_const_logic_0)) || (!esl_seteq<1,1,1>(ap_const_lv1_0, ap_reg_ppstg_tmp_7_reg_267_pp0_it1.read()) && 
  !esl_seteq<1,1,1>(ap_const_lv1_0, ap_reg_ppstg_not_or_cond_reg_280_pp0_it1.read()) && 
  esl_seteq<1,1,1>(dst_data_stream_2_V_full_n.read(), ap_const_logic_0)));
}

void finger_counter::thread_ap_sig_bdd_47() {
    ap_sig_bdd_47 = (esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_0) || esl_seteq<1,1,1>(ap_done_reg.read(), ap_const_logic_1));
}

void finger_counter::thread_ap_sig_bdd_82() {
    ap_sig_bdd_82 = (esl_seteq<1,1,1>(src_data_stream_0_V_empty_n.read(), ap_const_logic_0) && !esl_seteq<1,1,1>(ap_const_lv1_0, tmp_7_reg_267.read()) && !esl_seteq<1,1,1>(ap_const_lv1_0, or_cond_reg_276.read()));
}

void finger_counter::thread_dst_data_stream_0_V_din() {
    dst_data_stream_0_V_din = pixel_in_val_fu_58.read();
}

void finger_counter::thread_dst_data_stream_0_V_write() {
    if ((esl_seteq<1,2,2>(ap_ST_pp0_stg0_fsm_2, ap_CS_fsm.read()) && 
         !esl_seteq<1,1,1>(ap_const_lv1_0, ap_reg_ppstg_tmp_7_reg_267_pp0_it1.read()) && 
         !esl_seteq<1,1,1>(ap_const_lv1_0, ap_reg_ppstg_not_or_cond_reg_280_pp0_it1.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_reg_ppiten_pp0_it2.read()) && 
         !((ap_sig_bdd_82.read() && 
  esl_seteq<1,1,1>(ap_const_logic_1, ap_reg_ppiten_pp0_it1.read())) || (ap_sig_bdd_102.read() && 
  esl_seteq<1,1,1>(ap_const_logic_1, ap_reg_ppiten_pp0_it2.read()))))) {
        dst_data_stream_0_V_write = ap_const_logic_1;
    } else {
        dst_data_stream_0_V_write = ap_const_logic_0;
    }
}

void finger_counter::thread_dst_data_stream_1_V_din() {
    dst_data_stream_1_V_din = pixel_in_val_fu_58.read();
}

void finger_counter::thread_dst_data_stream_1_V_write() {
    if ((esl_seteq<1,2,2>(ap_ST_pp0_stg0_fsm_2, ap_CS_fsm.read()) && 
         !esl_seteq<1,1,1>(ap_const_lv1_0, ap_reg_ppstg_tmp_7_reg_267_pp0_it1.read()) && 
         !esl_seteq<1,1,1>(ap_const_lv1_0, ap_reg_ppstg_not_or_cond_reg_280_pp0_it1.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_reg_ppiten_pp0_it2.read()) && 
         !((ap_sig_bdd_82.read() && 
  esl_seteq<1,1,1>(ap_const_logic_1, ap_reg_ppiten_pp0_it1.read())) || (ap_sig_bdd_102.read() && 
  esl_seteq<1,1,1>(ap_const_logic_1, ap_reg_ppiten_pp0_it2.read()))))) {
        dst_data_stream_1_V_write = ap_const_logic_1;
    } else {
        dst_data_stream_1_V_write = ap_const_logic_0;
    }
}

void finger_counter::thread_dst_data_stream_2_V_din() {
    dst_data_stream_2_V_din = pixel_in_val_fu_58.read();
}

void finger_counter::thread_dst_data_stream_2_V_write() {
    if ((esl_seteq<1,2,2>(ap_ST_pp0_stg0_fsm_2, ap_CS_fsm.read()) && 
         !esl_seteq<1,1,1>(ap_const_lv1_0, ap_reg_ppstg_tmp_7_reg_267_pp0_it1.read()) && 
         !esl_seteq<1,1,1>(ap_const_lv1_0, ap_reg_ppstg_not_or_cond_reg_280_pp0_it1.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_reg_ppiten_pp0_it2.read()) && 
         !((ap_sig_bdd_82.read() && 
  esl_seteq<1,1,1>(ap_const_logic_1, ap_reg_ppiten_pp0_it1.read())) || (ap_sig_bdd_102.read() && 
  esl_seteq<1,1,1>(ap_const_logic_1, ap_reg_ppiten_pp0_it2.read()))))) {
        dst_data_stream_2_V_write = ap_const_logic_1;
    } else {
        dst_data_stream_2_V_write = ap_const_logic_0;
    }
}

void finger_counter::thread_i_V_fu_158_p2() {
    i_V_fu_158_p2 = (!t_V_5_reg_101.read().is_01() || !ap_const_lv12_1.is_01())? sc_lv<12>(): (sc_bigint<12>(t_V_5_reg_101.read()) + sc_biguint<12>(ap_const_lv12_1));
}

void finger_counter::thread_j_V_fu_184_p2() {
    j_V_fu_184_p2 = (!t_V_reg_112.read().is_01() || !ap_const_lv12_1.is_01())? sc_lv<12>(): (sc_bigint<12>(t_V_reg_112.read()) + sc_biguint<12>(ap_const_lv12_1));
}

void finger_counter::thread_not4_fu_190_p2() {
    not4_fu_190_p2 = (!t_V_reg_112.read().is_01() || !src_cols_V_read.read().is_01())? sc_lv<1>(): (sc_biguint<12>(t_V_reg_112.read()) < sc_biguint<12>(src_cols_V_read.read()));
}

void finger_counter::thread_not_fu_164_p2() {
    not_fu_164_p2 = (!t_V_5_reg_101.read().is_01() || !src_rows_V_read.read().is_01())? sc_lv<1>(): (sc_biguint<12>(t_V_5_reg_101.read()) < sc_biguint<12>(src_rows_V_read.read()));
}

void finger_counter::thread_not_or_cond_fu_206_p2() {
    not_or_cond_fu_206_p2 = (notrhs_reg_262.read() & notlhs_fu_200_p2.read());
}

void finger_counter::thread_notlhs_fu_200_p2() {
    notlhs_fu_200_p2 = (!t_V_reg_112.read().is_01() || !ap_const_lv12_0.is_01())? sc_lv<1>(): sc_lv<1>(t_V_reg_112.read() != ap_const_lv12_0);
}

void finger_counter::thread_notrhs_fu_169_p2() {
    notrhs_fu_169_p2 = (!t_V_5_reg_101.read().is_01() || !ap_const_lv12_0.is_01())? sc_lv<1>(): sc_lv<1>(t_V_5_reg_101.read() != ap_const_lv12_0);
}

void finger_counter::thread_op2_assign_3_fu_138_p2() {
    op2_assign_3_fu_138_p2 = (!retval_i_cast_fu_134_p1.read().is_01() || !ap_const_lv13_1.is_01())? sc_lv<13>(): (sc_bigint<13>(retval_i_cast_fu_134_p1.read()) + sc_biguint<13>(ap_const_lv13_1));
}

void finger_counter::thread_op2_assign_fu_128_p2() {
    op2_assign_fu_128_p2 = (!retval_i4_cast_fu_124_p1.read().is_01() || !ap_const_lv13_1.is_01())? sc_lv<13>(): (sc_bigint<13>(retval_i4_cast_fu_124_p1.read()) + sc_biguint<13>(ap_const_lv13_1));
}

void finger_counter::thread_or_cond_fu_195_p2() {
    or_cond_fu_195_p2 = (not_reg_257.read() & not4_fu_190_p2.read());
}

void finger_counter::thread_retval_i4_cast_fu_124_p1() {
    retval_i4_cast_fu_124_p1 = esl_zext<13,12>(src_rows_V_read.read());
}

void finger_counter::thread_retval_i_cast_fu_134_p1() {
    retval_i_cast_fu_134_p1 = esl_zext<13,12>(src_cols_V_read.read());
}

void finger_counter::thread_src_data_stream_0_V_read() {
    if ((esl_seteq<1,2,2>(ap_ST_pp0_stg0_fsm_2, ap_CS_fsm.read()) && 
         !esl_seteq<1,1,1>(ap_const_lv1_0, tmp_7_reg_267.read()) && 
         !esl_seteq<1,1,1>(ap_const_lv1_0, or_cond_reg_276.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_reg_ppiten_pp0_it1.read()) && 
         !((ap_sig_bdd_82.read() && 
  esl_seteq<1,1,1>(ap_const_logic_1, ap_reg_ppiten_pp0_it1.read())) || (ap_sig_bdd_102.read() && 
  esl_seteq<1,1,1>(ap_const_logic_1, ap_reg_ppiten_pp0_it2.read()))))) {
        src_data_stream_0_V_read = ap_const_logic_1;
    } else {
        src_data_stream_0_V_read = ap_const_logic_0;
    }
}

void finger_counter::thread_tmp_7_fu_179_p2() {
    tmp_7_fu_179_p2 = (!tmp_9_cast_fu_175_p1.read().is_01() || !op2_assign_3_reg_244.read().is_01())? sc_lv<1>(): (sc_biguint<13>(tmp_9_cast_fu_175_p1.read()) < sc_biguint<13>(op2_assign_3_reg_244.read()));
}

void finger_counter::thread_tmp_9_cast_fu_175_p1() {
    tmp_9_cast_fu_175_p1 = esl_zext<13,12>(t_V_reg_112.read());
}

void finger_counter::thread_tmp_cast_fu_149_p1() {
    tmp_cast_fu_149_p1 = esl_zext<13,12>(t_V_5_reg_101.read());
}

void finger_counter::thread_tmp_s_fu_153_p2() {
    tmp_s_fu_153_p2 = (!tmp_cast_fu_149_p1.read().is_01() || !op2_assign_reg_239.read().is_01())? sc_lv<1>(): (sc_biguint<13>(tmp_cast_fu_149_p1.read()) < sc_biguint<13>(op2_assign_reg_239.read()));
}

void finger_counter::thread_ap_NS_fsm() {
    switch (ap_CS_fsm.read().to_uint()) {
        case 0 : 
            if (!ap_sig_bdd_47.read()) {
                ap_NS_fsm = ap_ST_st2_fsm_1;
            } else {
                ap_NS_fsm = ap_ST_st1_fsm_0;
            }
            break;
        case 1 : 
            if (esl_seteq<1,1,1>(tmp_s_fu_153_p2.read(), ap_const_lv1_0)) {
                ap_NS_fsm = ap_ST_st1_fsm_0;
            } else {
                ap_NS_fsm = ap_ST_pp0_stg0_fsm_2;
            }
            break;
        case 2 : 
            if ((!(esl_seteq<1,2,2>(ap_ST_pp0_stg0_fsm_2, ap_CS_fsm.read()) && esl_seteq<1,1,1>(ap_const_logic_1, ap_reg_ppiten_pp0_it2.read()) && !((ap_sig_bdd_82.read() && 
  esl_seteq<1,1,1>(ap_const_logic_1, ap_reg_ppiten_pp0_it1.read())) || (ap_sig_bdd_102.read() && 
  esl_seteq<1,1,1>(ap_const_logic_1, ap_reg_ppiten_pp0_it2.read()))) && !esl_seteq<1,1,1>(ap_const_logic_1, ap_reg_ppiten_pp0_it1.read())) && !(esl_seteq<1,1,1>(ap_const_logic_1, ap_reg_ppiten_pp0_it0.read()) && !((ap_sig_bdd_82.read() && 
  esl_seteq<1,1,1>(ap_const_logic_1, ap_reg_ppiten_pp0_it1.read())) || (ap_sig_bdd_102.read() && 
  esl_seteq<1,1,1>(ap_const_logic_1, ap_reg_ppiten_pp0_it2.read()))) && esl_seteq<1,1,1>(ap_const_lv1_0, tmp_7_fu_179_p2.read()) && !esl_seteq<1,1,1>(ap_const_logic_1, ap_reg_ppiten_pp0_it1.read())))) {
                ap_NS_fsm = ap_ST_pp0_stg0_fsm_2;
            } else if (((esl_seteq<1,2,2>(ap_ST_pp0_stg0_fsm_2, ap_CS_fsm.read()) && 
  esl_seteq<1,1,1>(ap_const_logic_1, ap_reg_ppiten_pp0_it2.read()) && 
  !((ap_sig_bdd_82.read() && 
  esl_seteq<1,1,1>(ap_const_logic_1, ap_reg_ppiten_pp0_it1.read())) || (ap_sig_bdd_102.read() && 
  esl_seteq<1,1,1>(ap_const_logic_1, ap_reg_ppiten_pp0_it2.read()))) && 
  !esl_seteq<1,1,1>(ap_const_logic_1, ap_reg_ppiten_pp0_it1.read())) || (esl_seteq<1,1,1>(ap_const_logic_1, ap_reg_ppiten_pp0_it0.read()) && 
  !((ap_sig_bdd_82.read() && 
  esl_seteq<1,1,1>(ap_const_logic_1, ap_reg_ppiten_pp0_it1.read())) || (ap_sig_bdd_102.read() && 
  esl_seteq<1,1,1>(ap_const_logic_1, ap_reg_ppiten_pp0_it2.read()))) && 
  esl_seteq<1,1,1>(ap_const_lv1_0, tmp_7_fu_179_p2.read()) && 
  !esl_seteq<1,1,1>(ap_const_logic_1, ap_reg_ppiten_pp0_it1.read())))) {
                ap_NS_fsm = ap_ST_st2_fsm_1;
            } else {
                ap_NS_fsm = ap_ST_pp0_stg0_fsm_2;
            }
            break;
        default : 
            ap_NS_fsm = "XX";
            break;
    }
}
}

