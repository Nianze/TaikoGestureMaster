-- ==============================================================
-- RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
-- Version: 2013.2
-- Copyright (C) 2013 Xilinx Inc. All rights reserved.
-- 
-- ===========================================================

library IEEE;
use IEEE.std_logic_1164.all;
use IEEE.numeric_std.all;

entity Rgb2ycbcr is
port (
    ap_clk : IN STD_LOGIC;
    ap_rst : IN STD_LOGIC;
    ap_start : IN STD_LOGIC;
    ap_done : OUT STD_LOGIC;
    ap_continue : IN STD_LOGIC;
    ap_idle : OUT STD_LOGIC;
    ap_ready : OUT STD_LOGIC;
    rgb_rows_V_read : IN STD_LOGIC_VECTOR (11 downto 0);
    rgb_cols_V_read : IN STD_LOGIC_VECTOR (11 downto 0);
    rgb_data_stream_0_V_dout : IN STD_LOGIC_VECTOR (7 downto 0);
    rgb_data_stream_0_V_empty_n : IN STD_LOGIC;
    rgb_data_stream_0_V_read : OUT STD_LOGIC;
    rgb_data_stream_1_V_dout : IN STD_LOGIC_VECTOR (7 downto 0);
    rgb_data_stream_1_V_empty_n : IN STD_LOGIC;
    rgb_data_stream_1_V_read : OUT STD_LOGIC;
    rgb_data_stream_2_V_dout : IN STD_LOGIC_VECTOR (7 downto 0);
    rgb_data_stream_2_V_empty_n : IN STD_LOGIC;
    rgb_data_stream_2_V_read : OUT STD_LOGIC;
    ycbcr_data_stream_0_V_din : OUT STD_LOGIC_VECTOR (7 downto 0);
    ycbcr_data_stream_0_V_full_n : IN STD_LOGIC;
    ycbcr_data_stream_0_V_write : OUT STD_LOGIC );
end;


architecture behav of Rgb2ycbcr is 
    constant ap_const_logic_1 : STD_LOGIC := '1';
    constant ap_const_logic_0 : STD_LOGIC := '0';
    constant ap_ST_st1_fsm_0 : STD_LOGIC_VECTOR (1 downto 0) := "00";
    constant ap_ST_st2_fsm_1 : STD_LOGIC_VECTOR (1 downto 0) := "01";
    constant ap_ST_pp0_stg0_fsm_2 : STD_LOGIC_VECTOR (1 downto 0) := "10";
    constant ap_const_lv1_0 : STD_LOGIC_VECTOR (0 downto 0) := "0";
    constant ap_const_lv12_0 : STD_LOGIC_VECTOR (11 downto 0) := "000000000000";
    constant ap_const_lv12_1 : STD_LOGIC_VECTOR (11 downto 0) := "000000000001";
    constant ap_const_lv13_B : STD_LOGIC_VECTOR (12 downto 0) := "0000000001011";
    constant ap_const_lv14_1B : STD_LOGIC_VECTOR (13 downto 0) := "00000000011011";
    constant ap_const_lv14_15 : STD_LOGIC_VECTOR (13 downto 0) := "00000000010101";
    constant ap_const_lv14_2000 : STD_LOGIC_VECTOR (13 downto 0) := "10000000000000";
    constant ap_const_lv2_0 : STD_LOGIC_VECTOR (1 downto 0) := "00";
    constant ap_const_lv1_1 : STD_LOGIC_VECTOR (0 downto 0) := "1";
    constant ap_const_lv5_0 : STD_LOGIC_VECTOR (4 downto 0) := "00000";
    constant ap_const_lv32_6 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000110";
    constant ap_const_lv32_E : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001110";
    constant ap_const_lv10_1 : STD_LOGIC_VECTOR (9 downto 0) := "0000000001";
    constant ap_const_lv6_0 : STD_LOGIC_VECTOR (5 downto 0) := "000000";
    constant ap_const_lv32_D : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001101";
    constant ap_const_lv8_55 : STD_LOGIC_VECTOR (7 downto 0) := "01010101";
    constant ap_const_lv8_8F : STD_LOGIC_VECTOR (7 downto 0) := "10001111";
    constant ap_const_lv8_87 : STD_LOGIC_VECTOR (7 downto 0) := "10000111";
    constant ap_const_lv8_BE : STD_LOGIC_VECTOR (7 downto 0) := "10111110";

    signal ap_done_reg : STD_LOGIC := '0';
    signal ap_CS_fsm : STD_LOGIC_VECTOR (1 downto 0) := "00";
    signal t_V_reg_138 : STD_LOGIC_VECTOR (11 downto 0);
    signal ap_sig_bdd_47 : BOOLEAN;
    signal i_V_fu_155_p2 : STD_LOGIC_VECTOR (11 downto 0);
    signal i_V_reg_394 : STD_LOGIC_VECTOR (11 downto 0);
    signal exitcond_fu_161_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal exitcond_reg_399 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_reg_ppiten_pp0_it0 : STD_LOGIC := '0';
    signal ap_sig_bdd_71 : BOOLEAN;
    signal ap_reg_ppiten_pp0_it1 : STD_LOGIC := '0';
    signal ap_reg_ppiten_pp0_it2 : STD_LOGIC := '0';
    signal ap_reg_ppiten_pp0_it3 : STD_LOGIC := '0';
    signal ap_reg_ppiten_pp0_it4 : STD_LOGIC := '0';
    signal ap_reg_ppiten_pp0_it5 : STD_LOGIC := '0';
    signal ap_reg_ppiten_pp0_it6 : STD_LOGIC := '0';
    signal ap_reg_ppiten_pp0_it7 : STD_LOGIC := '0';
    signal ap_reg_ppstg_exitcond_reg_399_pp0_it7 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_sig_bdd_91 : BOOLEAN;
    signal ap_reg_ppiten_pp0_it8 : STD_LOGIC := '0';
    signal ap_reg_ppstg_exitcond_reg_399_pp0_it1 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_reg_ppstg_exitcond_reg_399_pp0_it2 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_reg_ppstg_exitcond_reg_399_pp0_it3 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_reg_ppstg_exitcond_reg_399_pp0_it4 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_reg_ppstg_exitcond_reg_399_pp0_it5 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_reg_ppstg_exitcond_reg_399_pp0_it6 : STD_LOGIC_VECTOR (0 downto 0);
    signal j_V_fu_166_p2 : STD_LOGIC_VECTOR (11 downto 0);
    signal tmp_11_reg_408 : STD_LOGIC_VECTOR (7 downto 0);
    signal ap_reg_ppstg_tmp_11_reg_408_pp0_it2 : STD_LOGIC_VECTOR (7 downto 0);
    signal ap_reg_ppstg_tmp_11_reg_408_pp0_it3 : STD_LOGIC_VECTOR (7 downto 0);
    signal ap_reg_ppstg_tmp_11_reg_408_pp0_it4 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_12_reg_414 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_13_reg_419 : STD_LOGIC_VECTOR (7 downto 0);
    signal ap_reg_ppstg_tmp_13_reg_419_pp0_it2 : STD_LOGIC_VECTOR (7 downto 0);
    signal ap_reg_ppstg_tmp_13_reg_419_pp0_it3 : STD_LOGIC_VECTOR (7 downto 0);
    signal ap_reg_ppstg_tmp_13_reg_419_pp0_it4 : STD_LOGIC_VECTOR (7 downto 0);
    signal ap_reg_ppstg_tmp_13_reg_419_pp0_it5 : STD_LOGIC_VECTOR (7 downto 0);
    signal ap_reg_ppstg_tmp_13_reg_419_pp0_it6 : STD_LOGIC_VECTOR (7 downto 0);
    signal OP2_V_1_cast_fu_172_p1 : STD_LOGIC_VECTOR (13 downto 0);
    signal OP2_V_1_cast_reg_426 : STD_LOGIC_VECTOR (13 downto 0);
    signal ap_reg_ppstg_OP2_V_1_cast_reg_426_pp0_it3 : STD_LOGIC_VECTOR (13 downto 0);
    signal grp_fu_178_p2 : STD_LOGIC_VECTOR (12 downto 0);
    signal r_V_9_reg_437 : STD_LOGIC_VECTOR (12 downto 0);
    signal grp_fu_184_p2 : STD_LOGIC_VECTOR (13 downto 0);
    signal r_V_14_reg_442 : STD_LOGIC_VECTOR (13 downto 0);
    signal r_V_10_fu_201_p2 : STD_LOGIC_VECTOR (13 downto 0);
    signal r_V_10_reg_447 : STD_LOGIC_VECTOR (13 downto 0);
    signal r_V_13_fu_218_p2 : STD_LOGIC_VECTOR (10 downto 0);
    signal r_V_13_reg_452 : STD_LOGIC_VECTOR (10 downto 0);
    signal r_V_16_fu_240_p2 : STD_LOGIC_VECTOR (14 downto 0);
    signal r_V_16_reg_457 : STD_LOGIC_VECTOR (14 downto 0);
    signal r_V_11_fu_246_p2 : STD_LOGIC_VECTOR (13 downto 0);
    signal r_V_11_reg_462 : STD_LOGIC_VECTOR (13 downto 0);
    signal ret_V_cast_fu_269_p1 : STD_LOGIC_VECTOR (9 downto 0);
    signal tmp_fu_259_p4_temp: signed (9-1 downto 0);
    signal ret_V_cast_reg_467 : STD_LOGIC_VECTOR (9 downto 0);
    signal tmp_4_reg_473 : STD_LOGIC_VECTOR (0 downto 0);
    signal ret_V_fu_285_p2 : STD_LOGIC_VECTOR (9 downto 0);
    signal ret_V_reg_478 : STD_LOGIC_VECTOR (9 downto 0);
    signal tmp_2_fu_291_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_2_reg_483 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_6_fu_338_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_6_reg_488 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_7_fu_344_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_7_reg_493 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_8_fu_350_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_8_reg_498 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_9_fu_356_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_9_reg_503 : STD_LOGIC_VECTOR (0 downto 0);
    signal exitcond3_fu_150_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal t_V_2_reg_127 : STD_LOGIC_VECTOR (11 downto 0);
    signal grp_fu_178_p0 : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_fu_178_p1 : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_fu_184_p0 : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_fu_184_p1 : STD_LOGIC_VECTOR (4 downto 0);
    signal grp_fu_190_p0 : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_fu_190_p1 : STD_LOGIC_VECTOR (4 downto 0);
    signal rhs_V_cast_fu_198_p1 : STD_LOGIC_VECTOR (13 downto 0);
    signal p_shl8_fu_207_p3 : STD_LOGIC_VECTOR (9 downto 0);
    signal p_shl8_cast_fu_214_p1 : STD_LOGIC_VECTOR (10 downto 0);
    signal OP2_V_cast1_fu_195_p1 : STD_LOGIC_VECTOR (10 downto 0);
    signal r_V_15_fu_224_p4 : STD_LOGIC_VECTOR (13 downto 0);
    signal lhs_V_2_cast_fu_233_p1 : STD_LOGIC_VECTOR (14 downto 0);
    signal rhs_V_4_cast_fu_237_p1 : STD_LOGIC_VECTOR (14 downto 0);
    signal grp_fu_190_p2 : STD_LOGIC_VECTOR (13 downto 0);
    signal rhs_V_5_cast_fu_251_p1 : STD_LOGIC_VECTOR (14 downto 0);
    signal r_V_17_fu_254_p2 : STD_LOGIC_VECTOR (14 downto 0);
    signal tmp_fu_259_p4 : STD_LOGIC_VECTOR (8 downto 0);
    signal ret_V_fu_285_p0 : STD_LOGIC_VECTOR (9 downto 0);
    signal tmp_5_fu_281_p1 : STD_LOGIC_VECTOR (5 downto 0);
    signal r_V_fu_297_p3 : STD_LOGIC_VECTOR (12 downto 0);
    signal rhs_V_2_cast_fu_304_p1 : STD_LOGIC_VECTOR (13 downto 0);
    signal r_V_12_fu_308_p2 : STD_LOGIC_VECTOR (13 downto 0);
    signal p_2_fu_323_p3 : STD_LOGIC_VECTOR (9 downto 0);
    signal ret_V_1_fu_328_p3 : STD_LOGIC_VECTOR (9 downto 0);
    signal out_pixel_val_2_fu_334_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal out_pixel_val_1_fu_313_p4 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp3_fu_366_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp2_fu_362_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_cond7_fu_370_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_fu_178_ce : STD_LOGIC;
    signal grp_fu_184_ce : STD_LOGIC;
    signal grp_fu_190_ce : STD_LOGIC;
    signal ap_NS_fsm : STD_LOGIC_VECTOR (1 downto 0);
    signal grp_fu_178_p00 : STD_LOGIC_VECTOR (12 downto 0);
    signal grp_fu_184_p00 : STD_LOGIC_VECTOR (13 downto 0);
    signal or_cond7_fu_370_p2_temp: signed (1-1 downto 0);

    component image_filter_mul_8ns_4ns_13_3 IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        din0 : IN STD_LOGIC_VECTOR (7 downto 0);
        din1 : IN STD_LOGIC_VECTOR (3 downto 0);
        ce : IN STD_LOGIC;
        dout : OUT STD_LOGIC_VECTOR (12 downto 0) );
    end component;


    component image_filter_mul_8ns_5ns_14_3 IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        din0 : IN STD_LOGIC_VECTOR (7 downto 0);
        din1 : IN STD_LOGIC_VECTOR (4 downto 0);
        ce : IN STD_LOGIC;
        dout : OUT STD_LOGIC_VECTOR (13 downto 0) );
    end component;



begin
    image_filter_mul_8ns_4ns_13_3_U25 : component image_filter_mul_8ns_4ns_13_3
    generic map (
        ID => 25,
        NUM_STAGE => 3,
        din0_WIDTH => 8,
        din1_WIDTH => 4,
        dout_WIDTH => 13)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => grp_fu_178_p0,
        din1 => grp_fu_178_p1,
        ce => grp_fu_178_ce,
        dout => grp_fu_178_p2);

    image_filter_mul_8ns_5ns_14_3_U26 : component image_filter_mul_8ns_5ns_14_3
    generic map (
        ID => 26,
        NUM_STAGE => 3,
        din0_WIDTH => 8,
        din1_WIDTH => 5,
        dout_WIDTH => 14)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => grp_fu_184_p0,
        din1 => grp_fu_184_p1,
        ce => grp_fu_184_ce,
        dout => grp_fu_184_p2);

    image_filter_mul_8ns_5ns_14_3_U27 : component image_filter_mul_8ns_5ns_14_3
    generic map (
        ID => 27,
        NUM_STAGE => 3,
        din0_WIDTH => 8,
        din1_WIDTH => 5,
        dout_WIDTH => 14)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => grp_fu_190_p0,
        din1 => grp_fu_190_p1,
        ce => grp_fu_190_ce,
        dout => grp_fu_190_p2);




    -- the current state (ap_CS_fsm) of the state machine. --
    ap_CS_fsm_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_CS_fsm <= ap_ST_st1_fsm_0;
            else
                ap_CS_fsm <= ap_NS_fsm;
            end if;
        end if;
    end process;


    -- ap_done_reg assign process. --
    ap_done_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_done_reg <= ap_const_logic_0;
            else
                if ((ap_const_logic_1 = ap_continue)) then 
                    ap_done_reg <= ap_const_logic_0;
                elsif (((ap_ST_st2_fsm_1 = ap_CS_fsm) and not((ap_const_lv1_0 = exitcond3_fu_150_p2)))) then 
                    ap_done_reg <= ap_const_logic_1;
                end if; 
            end if;
        end if;
    end process;


    -- ap_reg_ppiten_pp0_it0 assign process. --
    ap_reg_ppiten_pp0_it0_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_reg_ppiten_pp0_it0 <= ap_const_logic_0;
            else
                if (((ap_ST_pp0_stg0_fsm_2 = ap_CS_fsm) and not(((ap_sig_bdd_71 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it1)) or (ap_sig_bdd_91 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it8)))) and not((exitcond_fu_161_p2 = ap_const_lv1_0)))) then 
                    ap_reg_ppiten_pp0_it0 <= ap_const_logic_0;
                elsif (((ap_ST_st2_fsm_1 = ap_CS_fsm) and (ap_const_lv1_0 = exitcond3_fu_150_p2))) then 
                    ap_reg_ppiten_pp0_it0 <= ap_const_logic_1;
                end if; 
            end if;
        end if;
    end process;


    -- ap_reg_ppiten_pp0_it1 assign process. --
    ap_reg_ppiten_pp0_it1_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_reg_ppiten_pp0_it1 <= ap_const_logic_0;
            else
                if (((ap_ST_pp0_stg0_fsm_2 = ap_CS_fsm) and not(((ap_sig_bdd_71 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it1)) or (ap_sig_bdd_91 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it8)))) and (exitcond_fu_161_p2 = ap_const_lv1_0))) then 
                    ap_reg_ppiten_pp0_it1 <= ap_const_logic_1;
                elsif ((((ap_ST_st2_fsm_1 = ap_CS_fsm) and (ap_const_lv1_0 = exitcond3_fu_150_p2)) or ((ap_ST_pp0_stg0_fsm_2 = ap_CS_fsm) and not(((ap_sig_bdd_71 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it1)) or (ap_sig_bdd_91 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it8)))) and not((exitcond_fu_161_p2 = ap_const_lv1_0))))) then 
                    ap_reg_ppiten_pp0_it1 <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    -- ap_reg_ppiten_pp0_it2 assign process. --
    ap_reg_ppiten_pp0_it2_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_reg_ppiten_pp0_it2 <= ap_const_logic_0;
            else
                if (((ap_ST_pp0_stg0_fsm_2 = ap_CS_fsm) and not(((ap_sig_bdd_71 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it1)) or (ap_sig_bdd_91 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it8)))))) then 
                    ap_reg_ppiten_pp0_it2 <= ap_reg_ppiten_pp0_it1;
                elsif (((ap_ST_st2_fsm_1 = ap_CS_fsm) and (ap_const_lv1_0 = exitcond3_fu_150_p2))) then 
                    ap_reg_ppiten_pp0_it2 <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    -- ap_reg_ppiten_pp0_it3 assign process. --
    ap_reg_ppiten_pp0_it3_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_reg_ppiten_pp0_it3 <= ap_const_logic_0;
            else
                if (((ap_ST_pp0_stg0_fsm_2 = ap_CS_fsm) and not(((ap_sig_bdd_71 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it1)) or (ap_sig_bdd_91 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it8)))))) then 
                    ap_reg_ppiten_pp0_it3 <= ap_reg_ppiten_pp0_it2;
                elsif (((ap_ST_st2_fsm_1 = ap_CS_fsm) and (ap_const_lv1_0 = exitcond3_fu_150_p2))) then 
                    ap_reg_ppiten_pp0_it3 <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    -- ap_reg_ppiten_pp0_it4 assign process. --
    ap_reg_ppiten_pp0_it4_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_reg_ppiten_pp0_it4 <= ap_const_logic_0;
            else
                if (((ap_ST_pp0_stg0_fsm_2 = ap_CS_fsm) and not(((ap_sig_bdd_71 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it1)) or (ap_sig_bdd_91 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it8)))))) then 
                    ap_reg_ppiten_pp0_it4 <= ap_reg_ppiten_pp0_it3;
                elsif (((ap_ST_st2_fsm_1 = ap_CS_fsm) and (ap_const_lv1_0 = exitcond3_fu_150_p2))) then 
                    ap_reg_ppiten_pp0_it4 <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    -- ap_reg_ppiten_pp0_it5 assign process. --
    ap_reg_ppiten_pp0_it5_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_reg_ppiten_pp0_it5 <= ap_const_logic_0;
            else
                if (((ap_ST_pp0_stg0_fsm_2 = ap_CS_fsm) and not(((ap_sig_bdd_71 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it1)) or (ap_sig_bdd_91 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it8)))))) then 
                    ap_reg_ppiten_pp0_it5 <= ap_reg_ppiten_pp0_it4;
                elsif (((ap_ST_st2_fsm_1 = ap_CS_fsm) and (ap_const_lv1_0 = exitcond3_fu_150_p2))) then 
                    ap_reg_ppiten_pp0_it5 <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    -- ap_reg_ppiten_pp0_it6 assign process. --
    ap_reg_ppiten_pp0_it6_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_reg_ppiten_pp0_it6 <= ap_const_logic_0;
            else
                if (((ap_ST_pp0_stg0_fsm_2 = ap_CS_fsm) and not(((ap_sig_bdd_71 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it1)) or (ap_sig_bdd_91 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it8)))))) then 
                    ap_reg_ppiten_pp0_it6 <= ap_reg_ppiten_pp0_it5;
                elsif (((ap_ST_st2_fsm_1 = ap_CS_fsm) and (ap_const_lv1_0 = exitcond3_fu_150_p2))) then 
                    ap_reg_ppiten_pp0_it6 <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    -- ap_reg_ppiten_pp0_it7 assign process. --
    ap_reg_ppiten_pp0_it7_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_reg_ppiten_pp0_it7 <= ap_const_logic_0;
            else
                if (((ap_ST_pp0_stg0_fsm_2 = ap_CS_fsm) and not(((ap_sig_bdd_71 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it1)) or (ap_sig_bdd_91 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it8)))))) then 
                    ap_reg_ppiten_pp0_it7 <= ap_reg_ppiten_pp0_it6;
                elsif (((ap_ST_st2_fsm_1 = ap_CS_fsm) and (ap_const_lv1_0 = exitcond3_fu_150_p2))) then 
                    ap_reg_ppiten_pp0_it7 <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    -- ap_reg_ppiten_pp0_it8 assign process. --
    ap_reg_ppiten_pp0_it8_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_reg_ppiten_pp0_it8 <= ap_const_logic_0;
            else
                if (((ap_ST_pp0_stg0_fsm_2 = ap_CS_fsm) and not(((ap_sig_bdd_71 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it1)) or (ap_sig_bdd_91 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it8)))))) then 
                    ap_reg_ppiten_pp0_it8 <= ap_reg_ppiten_pp0_it7;
                elsif (((ap_ST_st2_fsm_1 = ap_CS_fsm) and (ap_const_lv1_0 = exitcond3_fu_150_p2))) then 
                    ap_reg_ppiten_pp0_it8 <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    -- t_V_2_reg_127 assign process. --
    t_V_2_reg_127_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_ST_pp0_stg0_fsm_2 = ap_CS_fsm) and (ap_const_logic_1 = ap_reg_ppiten_pp0_it0) and not(((ap_sig_bdd_71 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it1)) or (ap_sig_bdd_91 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it8)))) and not((exitcond_fu_161_p2 = ap_const_lv1_0)))) then 
                t_V_2_reg_127 <= i_V_reg_394;
            elsif (((ap_ST_st1_fsm_0 = ap_CS_fsm) and not(ap_sig_bdd_47))) then 
                t_V_2_reg_127 <= ap_const_lv12_0;
            end if; 
        end if;
    end process;

    -- t_V_reg_138 assign process. --
    t_V_reg_138_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_ST_st2_fsm_1 = ap_CS_fsm) and (ap_const_lv1_0 = exitcond3_fu_150_p2))) then 
                t_V_reg_138 <= ap_const_lv12_0;
            elsif (((ap_ST_pp0_stg0_fsm_2 = ap_CS_fsm) and (ap_const_logic_1 = ap_reg_ppiten_pp0_it0) and not(((ap_sig_bdd_71 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it1)) or (ap_sig_bdd_91 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it8)))) and (exitcond_fu_161_p2 = ap_const_lv1_0))) then 
                t_V_reg_138 <= j_V_fu_166_p2;
            end if; 
        end if;
    end process;

    -- assign process. --
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_ST_pp0_stg0_fsm_2 = ap_CS_fsm) and (ap_const_logic_1 = ap_reg_ppiten_pp0_it2) and not(((ap_sig_bdd_71 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it1)) or (ap_sig_bdd_91 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it8)))) and (ap_const_lv1_0 = ap_reg_ppstg_exitcond_reg_399_pp0_it1))) then
                OP2_V_1_cast_reg_426(0) <= OP2_V_1_cast_fu_172_p1(0);
    OP2_V_1_cast_reg_426(1) <= OP2_V_1_cast_fu_172_p1(1);
    OP2_V_1_cast_reg_426(2) <= OP2_V_1_cast_fu_172_p1(2);
    OP2_V_1_cast_reg_426(3) <= OP2_V_1_cast_fu_172_p1(3);
    OP2_V_1_cast_reg_426(4) <= OP2_V_1_cast_fu_172_p1(4);
    OP2_V_1_cast_reg_426(5) <= OP2_V_1_cast_fu_172_p1(5);
    OP2_V_1_cast_reg_426(6) <= OP2_V_1_cast_fu_172_p1(6);
    OP2_V_1_cast_reg_426(7) <= OP2_V_1_cast_fu_172_p1(7);
            end if;
        end if;
    end process;

    -- assign process. --
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_ST_pp0_stg0_fsm_2 = ap_CS_fsm) and not(((ap_sig_bdd_71 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it1)) or (ap_sig_bdd_91 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it8)))))) then
                ap_reg_ppstg_OP2_V_1_cast_reg_426_pp0_it3(0) <= OP2_V_1_cast_reg_426(0);
    ap_reg_ppstg_OP2_V_1_cast_reg_426_pp0_it3(1) <= OP2_V_1_cast_reg_426(1);
    ap_reg_ppstg_OP2_V_1_cast_reg_426_pp0_it3(2) <= OP2_V_1_cast_reg_426(2);
    ap_reg_ppstg_OP2_V_1_cast_reg_426_pp0_it3(3) <= OP2_V_1_cast_reg_426(3);
    ap_reg_ppstg_OP2_V_1_cast_reg_426_pp0_it3(4) <= OP2_V_1_cast_reg_426(4);
    ap_reg_ppstg_OP2_V_1_cast_reg_426_pp0_it3(5) <= OP2_V_1_cast_reg_426(5);
    ap_reg_ppstg_OP2_V_1_cast_reg_426_pp0_it3(6) <= OP2_V_1_cast_reg_426(6);
    ap_reg_ppstg_OP2_V_1_cast_reg_426_pp0_it3(7) <= OP2_V_1_cast_reg_426(7);
                ap_reg_ppstg_exitcond_reg_399_pp0_it1 <= exitcond_reg_399;
                ap_reg_ppstg_exitcond_reg_399_pp0_it2 <= ap_reg_ppstg_exitcond_reg_399_pp0_it1;
                ap_reg_ppstg_exitcond_reg_399_pp0_it3 <= ap_reg_ppstg_exitcond_reg_399_pp0_it2;
                ap_reg_ppstg_exitcond_reg_399_pp0_it4 <= ap_reg_ppstg_exitcond_reg_399_pp0_it3;
                ap_reg_ppstg_exitcond_reg_399_pp0_it5 <= ap_reg_ppstg_exitcond_reg_399_pp0_it4;
                ap_reg_ppstg_exitcond_reg_399_pp0_it6 <= ap_reg_ppstg_exitcond_reg_399_pp0_it5;
                ap_reg_ppstg_exitcond_reg_399_pp0_it7 <= ap_reg_ppstg_exitcond_reg_399_pp0_it6;
                ap_reg_ppstg_tmp_11_reg_408_pp0_it2 <= tmp_11_reg_408;
                ap_reg_ppstg_tmp_11_reg_408_pp0_it3 <= ap_reg_ppstg_tmp_11_reg_408_pp0_it2;
                ap_reg_ppstg_tmp_11_reg_408_pp0_it4 <= ap_reg_ppstg_tmp_11_reg_408_pp0_it3;
                ap_reg_ppstg_tmp_13_reg_419_pp0_it2 <= tmp_13_reg_419;
                ap_reg_ppstg_tmp_13_reg_419_pp0_it3 <= ap_reg_ppstg_tmp_13_reg_419_pp0_it2;
                ap_reg_ppstg_tmp_13_reg_419_pp0_it4 <= ap_reg_ppstg_tmp_13_reg_419_pp0_it3;
                ap_reg_ppstg_tmp_13_reg_419_pp0_it5 <= ap_reg_ppstg_tmp_13_reg_419_pp0_it4;
                ap_reg_ppstg_tmp_13_reg_419_pp0_it6 <= ap_reg_ppstg_tmp_13_reg_419_pp0_it5;
            end if;
        end if;
    end process;

    -- assign process. --
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_ST_pp0_stg0_fsm_2 = ap_CS_fsm) and (ap_const_logic_1 = ap_reg_ppiten_pp0_it0) and not(((ap_sig_bdd_71 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it1)) or (ap_sig_bdd_91 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it8)))))) then
                exitcond_reg_399 <= exitcond_fu_161_p2;
            end if;
        end if;
    end process;

    -- assign process. --
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_ST_st2_fsm_1 = ap_CS_fsm)) then
                i_V_reg_394 <= i_V_fu_155_p2;
            end if;
        end if;
    end process;

    -- assign process. --
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_ST_pp0_stg0_fsm_2 = ap_CS_fsm) and (ap_const_logic_1 = ap_reg_ppiten_pp0_it5) and not(((ap_sig_bdd_71 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it1)) or (ap_sig_bdd_91 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it8)))) and (ap_const_lv1_0 = ap_reg_ppstg_exitcond_reg_399_pp0_it4))) then
                r_V_10_reg_447 <= r_V_10_fu_201_p2;
                r_V_13_reg_452 <= r_V_13_fu_218_p2;
                r_V_16_reg_457 <= r_V_16_fu_240_p2;
            end if;
        end if;
    end process;

    -- assign process. --
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_ST_pp0_stg0_fsm_2 = ap_CS_fsm) and (ap_const_logic_1 = ap_reg_ppiten_pp0_it6) and not(((ap_sig_bdd_71 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it1)) or (ap_sig_bdd_91 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it8)))) and (ap_const_lv1_0 = ap_reg_ppstg_exitcond_reg_399_pp0_it5))) then
                r_V_11_reg_462 <= r_V_11_fu_246_p2;
                ret_V_cast_reg_467 <= ret_V_cast_fu_269_p1;
                ret_V_reg_478 <= ret_V_fu_285_p2;
                tmp_2_reg_483 <= tmp_2_fu_291_p2;
                tmp_4_reg_473 <= r_V_17_fu_254_p2(14 downto 14);
            end if;
        end if;
    end process;

    -- assign process. --
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_ST_pp0_stg0_fsm_2 = ap_CS_fsm) and (ap_const_logic_1 = ap_reg_ppiten_pp0_it4) and not(((ap_sig_bdd_71 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it1)) or (ap_sig_bdd_91 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it8)))) and (ap_const_lv1_0 = ap_reg_ppstg_exitcond_reg_399_pp0_it3))) then
                r_V_14_reg_442 <= grp_fu_184_p2;
                r_V_9_reg_437 <= grp_fu_178_p2;
            end if;
        end if;
    end process;

    -- assign process. --
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_ST_pp0_stg0_fsm_2 = ap_CS_fsm) and (exitcond_reg_399 = ap_const_lv1_0) and (ap_const_logic_1 = ap_reg_ppiten_pp0_it1) and not(((ap_sig_bdd_71 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it1)) or (ap_sig_bdd_91 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it8)))))) then
                tmp_11_reg_408 <= rgb_data_stream_0_V_dout;
                tmp_12_reg_414 <= rgb_data_stream_1_V_dout;
                tmp_13_reg_419 <= rgb_data_stream_2_V_dout;
            end if;
        end if;
    end process;

    -- assign process. --
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_ST_pp0_stg0_fsm_2 = ap_CS_fsm) and (ap_const_logic_1 = ap_reg_ppiten_pp0_it7) and not(((ap_sig_bdd_71 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it1)) or (ap_sig_bdd_91 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it8)))) and (ap_const_lv1_0 = ap_reg_ppstg_exitcond_reg_399_pp0_it6))) then
                tmp_6_reg_488 <= tmp_6_fu_338_p2;
                tmp_7_reg_493 <= tmp_7_fu_344_p2;
                tmp_8_reg_498 <= tmp_8_fu_350_p2;
                tmp_9_reg_503 <= tmp_9_fu_356_p2;
            end if;
        end if;
    end process;
    OP2_V_1_cast_reg_426(13 downto 8) <= "000000";
    ap_reg_ppstg_OP2_V_1_cast_reg_426_pp0_it3(13 downto 8) <= "000000";

    -- the next state (ap_NS_fsm) of the state machine. --
    ap_NS_fsm_assign_proc : process (ap_CS_fsm , ap_sig_bdd_47 , exitcond_fu_161_p2 , ap_reg_ppiten_pp0_it0 , ap_sig_bdd_71 , ap_reg_ppiten_pp0_it1 , ap_reg_ppiten_pp0_it7 , ap_sig_bdd_91 , ap_reg_ppiten_pp0_it8 , exitcond3_fu_150_p2)
    begin
        case ap_CS_fsm is
            when ap_ST_st1_fsm_0 => 
                if (not(ap_sig_bdd_47)) then
                    ap_NS_fsm <= ap_ST_st2_fsm_1;
                else
                    ap_NS_fsm <= ap_ST_st1_fsm_0;
                end if;
            when ap_ST_st2_fsm_1 => 
                if (not((ap_const_lv1_0 = exitcond3_fu_150_p2))) then
                    ap_NS_fsm <= ap_ST_st1_fsm_0;
                else
                    ap_NS_fsm <= ap_ST_pp0_stg0_fsm_2;
                end if;
            when ap_ST_pp0_stg0_fsm_2 => 
                if ((not(((ap_ST_pp0_stg0_fsm_2 = ap_CS_fsm) and (ap_const_logic_1 = ap_reg_ppiten_pp0_it8) and not(((ap_sig_bdd_71 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it1)) or (ap_sig_bdd_91 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it8)))) and not((ap_const_logic_1 = ap_reg_ppiten_pp0_it7)))) and not(((ap_const_logic_1 = ap_reg_ppiten_pp0_it0) and not(((ap_sig_bdd_71 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it1)) or (ap_sig_bdd_91 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it8)))) and not((exitcond_fu_161_p2 = ap_const_lv1_0)) and not((ap_const_logic_1 = ap_reg_ppiten_pp0_it1)))))) then
                    ap_NS_fsm <= ap_ST_pp0_stg0_fsm_2;
                elsif ((((ap_ST_pp0_stg0_fsm_2 = ap_CS_fsm) and (ap_const_logic_1 = ap_reg_ppiten_pp0_it8) and not(((ap_sig_bdd_71 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it1)) or (ap_sig_bdd_91 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it8)))) and not((ap_const_logic_1 = ap_reg_ppiten_pp0_it7))) or ((ap_const_logic_1 = ap_reg_ppiten_pp0_it0) and not(((ap_sig_bdd_71 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it1)) or (ap_sig_bdd_91 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it8)))) and not((exitcond_fu_161_p2 = ap_const_lv1_0)) and not((ap_const_logic_1 = ap_reg_ppiten_pp0_it1))))) then
                    ap_NS_fsm <= ap_ST_st2_fsm_1;
                else
                    ap_NS_fsm <= ap_ST_pp0_stg0_fsm_2;
                end if;
            when others =>  
                ap_NS_fsm <= "XX";
        end case;
    end process;
    OP2_V_1_cast_fu_172_p1 <= std_logic_vector(resize(unsigned(tmp_12_reg_414),14));
    OP2_V_cast1_fu_195_p1 <= std_logic_vector(resize(unsigned(ap_reg_ppstg_tmp_13_reg_419_pp0_it4),11));

    -- ap_done assign process. --
    ap_done_assign_proc : process(ap_done_reg, ap_CS_fsm, exitcond3_fu_150_p2)
    begin
        if (((ap_const_logic_1 = ap_done_reg) or ((ap_ST_st2_fsm_1 = ap_CS_fsm) and not((ap_const_lv1_0 = exitcond3_fu_150_p2))))) then 
            ap_done <= ap_const_logic_1;
        else 
            ap_done <= ap_const_logic_0;
        end if; 
    end process;


    -- ap_idle assign process. --
    ap_idle_assign_proc : process(ap_start, ap_CS_fsm)
    begin
        if ((not((ap_const_logic_1 = ap_start)) and (ap_ST_st1_fsm_0 = ap_CS_fsm))) then 
            ap_idle <= ap_const_logic_1;
        else 
            ap_idle <= ap_const_logic_0;
        end if; 
    end process;


    -- ap_ready assign process. --
    ap_ready_assign_proc : process(ap_CS_fsm, exitcond3_fu_150_p2)
    begin
        if (((ap_ST_st2_fsm_1 = ap_CS_fsm) and not((ap_const_lv1_0 = exitcond3_fu_150_p2)))) then 
            ap_ready <= ap_const_logic_1;
        else 
            ap_ready <= ap_const_logic_0;
        end if; 
    end process;


    -- ap_sig_bdd_47 assign process. --
    ap_sig_bdd_47_assign_proc : process(ap_start, ap_done_reg)
    begin
                ap_sig_bdd_47 <= ((ap_start = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1));
    end process;


    -- ap_sig_bdd_71 assign process. --
    ap_sig_bdd_71_assign_proc : process(rgb_data_stream_0_V_empty_n, rgb_data_stream_1_V_empty_n, rgb_data_stream_2_V_empty_n, exitcond_reg_399)
    begin
                ap_sig_bdd_71 <= (((rgb_data_stream_0_V_empty_n = ap_const_logic_0) and (exitcond_reg_399 = ap_const_lv1_0)) or ((exitcond_reg_399 = ap_const_lv1_0) and (rgb_data_stream_1_V_empty_n = ap_const_logic_0)) or ((exitcond_reg_399 = ap_const_lv1_0) and (rgb_data_stream_2_V_empty_n = ap_const_logic_0)));
    end process;


    -- ap_sig_bdd_91 assign process. --
    ap_sig_bdd_91_assign_proc : process(ycbcr_data_stream_0_V_full_n, ap_reg_ppstg_exitcond_reg_399_pp0_it7)
    begin
                ap_sig_bdd_91 <= ((ycbcr_data_stream_0_V_full_n = ap_const_logic_0) and (ap_const_lv1_0 = ap_reg_ppstg_exitcond_reg_399_pp0_it7));
    end process;

    exitcond3_fu_150_p2 <= "1" when (t_V_2_reg_127 = rgb_rows_V_read) else "0";
    exitcond_fu_161_p2 <= "1" when (t_V_reg_138 = rgb_cols_V_read) else "0";

    -- grp_fu_178_ce assign process. --
    grp_fu_178_ce_assign_proc : process(ap_CS_fsm, ap_sig_bdd_71, ap_reg_ppiten_pp0_it1, ap_sig_bdd_91, ap_reg_ppiten_pp0_it8, ap_reg_ppstg_exitcond_reg_399_pp0_it1, ap_reg_ppstg_exitcond_reg_399_pp0_it2, ap_reg_ppstg_exitcond_reg_399_pp0_it3)
    begin
        if (((ap_ST_pp0_stg0_fsm_2 = ap_CS_fsm) and not(((ap_sig_bdd_71 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it1)) or (ap_sig_bdd_91 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it8)))) and ((ap_const_lv1_0 = ap_reg_ppstg_exitcond_reg_399_pp0_it1) or (ap_const_lv1_0 = ap_reg_ppstg_exitcond_reg_399_pp0_it3) or (ap_const_lv1_0 = ap_reg_ppstg_exitcond_reg_399_pp0_it2)))) then 
            grp_fu_178_ce <= ap_const_logic_1;
        else 
            grp_fu_178_ce <= ap_const_logic_0;
        end if; 
    end process;

    grp_fu_178_p0 <= grp_fu_178_p00(8 - 1 downto 0);
    grp_fu_178_p00 <= std_logic_vector(resize(unsigned(tmp_11_reg_408),13));
    grp_fu_178_p1 <= ap_const_lv13_B(4 - 1 downto 0);

    -- grp_fu_184_ce assign process. --
    grp_fu_184_ce_assign_proc : process(ap_CS_fsm, ap_sig_bdd_71, ap_reg_ppiten_pp0_it1, ap_sig_bdd_91, ap_reg_ppiten_pp0_it8, ap_reg_ppstg_exitcond_reg_399_pp0_it1, ap_reg_ppstg_exitcond_reg_399_pp0_it2, ap_reg_ppstg_exitcond_reg_399_pp0_it3)
    begin
        if (((ap_ST_pp0_stg0_fsm_2 = ap_CS_fsm) and not(((ap_sig_bdd_71 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it1)) or (ap_sig_bdd_91 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it8)))) and ((ap_const_lv1_0 = ap_reg_ppstg_exitcond_reg_399_pp0_it1) or (ap_const_lv1_0 = ap_reg_ppstg_exitcond_reg_399_pp0_it3) or (ap_const_lv1_0 = ap_reg_ppstg_exitcond_reg_399_pp0_it2)))) then 
            grp_fu_184_ce <= ap_const_logic_1;
        else 
            grp_fu_184_ce <= ap_const_logic_0;
        end if; 
    end process;

    grp_fu_184_p0 <= grp_fu_184_p00(8 - 1 downto 0);
    grp_fu_184_p00 <= std_logic_vector(resize(unsigned(tmp_12_reg_414),14));
    grp_fu_184_p1 <= ap_const_lv14_1B(5 - 1 downto 0);

    -- grp_fu_190_ce assign process. --
    grp_fu_190_ce_assign_proc : process(ap_CS_fsm, ap_sig_bdd_71, ap_reg_ppiten_pp0_it1, ap_sig_bdd_91, ap_reg_ppiten_pp0_it8, ap_reg_ppstg_exitcond_reg_399_pp0_it3, ap_reg_ppstg_exitcond_reg_399_pp0_it4, ap_reg_ppstg_exitcond_reg_399_pp0_it5)
    begin
        if (((ap_ST_pp0_stg0_fsm_2 = ap_CS_fsm) and not(((ap_sig_bdd_71 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it1)) or (ap_sig_bdd_91 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it8)))) and ((ap_const_lv1_0 = ap_reg_ppstg_exitcond_reg_399_pp0_it3) or (ap_const_lv1_0 = ap_reg_ppstg_exitcond_reg_399_pp0_it4) or (ap_const_lv1_0 = ap_reg_ppstg_exitcond_reg_399_pp0_it5)))) then 
            grp_fu_190_ce <= ap_const_logic_1;
        else 
            grp_fu_190_ce <= ap_const_logic_0;
        end if; 
    end process;

    grp_fu_190_p0 <= ap_reg_ppstg_OP2_V_1_cast_reg_426_pp0_it3(8 - 1 downto 0);
    grp_fu_190_p1 <= ap_const_lv14_15(5 - 1 downto 0);
    i_V_fu_155_p2 <= std_logic_vector(unsigned(t_V_2_reg_127) + unsigned(ap_const_lv12_1));
    j_V_fu_166_p2 <= std_logic_vector(unsigned(t_V_reg_138) + unsigned(ap_const_lv12_1));
    lhs_V_2_cast_fu_233_p1 <= std_logic_vector(resize(unsigned(r_V_15_fu_224_p4),15));
    or_cond7_fu_370_p2 <= (tmp3_fu_366_p2 and tmp2_fu_362_p2);
    out_pixel_val_1_fu_313_p4 <= r_V_12_fu_308_p2(13 downto 6);
    out_pixel_val_2_fu_334_p1 <= ret_V_1_fu_328_p3(8 - 1 downto 0);
    p_2_fu_323_p3 <= 
        ret_V_cast_reg_467 when (tmp_2_reg_483(0) = '1') else 
        ret_V_reg_478;
    p_shl8_cast_fu_214_p1 <= std_logic_vector(resize(unsigned(p_shl8_fu_207_p3),11));
    p_shl8_fu_207_p3 <= (ap_reg_ppstg_tmp_13_reg_419_pp0_it4 & ap_const_lv2_0);
    r_V_10_fu_201_p2 <= std_logic_vector(unsigned(ap_const_lv14_2000) - unsigned(rhs_V_cast_fu_198_p1));
    r_V_11_fu_246_p2 <= std_logic_vector(unsigned(r_V_10_reg_447) - unsigned(grp_fu_190_p2));
    r_V_12_fu_308_p2 <= std_logic_vector(unsigned(r_V_11_reg_462) + unsigned(rhs_V_2_cast_fu_304_p1));
    r_V_13_fu_218_p2 <= std_logic_vector(unsigned(p_shl8_cast_fu_214_p1) + unsigned(OP2_V_cast1_fu_195_p1));
    r_V_15_fu_224_p4 <= ((ap_const_lv1_1 & ap_reg_ppstg_tmp_11_reg_408_pp0_it4) & ap_const_lv5_0);
    r_V_16_fu_240_p2 <= std_logic_vector(unsigned(lhs_V_2_cast_fu_233_p1) - unsigned(rhs_V_4_cast_fu_237_p1));
    r_V_17_fu_254_p2 <= std_logic_vector(unsigned(r_V_16_reg_457) - unsigned(rhs_V_5_cast_fu_251_p1));
    r_V_fu_297_p3 <= (ap_reg_ppstg_tmp_13_reg_419_pp0_it6 & ap_const_lv5_0);
    ret_V_1_fu_328_p3 <= 
        p_2_fu_323_p3 when (tmp_4_reg_473(0) = '1') else 
        ret_V_cast_reg_467;
    
    tmp_fu_259_p4_temp <= signed(tmp_fu_259_p4);
    ret_V_cast_fu_269_p1 <= std_logic_vector(resize(tmp_fu_259_p4_temp,10));

    
    tmp_fu_259_p4_temp <= signed(tmp_fu_259_p4);
    ret_V_fu_285_p0 <= std_logic_vector(resize(tmp_fu_259_p4_temp,10));

    ret_V_fu_285_p2 <= std_logic_vector(unsigned(ret_V_fu_285_p0) + unsigned(ap_const_lv10_1));

    -- rgb_data_stream_0_V_read assign process. --
    rgb_data_stream_0_V_read_assign_proc : process(ap_CS_fsm, exitcond_reg_399, ap_sig_bdd_71, ap_reg_ppiten_pp0_it1, ap_sig_bdd_91, ap_reg_ppiten_pp0_it8)
    begin
        if (((ap_ST_pp0_stg0_fsm_2 = ap_CS_fsm) and (exitcond_reg_399 = ap_const_lv1_0) and (ap_const_logic_1 = ap_reg_ppiten_pp0_it1) and not(((ap_sig_bdd_71 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it1)) or (ap_sig_bdd_91 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it8)))))) then 
            rgb_data_stream_0_V_read <= ap_const_logic_1;
        else 
            rgb_data_stream_0_V_read <= ap_const_logic_0;
        end if; 
    end process;


    -- rgb_data_stream_1_V_read assign process. --
    rgb_data_stream_1_V_read_assign_proc : process(ap_CS_fsm, exitcond_reg_399, ap_sig_bdd_71, ap_reg_ppiten_pp0_it1, ap_sig_bdd_91, ap_reg_ppiten_pp0_it8)
    begin
        if (((ap_ST_pp0_stg0_fsm_2 = ap_CS_fsm) and (exitcond_reg_399 = ap_const_lv1_0) and (ap_const_logic_1 = ap_reg_ppiten_pp0_it1) and not(((ap_sig_bdd_71 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it1)) or (ap_sig_bdd_91 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it8)))))) then 
            rgb_data_stream_1_V_read <= ap_const_logic_1;
        else 
            rgb_data_stream_1_V_read <= ap_const_logic_0;
        end if; 
    end process;


    -- rgb_data_stream_2_V_read assign process. --
    rgb_data_stream_2_V_read_assign_proc : process(ap_CS_fsm, exitcond_reg_399, ap_sig_bdd_71, ap_reg_ppiten_pp0_it1, ap_sig_bdd_91, ap_reg_ppiten_pp0_it8)
    begin
        if (((ap_ST_pp0_stg0_fsm_2 = ap_CS_fsm) and (exitcond_reg_399 = ap_const_lv1_0) and (ap_const_logic_1 = ap_reg_ppiten_pp0_it1) and not(((ap_sig_bdd_71 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it1)) or (ap_sig_bdd_91 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it8)))))) then 
            rgb_data_stream_2_V_read <= ap_const_logic_1;
        else 
            rgb_data_stream_2_V_read <= ap_const_logic_0;
        end if; 
    end process;

    rhs_V_2_cast_fu_304_p1 <= std_logic_vector(resize(unsigned(r_V_fu_297_p3),14));
    rhs_V_4_cast_fu_237_p1 <= std_logic_vector(resize(unsigned(r_V_14_reg_442),15));
    rhs_V_5_cast_fu_251_p1 <= std_logic_vector(resize(unsigned(r_V_13_reg_452),15));
    rhs_V_cast_fu_198_p1 <= std_logic_vector(resize(unsigned(r_V_9_reg_437),14));
    tmp2_fu_362_p2 <= (tmp_6_reg_488 and tmp_7_reg_493);
    tmp3_fu_366_p2 <= (tmp_8_reg_498 and tmp_9_reg_503);
    tmp_2_fu_291_p2 <= "1" when (tmp_5_fu_281_p1 = ap_const_lv6_0) else "0";
    tmp_5_fu_281_p1 <= r_V_17_fu_254_p2(6 - 1 downto 0);
    tmp_6_fu_338_p2 <= "1" when (unsigned(out_pixel_val_2_fu_334_p1) > unsigned(ap_const_lv8_55)) else "0";
    tmp_7_fu_344_p2 <= "1" when (unsigned(out_pixel_val_2_fu_334_p1) < unsigned(ap_const_lv8_8F)) else "0";
    tmp_8_fu_350_p2 <= "1" when (unsigned(out_pixel_val_1_fu_313_p4) > unsigned(ap_const_lv8_87)) else "0";
    tmp_9_fu_356_p2 <= "1" when (unsigned(out_pixel_val_1_fu_313_p4) < unsigned(ap_const_lv8_BE)) else "0";
    tmp_fu_259_p4 <= r_V_17_fu_254_p2(14 downto 6);
    
    or_cond7_fu_370_p2_temp <= signed(or_cond7_fu_370_p2);
    ycbcr_data_stream_0_V_din <= std_logic_vector(resize(or_cond7_fu_370_p2_temp,8));


    -- ycbcr_data_stream_0_V_write assign process. --
    ycbcr_data_stream_0_V_write_assign_proc : process(ap_CS_fsm, ap_sig_bdd_71, ap_reg_ppiten_pp0_it1, ap_reg_ppstg_exitcond_reg_399_pp0_it7, ap_sig_bdd_91, ap_reg_ppiten_pp0_it8)
    begin
        if (((ap_ST_pp0_stg0_fsm_2 = ap_CS_fsm) and (ap_const_lv1_0 = ap_reg_ppstg_exitcond_reg_399_pp0_it7) and (ap_const_logic_1 = ap_reg_ppiten_pp0_it8) and not(((ap_sig_bdd_71 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it1)) or (ap_sig_bdd_91 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it8)))))) then 
            ycbcr_data_stream_0_V_write <= ap_const_logic_1;
        else 
            ycbcr_data_stream_0_V_write <= ap_const_logic_0;
        end if; 
    end process;

end behav;
