// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2013.2
// Copyright (C) 2013 Xilinx Inc. All rights reserved.
// 
// ===========================================================

#include "set_color.h"
#include "AESL_pkg.h"

using namespace std;

namespace ap_rtl {

const sc_logic set_color::ap_const_logic_1 = sc_dt::Log_1;
const sc_logic set_color::ap_const_logic_0 = sc_dt::Log_0;
const sc_lv<2> set_color::ap_ST_st1_fsm_0 = "00";
const sc_lv<2> set_color::ap_ST_st2_fsm_1 = "1";
const sc_lv<2> set_color::ap_ST_pp0_stg0_fsm_2 = "10";
const sc_lv<1> set_color::ap_const_lv1_0 = "0";
const sc_lv<12> set_color::ap_const_lv12_0 = "000000000000";
const sc_lv<12> set_color::ap_const_lv12_1 = "1";
const sc_lv<8> set_color::ap_const_lv8_FF = "11111111";
const sc_lv<2> set_color::ap_const_lv2_0 = "00";
const sc_lv<2> set_color::ap_const_lv2_1 = "1";
const sc_lv<1> set_color::ap_const_lv1_1 = "1";
const sc_lv<8> set_color::ap_const_lv8_0 = "00000000";

set_color::set_color(sc_module_name name) : sc_module(name), mVcdFile(0) {

    SC_METHOD(thread_ap_clk_no_reset_);
    dont_initialize();
    sensitive << ( ap_clk.pos() );

    SC_METHOD(thread_ap_done);
    sensitive << ( ap_done_reg );
    sensitive << ( ap_CS_fsm );
    sensitive << ( exitcond4_fu_130_p2 );

    SC_METHOD(thread_ap_idle);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_ready);
    sensitive << ( ap_CS_fsm );
    sensitive << ( exitcond4_fu_130_p2 );

    SC_METHOD(thread_ap_sig_bdd_51);
    sensitive << ( ap_start );
    sensitive << ( ap_done_reg );

    SC_METHOD(thread_ap_sig_bdd_72);
    sensitive << ( src_data_stream_0_V_empty_n );
    sensitive << ( gesture_V_V_empty_n );
    sensitive << ( exitcond_reg_272 );

    SC_METHOD(thread_ap_sig_bdd_88);
    sensitive << ( dst_data_stream_0_V_full_n );
    sensitive << ( dst_data_stream_1_V_full_n );
    sensitive << ( dst_data_stream_2_V_full_n );
    sensitive << ( ap_reg_ppstg_exitcond_reg_272_pp0_it2 );

    SC_METHOD(thread_dst_data_stream_0_V_din);
    sensitive << ( ap_CS_fsm );
    sensitive << ( ap_sig_bdd_72 );
    sensitive << ( ap_reg_ppiten_pp0_it1 );
    sensitive << ( ap_reg_ppstg_exitcond_reg_272_pp0_it2 );
    sensitive << ( ap_sig_bdd_88 );
    sensitive << ( ap_reg_ppiten_pp0_it3 );
    sensitive << ( pixel_out_val_0_reg_321 );

    SC_METHOD(thread_dst_data_stream_0_V_write);
    sensitive << ( ap_CS_fsm );
    sensitive << ( ap_sig_bdd_72 );
    sensitive << ( ap_reg_ppiten_pp0_it1 );
    sensitive << ( ap_reg_ppstg_exitcond_reg_272_pp0_it2 );
    sensitive << ( ap_sig_bdd_88 );
    sensitive << ( ap_reg_ppiten_pp0_it3 );

    SC_METHOD(thread_dst_data_stream_1_V_din);
    sensitive << ( ap_CS_fsm );
    sensitive << ( ap_sig_bdd_72 );
    sensitive << ( ap_reg_ppiten_pp0_it1 );
    sensitive << ( ap_reg_ppstg_exitcond_reg_272_pp0_it2 );
    sensitive << ( ap_sig_bdd_88 );
    sensitive << ( ap_reg_ppiten_pp0_it3 );
    sensitive << ( pixel_out_val_1_reg_316 );

    SC_METHOD(thread_dst_data_stream_1_V_write);
    sensitive << ( ap_CS_fsm );
    sensitive << ( ap_sig_bdd_72 );
    sensitive << ( ap_reg_ppiten_pp0_it1 );
    sensitive << ( ap_reg_ppstg_exitcond_reg_272_pp0_it2 );
    sensitive << ( ap_sig_bdd_88 );
    sensitive << ( ap_reg_ppiten_pp0_it3 );

    SC_METHOD(thread_dst_data_stream_2_V_din);
    sensitive << ( ap_CS_fsm );
    sensitive << ( ap_sig_bdd_72 );
    sensitive << ( ap_reg_ppiten_pp0_it1 );
    sensitive << ( ap_reg_ppstg_exitcond_reg_272_pp0_it2 );
    sensitive << ( ap_sig_bdd_88 );
    sensitive << ( ap_reg_ppiten_pp0_it3 );
    sensitive << ( pixel_out_val_2_reg_311 );

    SC_METHOD(thread_dst_data_stream_2_V_write);
    sensitive << ( ap_CS_fsm );
    sensitive << ( ap_sig_bdd_72 );
    sensitive << ( ap_reg_ppiten_pp0_it1 );
    sensitive << ( ap_reg_ppstg_exitcond_reg_272_pp0_it2 );
    sensitive << ( ap_sig_bdd_88 );
    sensitive << ( ap_reg_ppiten_pp0_it3 );

    SC_METHOD(thread_exitcond4_fu_130_p2);
    sensitive << ( ap_CS_fsm );
    sensitive << ( src_rows_V_read );
    sensitive << ( t_V_6_reg_107 );

    SC_METHOD(thread_exitcond_fu_141_p2);
    sensitive << ( ap_CS_fsm );
    sensitive << ( src_cols_V_read );
    sensitive << ( t_V_reg_118 );
    sensitive << ( ap_reg_ppiten_pp0_it0 );
    sensitive << ( ap_sig_bdd_72 );
    sensitive << ( ap_reg_ppiten_pp0_it1 );
    sensitive << ( ap_sig_bdd_88 );
    sensitive << ( ap_reg_ppiten_pp0_it3 );

    SC_METHOD(thread_gesture_V_V_read);
    sensitive << ( ap_CS_fsm );
    sensitive << ( exitcond_reg_272 );
    sensitive << ( ap_sig_bdd_72 );
    sensitive << ( ap_reg_ppiten_pp0_it1 );
    sensitive << ( ap_sig_bdd_88 );
    sensitive << ( ap_reg_ppiten_pp0_it3 );

    SC_METHOD(thread_i_V_fu_135_p2);
    sensitive << ( t_V_6_reg_107 );

    SC_METHOD(thread_j_V_fu_146_p2);
    sensitive << ( t_V_reg_118 );

    SC_METHOD(thread_not_sel_tmp5_fu_229_p2);
    sensitive << ( sel_tmp5_fu_190_p2 );

    SC_METHOD(thread_pixel_out_val_0_fu_241_p2);
    sensitive << ( tmp_s_reg_292 );
    sensitive << ( sel_tmp9_fu_235_p2 );

    SC_METHOD(thread_pixel_out_val_1_fu_219_p2);
    sensitive << ( tmp_s_reg_292 );
    sensitive << ( sel_tmp7_fu_214_p2 );

    SC_METHOD(thread_pixel_out_val_2_fu_207_p3);
    sensitive << ( tmp_s_reg_292 );
    sensitive << ( sel_tmp6_fu_200_p3 );

    SC_METHOD(thread_sel_tmp3_fu_174_p2);
    sensitive << ( tmp_9_fu_162_p2 );

    SC_METHOD(thread_sel_tmp5_fu_190_p2);
    sensitive << ( tmp_s_reg_292 );
    sensitive << ( tmp2_reg_306 );

    SC_METHOD(thread_sel_tmp6_fu_200_p3);
    sensitive << ( tmp_reg_281 );
    sensitive << ( tmp_16_fu_194_p2 );

    SC_METHOD(thread_sel_tmp7_fu_214_p2);
    sensitive << ( tmp_28_reg_286 );
    sensitive << ( sel_tmp5_fu_190_p2 );

    SC_METHOD(thread_sel_tmp8_fu_224_p2);
    sensitive << ( tmp_28_reg_286 );
    sensitive << ( sel_tmp_fu_186_p2 );

    SC_METHOD(thread_sel_tmp9_fu_235_p2);
    sensitive << ( sel_tmp8_fu_224_p2 );
    sensitive << ( not_sel_tmp5_fu_229_p2 );

    SC_METHOD(thread_sel_tmp_fu_186_p2);
    sensitive << ( tmp_s_reg_292 );
    sensitive << ( tmp_9_reg_301 );

    SC_METHOD(thread_src_data_stream_0_V_read);
    sensitive << ( ap_CS_fsm );
    sensitive << ( exitcond_reg_272 );
    sensitive << ( ap_sig_bdd_72 );
    sensitive << ( ap_reg_ppiten_pp0_it1 );
    sensitive << ( ap_sig_bdd_88 );
    sensitive << ( ap_reg_ppiten_pp0_it3 );

    SC_METHOD(thread_tmp2_fu_180_p2);
    sensitive << ( tmp_10_fu_168_p2 );
    sensitive << ( sel_tmp3_fu_174_p2 );

    SC_METHOD(thread_tmp_10_fu_168_p2);
    sensitive << ( ap_CS_fsm );
    sensitive << ( gesture_V_V_dout );
    sensitive << ( exitcond_reg_272 );
    sensitive << ( ap_sig_bdd_72 );
    sensitive << ( ap_reg_ppiten_pp0_it1 );
    sensitive << ( ap_sig_bdd_88 );
    sensitive << ( ap_reg_ppiten_pp0_it3 );

    SC_METHOD(thread_tmp_16_fu_194_p2);
    sensitive << ( sel_tmp5_fu_190_p2 );
    sensitive << ( sel_tmp_fu_186_p2 );

    SC_METHOD(thread_tmp_28_fu_152_p1);
    sensitive << ( src_data_stream_0_V_dout );

    SC_METHOD(thread_tmp_9_fu_162_p2);
    sensitive << ( ap_CS_fsm );
    sensitive << ( gesture_V_V_dout );
    sensitive << ( exitcond_reg_272 );
    sensitive << ( ap_sig_bdd_72 );
    sensitive << ( ap_reg_ppiten_pp0_it1 );
    sensitive << ( ap_sig_bdd_88 );
    sensitive << ( ap_reg_ppiten_pp0_it3 );

    SC_METHOD(thread_tmp_s_fu_156_p2);
    sensitive << ( ap_CS_fsm );
    sensitive << ( src_data_stream_0_V_dout );
    sensitive << ( exitcond_reg_272 );
    sensitive << ( ap_sig_bdd_72 );
    sensitive << ( ap_reg_ppiten_pp0_it1 );
    sensitive << ( ap_sig_bdd_88 );
    sensitive << ( ap_reg_ppiten_pp0_it3 );

    SC_METHOD(thread_ap_NS_fsm);
    sensitive << ( ap_CS_fsm );
    sensitive << ( ap_sig_bdd_51 );
    sensitive << ( exitcond_fu_141_p2 );
    sensitive << ( ap_reg_ppiten_pp0_it0 );
    sensitive << ( ap_sig_bdd_72 );
    sensitive << ( ap_reg_ppiten_pp0_it1 );
    sensitive << ( ap_reg_ppiten_pp0_it2 );
    sensitive << ( ap_sig_bdd_88 );
    sensitive << ( ap_reg_ppiten_pp0_it3 );
    sensitive << ( exitcond4_fu_130_p2 );

    ap_done_reg = SC_LOGIC_0;
    ap_CS_fsm = "00";
    ap_reg_ppiten_pp0_it0 = SC_LOGIC_0;
    ap_reg_ppiten_pp0_it1 = SC_LOGIC_0;
    ap_reg_ppiten_pp0_it2 = SC_LOGIC_0;
    ap_reg_ppiten_pp0_it3 = SC_LOGIC_0;
    static int apTFileNum = 0;
    stringstream apTFilenSS;
    apTFilenSS << "set_color_sc_trace_" << apTFileNum ++;
    string apTFn = apTFilenSS.str();
    mVcdFile = sc_create_vcd_trace_file(apTFn.c_str());
    mVcdFile->set_time_unit(1, SC_PS);
    const char* dump_vcd = std::getenv("AP_WRITE_VCD");
    if (dump_vcd && string(dump_vcd) == "1" ) {
    sc_trace(mVcdFile, ap_clk, "(port)ap_clk");
    sc_trace(mVcdFile, ap_rst, "(port)ap_rst");
    sc_trace(mVcdFile, ap_start, "(port)ap_start");
    sc_trace(mVcdFile, ap_done, "(port)ap_done");
    sc_trace(mVcdFile, ap_continue, "(port)ap_continue");
    sc_trace(mVcdFile, ap_idle, "(port)ap_idle");
    sc_trace(mVcdFile, ap_ready, "(port)ap_ready");
    sc_trace(mVcdFile, src_rows_V_read, "(port)src_rows_V_read");
    sc_trace(mVcdFile, src_cols_V_read, "(port)src_cols_V_read");
    sc_trace(mVcdFile, src_data_stream_0_V_dout, "(port)src_data_stream_0_V_dout");
    sc_trace(mVcdFile, src_data_stream_0_V_empty_n, "(port)src_data_stream_0_V_empty_n");
    sc_trace(mVcdFile, src_data_stream_0_V_read, "(port)src_data_stream_0_V_read");
    sc_trace(mVcdFile, dst_data_stream_0_V_din, "(port)dst_data_stream_0_V_din");
    sc_trace(mVcdFile, dst_data_stream_0_V_full_n, "(port)dst_data_stream_0_V_full_n");
    sc_trace(mVcdFile, dst_data_stream_0_V_write, "(port)dst_data_stream_0_V_write");
    sc_trace(mVcdFile, dst_data_stream_1_V_din, "(port)dst_data_stream_1_V_din");
    sc_trace(mVcdFile, dst_data_stream_1_V_full_n, "(port)dst_data_stream_1_V_full_n");
    sc_trace(mVcdFile, dst_data_stream_1_V_write, "(port)dst_data_stream_1_V_write");
    sc_trace(mVcdFile, dst_data_stream_2_V_din, "(port)dst_data_stream_2_V_din");
    sc_trace(mVcdFile, dst_data_stream_2_V_full_n, "(port)dst_data_stream_2_V_full_n");
    sc_trace(mVcdFile, dst_data_stream_2_V_write, "(port)dst_data_stream_2_V_write");
    sc_trace(mVcdFile, gesture_V_V_dout, "(port)gesture_V_V_dout");
    sc_trace(mVcdFile, gesture_V_V_empty_n, "(port)gesture_V_V_empty_n");
    sc_trace(mVcdFile, gesture_V_V_read, "(port)gesture_V_V_read");
    sc_trace(mVcdFile, ap_done_reg, "ap_done_reg");
    sc_trace(mVcdFile, ap_CS_fsm, "ap_CS_fsm");
    sc_trace(mVcdFile, t_V_reg_118, "t_V_reg_118");
    sc_trace(mVcdFile, ap_sig_bdd_51, "ap_sig_bdd_51");
    sc_trace(mVcdFile, i_V_fu_135_p2, "i_V_fu_135_p2");
    sc_trace(mVcdFile, i_V_reg_267, "i_V_reg_267");
    sc_trace(mVcdFile, exitcond_fu_141_p2, "exitcond_fu_141_p2");
    sc_trace(mVcdFile, exitcond_reg_272, "exitcond_reg_272");
    sc_trace(mVcdFile, ap_reg_ppiten_pp0_it0, "ap_reg_ppiten_pp0_it0");
    sc_trace(mVcdFile, ap_sig_bdd_72, "ap_sig_bdd_72");
    sc_trace(mVcdFile, ap_reg_ppiten_pp0_it1, "ap_reg_ppiten_pp0_it1");
    sc_trace(mVcdFile, ap_reg_ppiten_pp0_it2, "ap_reg_ppiten_pp0_it2");
    sc_trace(mVcdFile, ap_reg_ppstg_exitcond_reg_272_pp0_it2, "ap_reg_ppstg_exitcond_reg_272_pp0_it2");
    sc_trace(mVcdFile, ap_sig_bdd_88, "ap_sig_bdd_88");
    sc_trace(mVcdFile, ap_reg_ppiten_pp0_it3, "ap_reg_ppiten_pp0_it3");
    sc_trace(mVcdFile, ap_reg_ppstg_exitcond_reg_272_pp0_it1, "ap_reg_ppstg_exitcond_reg_272_pp0_it1");
    sc_trace(mVcdFile, j_V_fu_146_p2, "j_V_fu_146_p2");
    sc_trace(mVcdFile, tmp_reg_281, "tmp_reg_281");
    sc_trace(mVcdFile, tmp_28_fu_152_p1, "tmp_28_fu_152_p1");
    sc_trace(mVcdFile, tmp_28_reg_286, "tmp_28_reg_286");
    sc_trace(mVcdFile, tmp_s_fu_156_p2, "tmp_s_fu_156_p2");
    sc_trace(mVcdFile, tmp_s_reg_292, "tmp_s_reg_292");
    sc_trace(mVcdFile, tmp_9_fu_162_p2, "tmp_9_fu_162_p2");
    sc_trace(mVcdFile, tmp_9_reg_301, "tmp_9_reg_301");
    sc_trace(mVcdFile, tmp2_fu_180_p2, "tmp2_fu_180_p2");
    sc_trace(mVcdFile, tmp2_reg_306, "tmp2_reg_306");
    sc_trace(mVcdFile, pixel_out_val_2_fu_207_p3, "pixel_out_val_2_fu_207_p3");
    sc_trace(mVcdFile, pixel_out_val_2_reg_311, "pixel_out_val_2_reg_311");
    sc_trace(mVcdFile, pixel_out_val_1_fu_219_p2, "pixel_out_val_1_fu_219_p2");
    sc_trace(mVcdFile, pixel_out_val_1_reg_316, "pixel_out_val_1_reg_316");
    sc_trace(mVcdFile, pixel_out_val_0_fu_241_p2, "pixel_out_val_0_fu_241_p2");
    sc_trace(mVcdFile, pixel_out_val_0_reg_321, "pixel_out_val_0_reg_321");
    sc_trace(mVcdFile, exitcond4_fu_130_p2, "exitcond4_fu_130_p2");
    sc_trace(mVcdFile, t_V_6_reg_107, "t_V_6_reg_107");
    sc_trace(mVcdFile, tmp_10_fu_168_p2, "tmp_10_fu_168_p2");
    sc_trace(mVcdFile, sel_tmp3_fu_174_p2, "sel_tmp3_fu_174_p2");
    sc_trace(mVcdFile, sel_tmp5_fu_190_p2, "sel_tmp5_fu_190_p2");
    sc_trace(mVcdFile, sel_tmp_fu_186_p2, "sel_tmp_fu_186_p2");
    sc_trace(mVcdFile, tmp_16_fu_194_p2, "tmp_16_fu_194_p2");
    sc_trace(mVcdFile, sel_tmp6_fu_200_p3, "sel_tmp6_fu_200_p3");
    sc_trace(mVcdFile, sel_tmp7_fu_214_p2, "sel_tmp7_fu_214_p2");
    sc_trace(mVcdFile, sel_tmp8_fu_224_p2, "sel_tmp8_fu_224_p2");
    sc_trace(mVcdFile, not_sel_tmp5_fu_229_p2, "not_sel_tmp5_fu_229_p2");
    sc_trace(mVcdFile, sel_tmp9_fu_235_p2, "sel_tmp9_fu_235_p2");
    sc_trace(mVcdFile, ap_NS_fsm, "ap_NS_fsm");

    }
}

set_color::~set_color() {
    if (mVcdFile) 
        sc_close_vcd_trace_file(mVcdFile);

}

void set_color::thread_ap_clk_no_reset_() {
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_CS_fsm = ap_ST_st1_fsm_0;
    } else {
        ap_CS_fsm = ap_NS_fsm.read();
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_done_reg = ap_const_logic_0;
    } else {
        if (esl_seteq<1,1,1>(ap_const_logic_1, ap_continue.read())) {
            ap_done_reg = ap_const_logic_0;
        } else if ((esl_seteq<1,2,2>(ap_ST_st2_fsm_1, ap_CS_fsm.read()) && 
                    !esl_seteq<1,1,1>(ap_const_lv1_0, exitcond4_fu_130_p2.read()))) {
            ap_done_reg = ap_const_logic_1;
        }
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_reg_ppiten_pp0_it0 = ap_const_logic_0;
    } else {
        if ((esl_seteq<1,2,2>(ap_ST_pp0_stg0_fsm_2, ap_CS_fsm.read()) && 
             !((ap_sig_bdd_72.read() && 
  esl_seteq<1,1,1>(ap_const_logic_1, ap_reg_ppiten_pp0_it1.read())) || (ap_sig_bdd_88.read() && 
  esl_seteq<1,1,1>(ap_const_logic_1, ap_reg_ppiten_pp0_it3.read()))) && 
             !esl_seteq<1,1,1>(exitcond_fu_141_p2.read(), ap_const_lv1_0))) {
            ap_reg_ppiten_pp0_it0 = ap_const_logic_0;
        } else if ((esl_seteq<1,2,2>(ap_ST_st2_fsm_1, ap_CS_fsm.read()) && 
                    esl_seteq<1,1,1>(ap_const_lv1_0, exitcond4_fu_130_p2.read()))) {
            ap_reg_ppiten_pp0_it0 = ap_const_logic_1;
        }
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_reg_ppiten_pp0_it1 = ap_const_logic_0;
    } else {
        if ((esl_seteq<1,2,2>(ap_ST_pp0_stg0_fsm_2, ap_CS_fsm.read()) && 
             !((ap_sig_bdd_72.read() && 
  esl_seteq<1,1,1>(ap_const_logic_1, ap_reg_ppiten_pp0_it1.read())) || (ap_sig_bdd_88.read() && 
  esl_seteq<1,1,1>(ap_const_logic_1, ap_reg_ppiten_pp0_it3.read()))) && 
             esl_seteq<1,1,1>(exitcond_fu_141_p2.read(), ap_const_lv1_0))) {
            ap_reg_ppiten_pp0_it1 = ap_const_logic_1;
        } else if (((esl_seteq<1,2,2>(ap_ST_st2_fsm_1, ap_CS_fsm.read()) && 
                     esl_seteq<1,1,1>(ap_const_lv1_0, exitcond4_fu_130_p2.read())) || 
                    (esl_seteq<1,2,2>(ap_ST_pp0_stg0_fsm_2, ap_CS_fsm.read()) && 
                     !((ap_sig_bdd_72.read() && 
  esl_seteq<1,1,1>(ap_const_logic_1, ap_reg_ppiten_pp0_it1.read())) || (ap_sig_bdd_88.read() && 
  esl_seteq<1,1,1>(ap_const_logic_1, ap_reg_ppiten_pp0_it3.read()))) && 
                     !esl_seteq<1,1,1>(exitcond_fu_141_p2.read(), ap_const_lv1_0)))) {
            ap_reg_ppiten_pp0_it1 = ap_const_logic_0;
        }
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_reg_ppiten_pp0_it2 = ap_const_logic_0;
    } else {
        if ((esl_seteq<1,2,2>(ap_ST_pp0_stg0_fsm_2, ap_CS_fsm.read()) && 
             !((ap_sig_bdd_72.read() && 
  esl_seteq<1,1,1>(ap_const_logic_1, ap_reg_ppiten_pp0_it1.read())) || (ap_sig_bdd_88.read() && 
  esl_seteq<1,1,1>(ap_const_logic_1, ap_reg_ppiten_pp0_it3.read()))))) {
            ap_reg_ppiten_pp0_it2 = ap_reg_ppiten_pp0_it1.read();
        } else if ((esl_seteq<1,2,2>(ap_ST_st2_fsm_1, ap_CS_fsm.read()) && 
                    esl_seteq<1,1,1>(ap_const_lv1_0, exitcond4_fu_130_p2.read()))) {
            ap_reg_ppiten_pp0_it2 = ap_const_logic_0;
        }
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_reg_ppiten_pp0_it3 = ap_const_logic_0;
    } else {
        if ((esl_seteq<1,2,2>(ap_ST_pp0_stg0_fsm_2, ap_CS_fsm.read()) && 
             !((ap_sig_bdd_72.read() && 
  esl_seteq<1,1,1>(ap_const_logic_1, ap_reg_ppiten_pp0_it1.read())) || (ap_sig_bdd_88.read() && 
  esl_seteq<1,1,1>(ap_const_logic_1, ap_reg_ppiten_pp0_it3.read()))))) {
            ap_reg_ppiten_pp0_it3 = ap_reg_ppiten_pp0_it2.read();
        } else if ((esl_seteq<1,2,2>(ap_ST_st2_fsm_1, ap_CS_fsm.read()) && 
                    esl_seteq<1,1,1>(ap_const_lv1_0, exitcond4_fu_130_p2.read()))) {
            ap_reg_ppiten_pp0_it3 = ap_const_logic_0;
        }
    }
    if ((esl_seteq<1,2,2>(ap_ST_pp0_stg0_fsm_2, ap_CS_fsm.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_reg_ppiten_pp0_it0.read()) && 
         !((ap_sig_bdd_72.read() && 
  esl_seteq<1,1,1>(ap_const_logic_1, ap_reg_ppiten_pp0_it1.read())) || (ap_sig_bdd_88.read() && 
  esl_seteq<1,1,1>(ap_const_logic_1, ap_reg_ppiten_pp0_it3.read()))) && 
         !esl_seteq<1,1,1>(exitcond_fu_141_p2.read(), ap_const_lv1_0))) {
        t_V_6_reg_107 = i_V_reg_267.read();
    } else if ((esl_seteq<1,2,2>(ap_ST_st1_fsm_0, ap_CS_fsm.read()) && 
                !ap_sig_bdd_51.read())) {
        t_V_6_reg_107 = ap_const_lv12_0;
    }
    if ((esl_seteq<1,2,2>(ap_ST_st2_fsm_1, ap_CS_fsm.read()) && 
         esl_seteq<1,1,1>(ap_const_lv1_0, exitcond4_fu_130_p2.read()))) {
        t_V_reg_118 = ap_const_lv12_0;
    } else if ((esl_seteq<1,2,2>(ap_ST_pp0_stg0_fsm_2, ap_CS_fsm.read()) && 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_reg_ppiten_pp0_it0.read()) && 
                !((ap_sig_bdd_72.read() && 
  esl_seteq<1,1,1>(ap_const_logic_1, ap_reg_ppiten_pp0_it1.read())) || (ap_sig_bdd_88.read() && 
  esl_seteq<1,1,1>(ap_const_logic_1, ap_reg_ppiten_pp0_it3.read()))) && 
                esl_seteq<1,1,1>(exitcond_fu_141_p2.read(), ap_const_lv1_0))) {
        t_V_reg_118 = j_V_fu_146_p2.read();
    }
    if ((esl_seteq<1,2,2>(ap_ST_pp0_stg0_fsm_2, ap_CS_fsm.read()) && !((ap_sig_bdd_72.read() && 
  esl_seteq<1,1,1>(ap_const_logic_1, ap_reg_ppiten_pp0_it1.read())) || (ap_sig_bdd_88.read() && 
  esl_seteq<1,1,1>(ap_const_logic_1, ap_reg_ppiten_pp0_it3.read()))))) {
        ap_reg_ppstg_exitcond_reg_272_pp0_it1 = exitcond_reg_272.read();
        ap_reg_ppstg_exitcond_reg_272_pp0_it2 = ap_reg_ppstg_exitcond_reg_272_pp0_it1.read();
    }
    if ((esl_seteq<1,2,2>(ap_ST_pp0_stg0_fsm_2, ap_CS_fsm.read()) && esl_seteq<1,1,1>(ap_const_logic_1, ap_reg_ppiten_pp0_it0.read()) && !((ap_sig_bdd_72.read() && 
  esl_seteq<1,1,1>(ap_const_logic_1, ap_reg_ppiten_pp0_it1.read())) || (ap_sig_bdd_88.read() && 
  esl_seteq<1,1,1>(ap_const_logic_1, ap_reg_ppiten_pp0_it3.read()))))) {
        exitcond_reg_272 = exitcond_fu_141_p2.read();
    }
    if (esl_seteq<1,2,2>(ap_ST_st2_fsm_1, ap_CS_fsm.read())) {
        i_V_reg_267 = i_V_fu_135_p2.read();
    }
    if ((esl_seteq<1,2,2>(ap_ST_pp0_stg0_fsm_2, ap_CS_fsm.read()) && esl_seteq<1,1,1>(ap_const_logic_1, ap_reg_ppiten_pp0_it2.read()) && !((ap_sig_bdd_72.read() && 
  esl_seteq<1,1,1>(ap_const_logic_1, ap_reg_ppiten_pp0_it1.read())) || (ap_sig_bdd_88.read() && 
  esl_seteq<1,1,1>(ap_const_logic_1, ap_reg_ppiten_pp0_it3.read()))) && esl_seteq<1,1,1>(ap_const_lv1_0, ap_reg_ppstg_exitcond_reg_272_pp0_it1.read()))) {
        pixel_out_val_0_reg_321 = pixel_out_val_0_fu_241_p2.read();
        pixel_out_val_1_reg_316 = pixel_out_val_1_fu_219_p2.read();
        pixel_out_val_2_reg_311 = pixel_out_val_2_fu_207_p3.read();
    }
    if ((esl_seteq<1,2,2>(ap_ST_pp0_stg0_fsm_2, ap_CS_fsm.read()) && esl_seteq<1,1,1>(exitcond_reg_272.read(), ap_const_lv1_0) && esl_seteq<1,1,1>(ap_const_logic_1, ap_reg_ppiten_pp0_it1.read()) && !((ap_sig_bdd_72.read() && 
  esl_seteq<1,1,1>(ap_const_logic_1, ap_reg_ppiten_pp0_it1.read())) || (ap_sig_bdd_88.read() && 
  esl_seteq<1,1,1>(ap_const_logic_1, ap_reg_ppiten_pp0_it3.read()))))) {
        tmp2_reg_306 = tmp2_fu_180_p2.read();
        tmp_28_reg_286 = tmp_28_fu_152_p1.read();
        tmp_9_reg_301 = tmp_9_fu_162_p2.read();
        tmp_reg_281 = src_data_stream_0_V_dout.read();
        tmp_s_reg_292 = tmp_s_fu_156_p2.read();
    }
}

void set_color::thread_ap_done() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_done_reg.read()) || 
         (esl_seteq<1,2,2>(ap_ST_st2_fsm_1, ap_CS_fsm.read()) && 
          !esl_seteq<1,1,1>(ap_const_lv1_0, exitcond4_fu_130_p2.read())))) {
        ap_done = ap_const_logic_1;
    } else {
        ap_done = ap_const_logic_0;
    }
}

void set_color::thread_ap_idle() {
    if ((!esl_seteq<1,1,1>(ap_const_logic_1, ap_start.read()) && 
         esl_seteq<1,2,2>(ap_ST_st1_fsm_0, ap_CS_fsm.read()))) {
        ap_idle = ap_const_logic_1;
    } else {
        ap_idle = ap_const_logic_0;
    }
}

void set_color::thread_ap_ready() {
    if ((esl_seteq<1,2,2>(ap_ST_st2_fsm_1, ap_CS_fsm.read()) && 
         !esl_seteq<1,1,1>(ap_const_lv1_0, exitcond4_fu_130_p2.read()))) {
        ap_ready = ap_const_logic_1;
    } else {
        ap_ready = ap_const_logic_0;
    }
}

void set_color::thread_ap_sig_bdd_51() {
    ap_sig_bdd_51 = (esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_0) || esl_seteq<1,1,1>(ap_done_reg.read(), ap_const_logic_1));
}

void set_color::thread_ap_sig_bdd_72() {
    ap_sig_bdd_72 = ((esl_seteq<1,1,1>(src_data_stream_0_V_empty_n.read(), ap_const_logic_0) && 
  esl_seteq<1,1,1>(exitcond_reg_272.read(), ap_const_lv1_0)) || (esl_seteq<1,1,1>(exitcond_reg_272.read(), ap_const_lv1_0) && 
  esl_seteq<1,1,1>(gesture_V_V_empty_n.read(), ap_const_logic_0)));
}

void set_color::thread_ap_sig_bdd_88() {
    ap_sig_bdd_88 = ((esl_seteq<1,1,1>(dst_data_stream_0_V_full_n.read(), ap_const_logic_0) && 
  esl_seteq<1,1,1>(ap_const_lv1_0, ap_reg_ppstg_exitcond_reg_272_pp0_it2.read())) || (esl_seteq<1,1,1>(ap_const_lv1_0, ap_reg_ppstg_exitcond_reg_272_pp0_it2.read()) && 
  esl_seteq<1,1,1>(dst_data_stream_1_V_full_n.read(), ap_const_logic_0)) || (esl_seteq<1,1,1>(ap_const_lv1_0, ap_reg_ppstg_exitcond_reg_272_pp0_it2.read()) && 
  esl_seteq<1,1,1>(dst_data_stream_2_V_full_n.read(), ap_const_logic_0)));
}

void set_color::thread_dst_data_stream_0_V_din() {
    dst_data_stream_0_V_din = esl_sext<8,1>(pixel_out_val_0_reg_321.read());
}

void set_color::thread_dst_data_stream_0_V_write() {
    if ((esl_seteq<1,2,2>(ap_ST_pp0_stg0_fsm_2, ap_CS_fsm.read()) && 
         esl_seteq<1,1,1>(ap_const_lv1_0, ap_reg_ppstg_exitcond_reg_272_pp0_it2.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_reg_ppiten_pp0_it3.read()) && 
         !((ap_sig_bdd_72.read() && 
  esl_seteq<1,1,1>(ap_const_logic_1, ap_reg_ppiten_pp0_it1.read())) || (ap_sig_bdd_88.read() && 
  esl_seteq<1,1,1>(ap_const_logic_1, ap_reg_ppiten_pp0_it3.read()))))) {
        dst_data_stream_0_V_write = ap_const_logic_1;
    } else {
        dst_data_stream_0_V_write = ap_const_logic_0;
    }
}

void set_color::thread_dst_data_stream_1_V_din() {
    dst_data_stream_1_V_din = esl_sext<8,1>(pixel_out_val_1_reg_316.read());
}

void set_color::thread_dst_data_stream_1_V_write() {
    if ((esl_seteq<1,2,2>(ap_ST_pp0_stg0_fsm_2, ap_CS_fsm.read()) && 
         esl_seteq<1,1,1>(ap_const_lv1_0, ap_reg_ppstg_exitcond_reg_272_pp0_it2.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_reg_ppiten_pp0_it3.read()) && 
         !((ap_sig_bdd_72.read() && 
  esl_seteq<1,1,1>(ap_const_logic_1, ap_reg_ppiten_pp0_it1.read())) || (ap_sig_bdd_88.read() && 
  esl_seteq<1,1,1>(ap_const_logic_1, ap_reg_ppiten_pp0_it3.read()))))) {
        dst_data_stream_1_V_write = ap_const_logic_1;
    } else {
        dst_data_stream_1_V_write = ap_const_logic_0;
    }
}

void set_color::thread_dst_data_stream_2_V_din() {
    dst_data_stream_2_V_din = pixel_out_val_2_reg_311.read();
}

void set_color::thread_dst_data_stream_2_V_write() {
    if ((esl_seteq<1,2,2>(ap_ST_pp0_stg0_fsm_2, ap_CS_fsm.read()) && 
         esl_seteq<1,1,1>(ap_const_lv1_0, ap_reg_ppstg_exitcond_reg_272_pp0_it2.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_reg_ppiten_pp0_it3.read()) && 
         !((ap_sig_bdd_72.read() && 
  esl_seteq<1,1,1>(ap_const_logic_1, ap_reg_ppiten_pp0_it1.read())) || (ap_sig_bdd_88.read() && 
  esl_seteq<1,1,1>(ap_const_logic_1, ap_reg_ppiten_pp0_it3.read()))))) {
        dst_data_stream_2_V_write = ap_const_logic_1;
    } else {
        dst_data_stream_2_V_write = ap_const_logic_0;
    }
}

void set_color::thread_exitcond4_fu_130_p2() {
    exitcond4_fu_130_p2 = (!t_V_6_reg_107.read().is_01() || !src_rows_V_read.read().is_01())? sc_lv<1>(): sc_lv<1>(t_V_6_reg_107.read() == src_rows_V_read.read());
}

void set_color::thread_exitcond_fu_141_p2() {
    exitcond_fu_141_p2 = (!t_V_reg_118.read().is_01() || !src_cols_V_read.read().is_01())? sc_lv<1>(): sc_lv<1>(t_V_reg_118.read() == src_cols_V_read.read());
}

void set_color::thread_gesture_V_V_read() {
    if ((esl_seteq<1,2,2>(ap_ST_pp0_stg0_fsm_2, ap_CS_fsm.read()) && 
         esl_seteq<1,1,1>(exitcond_reg_272.read(), ap_const_lv1_0) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_reg_ppiten_pp0_it1.read()) && 
         !((ap_sig_bdd_72.read() && 
  esl_seteq<1,1,1>(ap_const_logic_1, ap_reg_ppiten_pp0_it1.read())) || (ap_sig_bdd_88.read() && 
  esl_seteq<1,1,1>(ap_const_logic_1, ap_reg_ppiten_pp0_it3.read()))))) {
        gesture_V_V_read = ap_const_logic_1;
    } else {
        gesture_V_V_read = ap_const_logic_0;
    }
}

void set_color::thread_i_V_fu_135_p2() {
    i_V_fu_135_p2 = (!t_V_6_reg_107.read().is_01() || !ap_const_lv12_1.is_01())? sc_lv<12>(): (sc_bigint<12>(t_V_6_reg_107.read()) + sc_biguint<12>(ap_const_lv12_1));
}

void set_color::thread_j_V_fu_146_p2() {
    j_V_fu_146_p2 = (!t_V_reg_118.read().is_01() || !ap_const_lv12_1.is_01())? sc_lv<12>(): (sc_bigint<12>(t_V_reg_118.read()) + sc_biguint<12>(ap_const_lv12_1));
}

void set_color::thread_not_sel_tmp5_fu_229_p2() {
    not_sel_tmp5_fu_229_p2 = (sel_tmp5_fu_190_p2.read() ^ ap_const_lv1_1);
}

void set_color::thread_pixel_out_val_0_fu_241_p2() {
    pixel_out_val_0_fu_241_p2 = (tmp_s_reg_292.read() & sel_tmp9_fu_235_p2.read());
}

void set_color::thread_pixel_out_val_1_fu_219_p2() {
    pixel_out_val_1_fu_219_p2 = (tmp_s_reg_292.read() & sel_tmp7_fu_214_p2.read());
}

void set_color::thread_pixel_out_val_2_fu_207_p3() {
    pixel_out_val_2_fu_207_p3 = (!tmp_s_reg_292.read()[0].is_01())? sc_lv<8>(): ((tmp_s_reg_292.read()[0].to_bool())? sel_tmp6_fu_200_p3.read(): ap_const_lv8_0);
}

void set_color::thread_sel_tmp3_fu_174_p2() {
    sel_tmp3_fu_174_p2 = (tmp_9_fu_162_p2.read() ^ ap_const_lv1_1);
}

void set_color::thread_sel_tmp5_fu_190_p2() {
    sel_tmp5_fu_190_p2 = (tmp2_reg_306.read() & tmp_s_reg_292.read());
}

void set_color::thread_sel_tmp6_fu_200_p3() {
    sel_tmp6_fu_200_p3 = (!tmp_16_fu_194_p2.read()[0].is_01())? sc_lv<8>(): ((tmp_16_fu_194_p2.read()[0].to_bool())? ap_const_lv8_0: tmp_reg_281.read());
}

void set_color::thread_sel_tmp7_fu_214_p2() {
    sel_tmp7_fu_214_p2 = (sel_tmp5_fu_190_p2.read() & tmp_28_reg_286.read());
}

void set_color::thread_sel_tmp8_fu_224_p2() {
    sel_tmp8_fu_224_p2 = (sel_tmp_fu_186_p2.read() & tmp_28_reg_286.read());
}

void set_color::thread_sel_tmp9_fu_235_p2() {
    sel_tmp9_fu_235_p2 = (sel_tmp8_fu_224_p2.read() & not_sel_tmp5_fu_229_p2.read());
}

void set_color::thread_sel_tmp_fu_186_p2() {
    sel_tmp_fu_186_p2 = (tmp_s_reg_292.read() & tmp_9_reg_301.read());
}

void set_color::thread_src_data_stream_0_V_read() {
    if ((esl_seteq<1,2,2>(ap_ST_pp0_stg0_fsm_2, ap_CS_fsm.read()) && 
         esl_seteq<1,1,1>(exitcond_reg_272.read(), ap_const_lv1_0) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_reg_ppiten_pp0_it1.read()) && 
         !((ap_sig_bdd_72.read() && 
  esl_seteq<1,1,1>(ap_const_logic_1, ap_reg_ppiten_pp0_it1.read())) || (ap_sig_bdd_88.read() && 
  esl_seteq<1,1,1>(ap_const_logic_1, ap_reg_ppiten_pp0_it3.read()))))) {
        src_data_stream_0_V_read = ap_const_logic_1;
    } else {
        src_data_stream_0_V_read = ap_const_logic_0;
    }
}

void set_color::thread_tmp2_fu_180_p2() {
    tmp2_fu_180_p2 = (tmp_10_fu_168_p2.read() & sel_tmp3_fu_174_p2.read());
}

void set_color::thread_tmp_10_fu_168_p2() {
    tmp_10_fu_168_p2 = (!gesture_V_V_dout.read().is_01() || !ap_const_lv2_1.is_01())? sc_lv<1>(): sc_lv<1>(gesture_V_V_dout.read() == ap_const_lv2_1);
}

void set_color::thread_tmp_16_fu_194_p2() {
    tmp_16_fu_194_p2 = (sel_tmp5_fu_190_p2.read() | sel_tmp_fu_186_p2.read());
}

void set_color::thread_tmp_28_fu_152_p1() {
    tmp_28_fu_152_p1 = src_data_stream_0_V_dout.read().range(1-1, 0);
}

void set_color::thread_tmp_9_fu_162_p2() {
    tmp_9_fu_162_p2 = (!gesture_V_V_dout.read().is_01() || !ap_const_lv2_0.is_01())? sc_lv<1>(): sc_lv<1>(gesture_V_V_dout.read() == ap_const_lv2_0);
}

void set_color::thread_tmp_s_fu_156_p2() {
    tmp_s_fu_156_p2 = (!src_data_stream_0_V_dout.read().is_01() || !ap_const_lv8_FF.is_01())? sc_lv<1>(): sc_lv<1>(src_data_stream_0_V_dout.read() == ap_const_lv8_FF);
}

void set_color::thread_ap_NS_fsm() {
    switch (ap_CS_fsm.read().to_uint()) {
        case 0 : 
            if (!ap_sig_bdd_51.read()) {
                ap_NS_fsm = ap_ST_st2_fsm_1;
            } else {
                ap_NS_fsm = ap_ST_st1_fsm_0;
            }
            break;
        case 1 : 
            if (!esl_seteq<1,1,1>(ap_const_lv1_0, exitcond4_fu_130_p2.read())) {
                ap_NS_fsm = ap_ST_st1_fsm_0;
            } else {
                ap_NS_fsm = ap_ST_pp0_stg0_fsm_2;
            }
            break;
        case 2 : 
            if ((!(esl_seteq<1,2,2>(ap_ST_pp0_stg0_fsm_2, ap_CS_fsm.read()) && esl_seteq<1,1,1>(ap_const_logic_1, ap_reg_ppiten_pp0_it3.read()) && !((ap_sig_bdd_72.read() && 
  esl_seteq<1,1,1>(ap_const_logic_1, ap_reg_ppiten_pp0_it1.read())) || (ap_sig_bdd_88.read() && 
  esl_seteq<1,1,1>(ap_const_logic_1, ap_reg_ppiten_pp0_it3.read()))) && !esl_seteq<1,1,1>(ap_const_logic_1, ap_reg_ppiten_pp0_it2.read())) && !(esl_seteq<1,1,1>(ap_const_logic_1, ap_reg_ppiten_pp0_it0.read()) && !((ap_sig_bdd_72.read() && 
  esl_seteq<1,1,1>(ap_const_logic_1, ap_reg_ppiten_pp0_it1.read())) || (ap_sig_bdd_88.read() && 
  esl_seteq<1,1,1>(ap_const_logic_1, ap_reg_ppiten_pp0_it3.read()))) && !esl_seteq<1,1,1>(exitcond_fu_141_p2.read(), ap_const_lv1_0) && !esl_seteq<1,1,1>(ap_const_logic_1, ap_reg_ppiten_pp0_it1.read())))) {
                ap_NS_fsm = ap_ST_pp0_stg0_fsm_2;
            } else if (((esl_seteq<1,2,2>(ap_ST_pp0_stg0_fsm_2, ap_CS_fsm.read()) && 
  esl_seteq<1,1,1>(ap_const_logic_1, ap_reg_ppiten_pp0_it3.read()) && 
  !((ap_sig_bdd_72.read() && 
  esl_seteq<1,1,1>(ap_const_logic_1, ap_reg_ppiten_pp0_it1.read())) || (ap_sig_bdd_88.read() && 
  esl_seteq<1,1,1>(ap_const_logic_1, ap_reg_ppiten_pp0_it3.read()))) && 
  !esl_seteq<1,1,1>(ap_const_logic_1, ap_reg_ppiten_pp0_it2.read())) || (esl_seteq<1,1,1>(ap_const_logic_1, ap_reg_ppiten_pp0_it0.read()) && 
  !((ap_sig_bdd_72.read() && 
  esl_seteq<1,1,1>(ap_const_logic_1, ap_reg_ppiten_pp0_it1.read())) || (ap_sig_bdd_88.read() && 
  esl_seteq<1,1,1>(ap_const_logic_1, ap_reg_ppiten_pp0_it3.read()))) && 
  !esl_seteq<1,1,1>(exitcond_fu_141_p2.read(), ap_const_lv1_0) && 
  !esl_seteq<1,1,1>(ap_const_logic_1, ap_reg_ppiten_pp0_it1.read())))) {
                ap_NS_fsm = ap_ST_st2_fsm_1;
            } else {
                ap_NS_fsm = ap_ST_pp0_stg0_fsm_2;
            }
            break;
        default : 
            ap_NS_fsm = "XX";
            break;
    }
}
}

