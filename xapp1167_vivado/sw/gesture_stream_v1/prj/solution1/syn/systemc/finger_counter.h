// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2013.2
// Copyright (C) 2013 Xilinx Inc. All rights reserved.
// 
// ===========================================================

#ifndef _finger_counter_HH_
#define _finger_counter_HH_

#include "systemc.h"
#include "AESL_pkg.h"

#include "image_filter_dmul_64ns_64ns_64_9_max_dsp.h"
#include "image_filter_dcmp_64ns_64ns_1_3.h"
#include "image_filter_sitodp_64s_64_9.h"

namespace ap_rtl {

struct finger_counter : public sc_module {
    // Port declarations 18
    sc_in_clk ap_clk;
    sc_in< sc_logic > ap_rst;
    sc_in< sc_logic > ap_start;
    sc_out< sc_logic > ap_done;
    sc_in< sc_logic > ap_continue;
    sc_out< sc_logic > ap_idle;
    sc_out< sc_logic > ap_ready;
    sc_in< sc_lv<12> > src_rows_V_read;
    sc_in< sc_lv<12> > src_cols_V_read;
    sc_in< sc_lv<8> > src_data_stream_0_V_dout;
    sc_in< sc_logic > src_data_stream_0_V_empty_n;
    sc_out< sc_logic > src_data_stream_0_V_read;
    sc_out< sc_lv<8> > dst_data_stream_0_V_din;
    sc_in< sc_logic > dst_data_stream_0_V_full_n;
    sc_out< sc_logic > dst_data_stream_0_V_write;
    sc_out< sc_lv<2> > gesture_V_V_din;
    sc_in< sc_logic > gesture_V_V_full_n;
    sc_out< sc_logic > gesture_V_V_write;


    // Module declarations
    finger_counter(sc_module_name name);
    SC_HAS_PROCESS(finger_counter);

    ~finger_counter();

    sc_trace_file* mVcdFile;

    image_filter_dmul_64ns_64ns_64_9_max_dsp<43,9,64,64,64>* image_filter_dmul_64ns_64ns_64_9_max_dsp_U43;
    image_filter_dcmp_64ns_64ns_1_3<44,3,64,64,1>* image_filter_dcmp_64ns_64ns_1_3_U44;
    image_filter_dcmp_64ns_64ns_1_3<45,3,64,64,1>* image_filter_dcmp_64ns_64ns_1_3_U45;
    image_filter_sitodp_64s_64_9<46,9,64,64>* image_filter_sitodp_64s_64_9_U46;
    image_filter_sitodp_64s_64_9<47,9,64,64>* image_filter_sitodp_64s_64_9_U47;
    sc_signal< sc_logic > ap_done_reg;
    sc_signal< sc_lv<5> > ap_CS_fsm;
    sc_signal< sc_lv<2> > prevGesture_V;
    sc_signal< sc_lv<12> > t_V_5_reg_181;
    sc_signal< sc_lv<32> > rowcnt_reg_192;
    sc_signal< sc_lv<64> > grp_fu_218_p1;
    sc_signal< sc_lv<64> > reg_224;
    sc_signal< bool > ap_sig_bdd_74;
    sc_signal< sc_lv<13> > op2_assign_fu_234_p2;
    sc_signal< sc_lv<13> > op2_assign_reg_591;
    sc_signal< sc_lv<13> > op2_assign_3_fu_244_p2;
    sc_signal< sc_lv<13> > op2_assign_3_reg_596;
    sc_signal< sc_lv<12> > i_V_fu_274_p2;
    sc_signal< sc_lv<12> > i_V_reg_604;
    sc_signal< sc_lv<1> > not_fu_280_p2;
    sc_signal< sc_lv<1> > not_reg_609;
    sc_signal< sc_lv<1> > tmp_s_fu_269_p2;
    sc_signal< sc_lv<1> > notrhs_fu_285_p2;
    sc_signal< sc_lv<1> > notrhs_reg_614;
    sc_signal< sc_lv<64> > tmp_2_fu_291_p1;
    sc_signal< sc_lv<13> > tmp_20_cast_fu_296_p1;
    sc_signal< sc_lv<13> > tmp_20_cast_reg_624;
    sc_signal< sc_logic > ap_reg_ppiten_pp0_it0;
    sc_signal< sc_lv<1> > tmp_6_reg_629;
    sc_signal< sc_lv<1> > or_cond_reg_638;
    sc_signal< bool > ap_sig_bdd_113;
    sc_signal< sc_logic > ap_reg_ppiten_pp0_it1;
    sc_signal< sc_lv<1> > ap_reg_ppstg_tmp_6_reg_629_pp0_it1;
    sc_signal< sc_lv<1> > not_or_cond_reg_647;
    sc_signal< sc_lv<1> > ap_reg_ppstg_not_or_cond_reg_647_pp0_it1;
    sc_signal< bool > ap_sig_bdd_127;
    sc_signal< sc_logic > ap_reg_ppiten_pp0_it2;
    sc_signal< sc_lv<1> > ap_reg_ppstg_tmp_6_reg_629_pp0_it2;
    sc_signal< bool > ap_sig_bdd_137;
    sc_signal< sc_logic > ap_reg_ppiten_pp0_it3;
    sc_signal< sc_lv<13> > ap_reg_ppstg_tmp_20_cast_reg_624_pp0_it1;
    sc_signal< sc_lv<1> > tmp_6_fu_300_p2;
    sc_signal< sc_lv<12> > j_V_fu_305_p2;
    sc_signal< sc_lv<1> > or_cond_fu_316_p2;
    sc_signal< sc_lv<8> > prevcol_1_fu_321_p1;
    sc_signal< sc_lv<8> > prevcol_1_reg_642;
    sc_signal< sc_lv<8> > ap_reg_ppstg_prevcol_1_reg_642_pp0_it1;
    sc_signal< sc_lv<1> > not_or_cond_fu_331_p2;
    sc_signal< sc_lv<1> > tmp_14_fu_351_p2;
    sc_signal< sc_lv<1> > tmp_14_reg_651;
    sc_signal< sc_lv<1> > sel_tmp1_fu_378_p2;
    sc_signal< sc_lv<1> > sel_tmp1_reg_656;
    sc_signal< sc_lv<32> > rowcnt_2_fu_438_p3;
    sc_signal< sc_lv<32> > flip2_2_fu_457_p3;
    sc_signal< sc_lv<32> > flip4_2_fu_477_p3;
    sc_signal< sc_lv<32> > flip8_2_fu_509_p3;
    sc_signal< sc_lv<64> > tmp_1_fu_517_p1;
    sc_signal< sc_lv<64> > grp_fu_205_p2;
    sc_signal< sc_lv<64> > tmp_3_reg_691;
    sc_signal< sc_lv<64> > grp_fu_221_p1;
    sc_signal< sc_lv<64> > tmp_5_reg_697;
    sc_signal< sc_lv<1> > grp_fu_210_p2;
    sc_signal< sc_lv<1> > tmp_reg_702;
    sc_signal< sc_lv<1> > grp_fu_214_p2;
    sc_signal< sc_lv<1> > tmp_23_reg_707;
    sc_signal< sc_lv<12> > t_V_reg_134;
    sc_signal< sc_lv<32> > flip2_reg_145;
    sc_signal< sc_lv<32> > flip4_reg_157;
    sc_signal< sc_lv<32> > flip8_reg_169;
    sc_signal< sc_lv<2> > temp_V_fu_551_p3;
    sc_signal< sc_lv<8> > prevcol_fu_80;
    sc_signal< sc_lv<8> > prevcol_3_fu_407_p3;
    sc_signal< sc_lv<8> > prev_fu_84;
    sc_signal< sc_lv<8> > prev_3_fu_392_p3;
    sc_signal< sc_lv<8> > pixel_in_val_fu_88;
    sc_signal< sc_lv<64> > grp_fu_205_p0;
    sc_signal< sc_lv<64> > grp_fu_205_p1;
    sc_signal< sc_lv<64> > grp_fu_210_p0;
    sc_signal< sc_lv<64> > grp_fu_210_p1;
    sc_signal< sc_lv<64> > grp_fu_214_p0;
    sc_signal< sc_lv<64> > grp_fu_214_p1;
    sc_signal< sc_lv<64> > grp_fu_218_p0;
    sc_signal< sc_lv<64> > grp_fu_221_p0;
    sc_signal< sc_lv<13> > retval_i_cast_fu_230_p1;
    sc_signal< sc_lv<13> > retval_i3_cast_fu_240_p1;
    sc_signal< sc_lv<13> > tmp_cast_fu_265_p1;
    sc_signal< sc_lv<1> > not6_fu_311_p2;
    sc_signal< sc_lv<1> > notlhs_fu_325_p2;
    sc_signal< sc_lv<13> > tmp_29_cast_fu_357_p1;
    sc_signal< sc_lv<13> > tmp_15_fu_361_p2;
    sc_signal< sc_lv<1> > retval_s_fu_366_p2;
    sc_signal< sc_lv<1> > sel_tmp_fu_372_p2;
    sc_signal< sc_lv<8> > prev_2_fu_384_p3;
    sc_signal< sc_lv<8> > prevcol_2_fu_400_p3;
    sc_signal< sc_lv<32> > sel_tmp10_v_cast_cast_fu_425_p3;
    sc_signal< sc_lv<32> > rowcnt_1_fu_432_p2;
    sc_signal< sc_lv<1> > tmp_10_fu_451_p2;
    sc_signal< sc_lv<32> > flip2_1_fu_445_p2;
    sc_signal< sc_lv<1> > tmp_11_fu_471_p2;
    sc_signal< sc_lv<32> > flip4_1_fu_465_p2;
    sc_signal< sc_lv<1> > tmp_12_fu_485_p2;
    sc_signal< sc_lv<1> > tmp_13_fu_491_p2;
    sc_signal< sc_lv<1> > or_cond5_fu_503_p2;
    sc_signal< sc_lv<32> > flip8_1_fu_497_p2;
    sc_signal< sc_lv<1> > tmp_22_fu_527_p2;
    sc_signal< sc_lv<1> > tmp_24_fu_532_p2;
    sc_signal< sc_lv<1> > sel_tmp3_fu_537_p2;
    sc_signal< sc_lv<2> > sel_tmp4_fu_543_p3;
    sc_signal< sc_logic > grp_fu_205_ce;
    sc_signal< sc_logic > grp_fu_210_ce;
    sc_signal< sc_lv<5> > grp_fu_210_opcode;
    sc_signal< sc_logic > grp_fu_214_ce;
    sc_signal< sc_lv<5> > grp_fu_214_opcode;
    sc_signal< sc_logic > grp_fu_218_ce;
    sc_signal< sc_logic > grp_fu_221_ce;
    sc_signal< sc_lv<5> > ap_NS_fsm;
    static const sc_logic ap_const_logic_1;
    static const sc_logic ap_const_logic_0;
    static const sc_lv<5> ap_ST_st1_fsm_0;
    static const sc_lv<5> ap_ST_st2_fsm_1;
    static const sc_lv<5> ap_ST_pp0_stg0_fsm_2;
    static const sc_lv<5> ap_ST_st7_fsm_3;
    static const sc_lv<5> ap_ST_st8_fsm_4;
    static const sc_lv<5> ap_ST_st9_fsm_5;
    static const sc_lv<5> ap_ST_st10_fsm_6;
    static const sc_lv<5> ap_ST_st11_fsm_7;
    static const sc_lv<5> ap_ST_st12_fsm_8;
    static const sc_lv<5> ap_ST_st13_fsm_9;
    static const sc_lv<5> ap_ST_st14_fsm_10;
    static const sc_lv<5> ap_ST_st15_fsm_11;
    static const sc_lv<5> ap_ST_st16_fsm_12;
    static const sc_lv<5> ap_ST_st17_fsm_13;
    static const sc_lv<5> ap_ST_st18_fsm_14;
    static const sc_lv<5> ap_ST_st19_fsm_15;
    static const sc_lv<5> ap_ST_st20_fsm_16;
    static const sc_lv<5> ap_ST_st21_fsm_17;
    static const sc_lv<5> ap_ST_st22_fsm_18;
    static const sc_lv<5> ap_ST_st23_fsm_19;
    static const sc_lv<5> ap_ST_st24_fsm_20;
    static const sc_lv<5> ap_ST_st25_fsm_21;
    static const sc_lv<5> ap_ST_st26_fsm_22;
    static const sc_lv<5> ap_ST_st27_fsm_23;
    static const sc_lv<5> ap_ST_st28_fsm_24;
    static const sc_lv<2> ap_const_lv2_0;
    static const sc_lv<1> ap_const_lv1_0;
    static const sc_lv<12> ap_const_lv12_0;
    static const sc_lv<32> ap_const_lv32_0;
    static const sc_lv<8> ap_const_lv8_0;
    static const sc_lv<32> ap_const_lv32_1;
    static const sc_lv<64> ap_const_lv64_3FD3333333333333;
    static const sc_lv<13> ap_const_lv13_1;
    static const sc_lv<12> ap_const_lv12_1;
    static const sc_lv<13> ap_const_lv13_14;
    static const sc_lv<1> ap_const_lv1_1;
    static const sc_lv<32> ap_const_lv32_FFFFFFFF;
    static const sc_lv<32> ap_const_lv32_2;
    static const sc_lv<32> ap_const_lv32_4;
    static const sc_lv<32> ap_const_lv32_6;
    static const sc_lv<32> ap_const_lv32_8;
    static const sc_lv<2> ap_const_lv2_2;
    static const sc_lv<2> ap_const_lv2_1;
    static const sc_lv<5> ap_const_lv5_3;
    // Thread declarations
    void thread_ap_clk_no_reset_();
    void thread_ap_done();
    void thread_ap_idle();
    void thread_ap_ready();
    void thread_ap_sig_bdd_113();
    void thread_ap_sig_bdd_127();
    void thread_ap_sig_bdd_137();
    void thread_ap_sig_bdd_74();
    void thread_dst_data_stream_0_V_din();
    void thread_dst_data_stream_0_V_write();
    void thread_flip2_1_fu_445_p2();
    void thread_flip2_2_fu_457_p3();
    void thread_flip4_1_fu_465_p2();
    void thread_flip4_2_fu_477_p3();
    void thread_flip8_1_fu_497_p2();
    void thread_flip8_2_fu_509_p3();
    void thread_gesture_V_V_din();
    void thread_gesture_V_V_write();
    void thread_grp_fu_205_ce();
    void thread_grp_fu_205_p0();
    void thread_grp_fu_205_p1();
    void thread_grp_fu_210_ce();
    void thread_grp_fu_210_opcode();
    void thread_grp_fu_210_p0();
    void thread_grp_fu_210_p1();
    void thread_grp_fu_214_ce();
    void thread_grp_fu_214_opcode();
    void thread_grp_fu_214_p0();
    void thread_grp_fu_214_p1();
    void thread_grp_fu_218_ce();
    void thread_grp_fu_218_p0();
    void thread_grp_fu_221_ce();
    void thread_grp_fu_221_p0();
    void thread_i_V_fu_274_p2();
    void thread_j_V_fu_305_p2();
    void thread_not6_fu_311_p2();
    void thread_not_fu_280_p2();
    void thread_not_or_cond_fu_331_p2();
    void thread_notlhs_fu_325_p2();
    void thread_notrhs_fu_285_p2();
    void thread_op2_assign_3_fu_244_p2();
    void thread_op2_assign_fu_234_p2();
    void thread_or_cond5_fu_503_p2();
    void thread_or_cond_fu_316_p2();
    void thread_prev_2_fu_384_p3();
    void thread_prev_3_fu_392_p3();
    void thread_prevcol_1_fu_321_p1();
    void thread_prevcol_2_fu_400_p3();
    void thread_prevcol_3_fu_407_p3();
    void thread_retval_i3_cast_fu_240_p1();
    void thread_retval_i_cast_fu_230_p1();
    void thread_retval_s_fu_366_p2();
    void thread_rowcnt_1_fu_432_p2();
    void thread_rowcnt_2_fu_438_p3();
    void thread_sel_tmp10_v_cast_cast_fu_425_p3();
    void thread_sel_tmp1_fu_378_p2();
    void thread_sel_tmp3_fu_537_p2();
    void thread_sel_tmp4_fu_543_p3();
    void thread_sel_tmp_fu_372_p2();
    void thread_src_data_stream_0_V_read();
    void thread_temp_V_fu_551_p3();
    void thread_tmp_10_fu_451_p2();
    void thread_tmp_11_fu_471_p2();
    void thread_tmp_12_fu_485_p2();
    void thread_tmp_13_fu_491_p2();
    void thread_tmp_14_fu_351_p2();
    void thread_tmp_15_fu_361_p2();
    void thread_tmp_1_fu_517_p1();
    void thread_tmp_20_cast_fu_296_p1();
    void thread_tmp_22_fu_527_p2();
    void thread_tmp_24_fu_532_p2();
    void thread_tmp_29_cast_fu_357_p1();
    void thread_tmp_2_fu_291_p1();
    void thread_tmp_6_fu_300_p2();
    void thread_tmp_cast_fu_265_p1();
    void thread_tmp_s_fu_269_p2();
    void thread_ap_NS_fsm();
};

}

using namespace ap_rtl;

#endif
