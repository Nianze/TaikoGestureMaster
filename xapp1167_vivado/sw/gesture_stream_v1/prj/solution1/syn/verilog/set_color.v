// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2013.2
// Copyright (C) 2013 Xilinx Inc. All rights reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

module set_color (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_continue,
        ap_idle,
        ap_ready,
        src_rows_V_read,
        src_cols_V_read,
        src_data_stream_0_V_dout,
        src_data_stream_0_V_empty_n,
        src_data_stream_0_V_read,
        dst_data_stream_0_V_din,
        dst_data_stream_0_V_full_n,
        dst_data_stream_0_V_write,
        dst_data_stream_1_V_din,
        dst_data_stream_1_V_full_n,
        dst_data_stream_1_V_write,
        dst_data_stream_2_V_din,
        dst_data_stream_2_V_full_n,
        dst_data_stream_2_V_write,
        gesture_V_V_dout,
        gesture_V_V_empty_n,
        gesture_V_V_read
);

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
input   ap_continue;
output   ap_idle;
output   ap_ready;
input  [11:0] src_rows_V_read;
input  [11:0] src_cols_V_read;
input  [7:0] src_data_stream_0_V_dout;
input   src_data_stream_0_V_empty_n;
output   src_data_stream_0_V_read;
output  [7:0] dst_data_stream_0_V_din;
input   dst_data_stream_0_V_full_n;
output   dst_data_stream_0_V_write;
output  [7:0] dst_data_stream_1_V_din;
input   dst_data_stream_1_V_full_n;
output   dst_data_stream_1_V_write;
output  [7:0] dst_data_stream_2_V_din;
input   dst_data_stream_2_V_full_n;
output   dst_data_stream_2_V_write;
input  [1:0] gesture_V_V_dout;
input   gesture_V_V_empty_n;
output   gesture_V_V_read;

reg ap_done;
reg ap_idle;
reg ap_ready;
reg src_data_stream_0_V_read;
reg dst_data_stream_0_V_write;
reg dst_data_stream_1_V_write;
reg dst_data_stream_2_V_write;
reg gesture_V_V_read;
reg    ap_done_reg = 1'b0;
reg   [1:0] ap_CS_fsm = 2'b00;
reg   [11:0] t_V_reg_118;
reg    ap_sig_bdd_51;
wire   [11:0] i_V_fu_135_p2;
reg   [11:0] i_V_reg_267;
wire   [0:0] exitcond_fu_141_p2;
reg   [0:0] exitcond_reg_272;
reg    ap_reg_ppiten_pp0_it0 = 1'b0;
reg    ap_sig_bdd_72;
reg    ap_reg_ppiten_pp0_it1 = 1'b0;
reg    ap_reg_ppiten_pp0_it2 = 1'b0;
reg   [0:0] ap_reg_ppstg_exitcond_reg_272_pp0_it2;
reg    ap_sig_bdd_88;
reg    ap_reg_ppiten_pp0_it3 = 1'b0;
reg   [0:0] ap_reg_ppstg_exitcond_reg_272_pp0_it1;
wire   [11:0] j_V_fu_146_p2;
reg   [7:0] tmp_reg_281;
wire   [0:0] tmp_28_fu_152_p1;
reg   [0:0] tmp_28_reg_286;
wire   [0:0] tmp_s_fu_156_p2;
reg   [0:0] tmp_s_reg_292;
wire   [0:0] tmp_9_fu_162_p2;
reg   [0:0] tmp_9_reg_301;
wire   [0:0] tmp2_fu_180_p2;
reg   [0:0] tmp2_reg_306;
wire   [7:0] pixel_out_val_2_fu_207_p3;
reg   [7:0] pixel_out_val_2_reg_311;
wire   [0:0] pixel_out_val_1_fu_219_p2;
reg   [0:0] pixel_out_val_1_reg_316;
wire   [0:0] pixel_out_val_0_fu_241_p2;
reg   [0:0] pixel_out_val_0_reg_321;
wire   [0:0] exitcond4_fu_130_p2;
reg   [11:0] t_V_6_reg_107;
wire   [0:0] tmp_10_fu_168_p2;
wire   [0:0] sel_tmp3_fu_174_p2;
wire   [0:0] sel_tmp5_fu_190_p2;
wire   [0:0] sel_tmp_fu_186_p2;
wire   [0:0] tmp_16_fu_194_p2;
wire   [7:0] sel_tmp6_fu_200_p3;
wire   [0:0] sel_tmp7_fu_214_p2;
wire   [0:0] sel_tmp8_fu_224_p2;
wire   [0:0] not_sel_tmp5_fu_229_p2;
wire   [0:0] sel_tmp9_fu_235_p2;
reg   [1:0] ap_NS_fsm;
parameter    ap_const_logic_1 = 1'b1;
parameter    ap_const_logic_0 = 1'b0;
parameter    ap_ST_st1_fsm_0 = 2'b00;
parameter    ap_ST_st2_fsm_1 = 2'b1;
parameter    ap_ST_pp0_stg0_fsm_2 = 2'b10;
parameter    ap_const_lv1_0 = 1'b0;
parameter    ap_const_lv12_0 = 12'b000000000000;
parameter    ap_const_lv12_1 = 12'b1;
parameter    ap_const_lv8_FF = 8'b11111111;
parameter    ap_const_lv2_0 = 2'b00;
parameter    ap_const_lv2_1 = 2'b1;
parameter    ap_const_lv1_1 = 1'b1;
parameter    ap_const_lv8_0 = 8'b00000000;
parameter    ap_true = 1'b1;




/// the current state (ap_CS_fsm) of the state machine. ///
always @ (posedge ap_clk)
begin : ap_ret_ap_CS_fsm
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_st1_fsm_0;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

/// ap_done_reg assign process. ///
always @ (posedge ap_clk)
begin : ap_ret_ap_done_reg
    if (ap_rst == 1'b1) begin
        ap_done_reg <= ap_const_logic_0;
    end else begin
        if ((ap_const_logic_1 == ap_continue)) begin
            ap_done_reg <= ap_const_logic_0;
        end else if (((ap_ST_st2_fsm_1 == ap_CS_fsm) & ~(ap_const_lv1_0 == exitcond4_fu_130_p2))) begin
            ap_done_reg <= ap_const_logic_1;
        end
    end
end

/// ap_reg_ppiten_pp0_it0 assign process. ///
always @ (posedge ap_clk)
begin : ap_ret_ap_reg_ppiten_pp0_it0
    if (ap_rst == 1'b1) begin
        ap_reg_ppiten_pp0_it0 <= ap_const_logic_0;
    end else begin
        if (((ap_ST_pp0_stg0_fsm_2 == ap_CS_fsm) & ~((ap_sig_bdd_72 & (ap_const_logic_1 == ap_reg_ppiten_pp0_it1)) | (ap_sig_bdd_88 & (ap_const_logic_1 == ap_reg_ppiten_pp0_it3))) & ~(exitcond_fu_141_p2 == ap_const_lv1_0))) begin
            ap_reg_ppiten_pp0_it0 <= ap_const_logic_0;
        end else if (((ap_ST_st2_fsm_1 == ap_CS_fsm) & (ap_const_lv1_0 == exitcond4_fu_130_p2))) begin
            ap_reg_ppiten_pp0_it0 <= ap_const_logic_1;
        end
    end
end

/// ap_reg_ppiten_pp0_it1 assign process. ///
always @ (posedge ap_clk)
begin : ap_ret_ap_reg_ppiten_pp0_it1
    if (ap_rst == 1'b1) begin
        ap_reg_ppiten_pp0_it1 <= ap_const_logic_0;
    end else begin
        if (((ap_ST_pp0_stg0_fsm_2 == ap_CS_fsm) & ~((ap_sig_bdd_72 & (ap_const_logic_1 == ap_reg_ppiten_pp0_it1)) | (ap_sig_bdd_88 & (ap_const_logic_1 == ap_reg_ppiten_pp0_it3))) & (exitcond_fu_141_p2 == ap_const_lv1_0))) begin
            ap_reg_ppiten_pp0_it1 <= ap_const_logic_1;
        end else if ((((ap_ST_st2_fsm_1 == ap_CS_fsm) & (ap_const_lv1_0 == exitcond4_fu_130_p2)) | ((ap_ST_pp0_stg0_fsm_2 == ap_CS_fsm) & ~((ap_sig_bdd_72 & (ap_const_logic_1 == ap_reg_ppiten_pp0_it1)) | (ap_sig_bdd_88 & (ap_const_logic_1 == ap_reg_ppiten_pp0_it3))) & ~(exitcond_fu_141_p2 == ap_const_lv1_0)))) begin
            ap_reg_ppiten_pp0_it1 <= ap_const_logic_0;
        end
    end
end

/// ap_reg_ppiten_pp0_it2 assign process. ///
always @ (posedge ap_clk)
begin : ap_ret_ap_reg_ppiten_pp0_it2
    if (ap_rst == 1'b1) begin
        ap_reg_ppiten_pp0_it2 <= ap_const_logic_0;
    end else begin
        if (((ap_ST_pp0_stg0_fsm_2 == ap_CS_fsm) & ~((ap_sig_bdd_72 & (ap_const_logic_1 == ap_reg_ppiten_pp0_it1)) | (ap_sig_bdd_88 & (ap_const_logic_1 == ap_reg_ppiten_pp0_it3))))) begin
            ap_reg_ppiten_pp0_it2 <= ap_reg_ppiten_pp0_it1;
        end else if (((ap_ST_st2_fsm_1 == ap_CS_fsm) & (ap_const_lv1_0 == exitcond4_fu_130_p2))) begin
            ap_reg_ppiten_pp0_it2 <= ap_const_logic_0;
        end
    end
end

/// ap_reg_ppiten_pp0_it3 assign process. ///
always @ (posedge ap_clk)
begin : ap_ret_ap_reg_ppiten_pp0_it3
    if (ap_rst == 1'b1) begin
        ap_reg_ppiten_pp0_it3 <= ap_const_logic_0;
    end else begin
        if (((ap_ST_pp0_stg0_fsm_2 == ap_CS_fsm) & ~((ap_sig_bdd_72 & (ap_const_logic_1 == ap_reg_ppiten_pp0_it1)) | (ap_sig_bdd_88 & (ap_const_logic_1 == ap_reg_ppiten_pp0_it3))))) begin
            ap_reg_ppiten_pp0_it3 <= ap_reg_ppiten_pp0_it2;
        end else if (((ap_ST_st2_fsm_1 == ap_CS_fsm) & (ap_const_lv1_0 == exitcond4_fu_130_p2))) begin
            ap_reg_ppiten_pp0_it3 <= ap_const_logic_0;
        end
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if (((ap_ST_pp0_stg0_fsm_2 == ap_CS_fsm) & (ap_const_logic_1 == ap_reg_ppiten_pp0_it0) & ~((ap_sig_bdd_72 & (ap_const_logic_1 == ap_reg_ppiten_pp0_it1)) | (ap_sig_bdd_88 & (ap_const_logic_1 == ap_reg_ppiten_pp0_it3))) & ~(exitcond_fu_141_p2 == ap_const_lv1_0))) begin
        t_V_6_reg_107 <= i_V_reg_267;
    end else if (((ap_ST_st1_fsm_0 == ap_CS_fsm) & ~ap_sig_bdd_51)) begin
        t_V_6_reg_107 <= ap_const_lv12_0;
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if (((ap_ST_st2_fsm_1 == ap_CS_fsm) & (ap_const_lv1_0 == exitcond4_fu_130_p2))) begin
        t_V_reg_118 <= ap_const_lv12_0;
    end else if (((ap_ST_pp0_stg0_fsm_2 == ap_CS_fsm) & (ap_const_logic_1 == ap_reg_ppiten_pp0_it0) & ~((ap_sig_bdd_72 & (ap_const_logic_1 == ap_reg_ppiten_pp0_it1)) | (ap_sig_bdd_88 & (ap_const_logic_1 == ap_reg_ppiten_pp0_it3))) & (exitcond_fu_141_p2 == ap_const_lv1_0))) begin
        t_V_reg_118 <= j_V_fu_146_p2;
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if (((ap_ST_pp0_stg0_fsm_2 == ap_CS_fsm) & ~((ap_sig_bdd_72 & (ap_const_logic_1 == ap_reg_ppiten_pp0_it1)) | (ap_sig_bdd_88 & (ap_const_logic_1 == ap_reg_ppiten_pp0_it3))))) begin
        ap_reg_ppstg_exitcond_reg_272_pp0_it1 <= exitcond_reg_272;
        ap_reg_ppstg_exitcond_reg_272_pp0_it2 <= ap_reg_ppstg_exitcond_reg_272_pp0_it1;
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if (((ap_ST_pp0_stg0_fsm_2 == ap_CS_fsm) & (ap_const_logic_1 == ap_reg_ppiten_pp0_it0) & ~((ap_sig_bdd_72 & (ap_const_logic_1 == ap_reg_ppiten_pp0_it1)) | (ap_sig_bdd_88 & (ap_const_logic_1 == ap_reg_ppiten_pp0_it3))))) begin
        exitcond_reg_272 <= exitcond_fu_141_p2;
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if ((ap_ST_st2_fsm_1 == ap_CS_fsm)) begin
        i_V_reg_267 <= i_V_fu_135_p2;
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if (((ap_ST_pp0_stg0_fsm_2 == ap_CS_fsm) & (ap_const_logic_1 == ap_reg_ppiten_pp0_it2) & ~((ap_sig_bdd_72 & (ap_const_logic_1 == ap_reg_ppiten_pp0_it1)) | (ap_sig_bdd_88 & (ap_const_logic_1 == ap_reg_ppiten_pp0_it3))) & (ap_const_lv1_0 == ap_reg_ppstg_exitcond_reg_272_pp0_it1))) begin
        pixel_out_val_0_reg_321 <= pixel_out_val_0_fu_241_p2;
        pixel_out_val_1_reg_316 <= pixel_out_val_1_fu_219_p2;
        pixel_out_val_2_reg_311 <= pixel_out_val_2_fu_207_p3;
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if (((ap_ST_pp0_stg0_fsm_2 == ap_CS_fsm) & (exitcond_reg_272 == ap_const_lv1_0) & (ap_const_logic_1 == ap_reg_ppiten_pp0_it1) & ~((ap_sig_bdd_72 & (ap_const_logic_1 == ap_reg_ppiten_pp0_it1)) | (ap_sig_bdd_88 & (ap_const_logic_1 == ap_reg_ppiten_pp0_it3))))) begin
        tmp2_reg_306 <= tmp2_fu_180_p2;
        tmp_28_reg_286 <= tmp_28_fu_152_p1;
        tmp_9_reg_301 <= tmp_9_fu_162_p2;
        tmp_reg_281 <= src_data_stream_0_V_dout;
        tmp_s_reg_292 <= tmp_s_fu_156_p2;
    end
end

/// ap_done assign process. ///
always @ (ap_done_reg or ap_CS_fsm or exitcond4_fu_130_p2)
begin
    if (((ap_const_logic_1 == ap_done_reg) | ((ap_ST_st2_fsm_1 == ap_CS_fsm) & ~(ap_const_lv1_0 == exitcond4_fu_130_p2)))) begin
        ap_done = ap_const_logic_1;
    end else begin
        ap_done = ap_const_logic_0;
    end
end

/// ap_idle assign process. ///
always @ (ap_start or ap_CS_fsm)
begin
    if ((~(ap_const_logic_1 == ap_start) & (ap_ST_st1_fsm_0 == ap_CS_fsm))) begin
        ap_idle = ap_const_logic_1;
    end else begin
        ap_idle = ap_const_logic_0;
    end
end

/// ap_ready assign process. ///
always @ (ap_CS_fsm or exitcond4_fu_130_p2)
begin
    if (((ap_ST_st2_fsm_1 == ap_CS_fsm) & ~(ap_const_lv1_0 == exitcond4_fu_130_p2))) begin
        ap_ready = ap_const_logic_1;
    end else begin
        ap_ready = ap_const_logic_0;
    end
end

/// dst_data_stream_0_V_write assign process. ///
always @ (ap_CS_fsm or ap_sig_bdd_72 or ap_reg_ppiten_pp0_it1 or ap_reg_ppstg_exitcond_reg_272_pp0_it2 or ap_sig_bdd_88 or ap_reg_ppiten_pp0_it3)
begin
    if (((ap_ST_pp0_stg0_fsm_2 == ap_CS_fsm) & (ap_const_lv1_0 == ap_reg_ppstg_exitcond_reg_272_pp0_it2) & (ap_const_logic_1 == ap_reg_ppiten_pp0_it3) & ~((ap_sig_bdd_72 & (ap_const_logic_1 == ap_reg_ppiten_pp0_it1)) | (ap_sig_bdd_88 & (ap_const_logic_1 == ap_reg_ppiten_pp0_it3))))) begin
        dst_data_stream_0_V_write = ap_const_logic_1;
    end else begin
        dst_data_stream_0_V_write = ap_const_logic_0;
    end
end

/// dst_data_stream_1_V_write assign process. ///
always @ (ap_CS_fsm or ap_sig_bdd_72 or ap_reg_ppiten_pp0_it1 or ap_reg_ppstg_exitcond_reg_272_pp0_it2 or ap_sig_bdd_88 or ap_reg_ppiten_pp0_it3)
begin
    if (((ap_ST_pp0_stg0_fsm_2 == ap_CS_fsm) & (ap_const_lv1_0 == ap_reg_ppstg_exitcond_reg_272_pp0_it2) & (ap_const_logic_1 == ap_reg_ppiten_pp0_it3) & ~((ap_sig_bdd_72 & (ap_const_logic_1 == ap_reg_ppiten_pp0_it1)) | (ap_sig_bdd_88 & (ap_const_logic_1 == ap_reg_ppiten_pp0_it3))))) begin
        dst_data_stream_1_V_write = ap_const_logic_1;
    end else begin
        dst_data_stream_1_V_write = ap_const_logic_0;
    end
end

/// dst_data_stream_2_V_write assign process. ///
always @ (ap_CS_fsm or ap_sig_bdd_72 or ap_reg_ppiten_pp0_it1 or ap_reg_ppstg_exitcond_reg_272_pp0_it2 or ap_sig_bdd_88 or ap_reg_ppiten_pp0_it3)
begin
    if (((ap_ST_pp0_stg0_fsm_2 == ap_CS_fsm) & (ap_const_lv1_0 == ap_reg_ppstg_exitcond_reg_272_pp0_it2) & (ap_const_logic_1 == ap_reg_ppiten_pp0_it3) & ~((ap_sig_bdd_72 & (ap_const_logic_1 == ap_reg_ppiten_pp0_it1)) | (ap_sig_bdd_88 & (ap_const_logic_1 == ap_reg_ppiten_pp0_it3))))) begin
        dst_data_stream_2_V_write = ap_const_logic_1;
    end else begin
        dst_data_stream_2_V_write = ap_const_logic_0;
    end
end

/// gesture_V_V_read assign process. ///
always @ (ap_CS_fsm or exitcond_reg_272 or ap_sig_bdd_72 or ap_reg_ppiten_pp0_it1 or ap_sig_bdd_88 or ap_reg_ppiten_pp0_it3)
begin
    if (((ap_ST_pp0_stg0_fsm_2 == ap_CS_fsm) & (exitcond_reg_272 == ap_const_lv1_0) & (ap_const_logic_1 == ap_reg_ppiten_pp0_it1) & ~((ap_sig_bdd_72 & (ap_const_logic_1 == ap_reg_ppiten_pp0_it1)) | (ap_sig_bdd_88 & (ap_const_logic_1 == ap_reg_ppiten_pp0_it3))))) begin
        gesture_V_V_read = ap_const_logic_1;
    end else begin
        gesture_V_V_read = ap_const_logic_0;
    end
end

/// src_data_stream_0_V_read assign process. ///
always @ (ap_CS_fsm or exitcond_reg_272 or ap_sig_bdd_72 or ap_reg_ppiten_pp0_it1 or ap_sig_bdd_88 or ap_reg_ppiten_pp0_it3)
begin
    if (((ap_ST_pp0_stg0_fsm_2 == ap_CS_fsm) & (exitcond_reg_272 == ap_const_lv1_0) & (ap_const_logic_1 == ap_reg_ppiten_pp0_it1) & ~((ap_sig_bdd_72 & (ap_const_logic_1 == ap_reg_ppiten_pp0_it1)) | (ap_sig_bdd_88 & (ap_const_logic_1 == ap_reg_ppiten_pp0_it3))))) begin
        src_data_stream_0_V_read = ap_const_logic_1;
    end else begin
        src_data_stream_0_V_read = ap_const_logic_0;
    end
end
always @ (ap_CS_fsm or ap_sig_bdd_51 or exitcond_fu_141_p2 or ap_reg_ppiten_pp0_it0 or ap_sig_bdd_72 or ap_reg_ppiten_pp0_it1 or ap_reg_ppiten_pp0_it2 or ap_sig_bdd_88 or ap_reg_ppiten_pp0_it3 or exitcond4_fu_130_p2)
begin
    case (ap_CS_fsm)
        ap_ST_st1_fsm_0 : 
            if (~ap_sig_bdd_51) begin
                ap_NS_fsm = ap_ST_st2_fsm_1;
            end else begin
                ap_NS_fsm = ap_ST_st1_fsm_0;
            end
        ap_ST_st2_fsm_1 : 
            if (~(ap_const_lv1_0 == exitcond4_fu_130_p2)) begin
                ap_NS_fsm = ap_ST_st1_fsm_0;
            end else begin
                ap_NS_fsm = ap_ST_pp0_stg0_fsm_2;
            end
        ap_ST_pp0_stg0_fsm_2 : 
            if ((~((ap_ST_pp0_stg0_fsm_2 == ap_CS_fsm) & (ap_const_logic_1 == ap_reg_ppiten_pp0_it3) & ~((ap_sig_bdd_72 & (ap_const_logic_1 == ap_reg_ppiten_pp0_it1)) | (ap_sig_bdd_88 & (ap_const_logic_1 == ap_reg_ppiten_pp0_it3))) & ~(ap_const_logic_1 == ap_reg_ppiten_pp0_it2)) & ~((ap_const_logic_1 == ap_reg_ppiten_pp0_it0) & ~((ap_sig_bdd_72 & (ap_const_logic_1 == ap_reg_ppiten_pp0_it1)) | (ap_sig_bdd_88 & (ap_const_logic_1 == ap_reg_ppiten_pp0_it3))) & ~(exitcond_fu_141_p2 == ap_const_lv1_0) & ~(ap_const_logic_1 == ap_reg_ppiten_pp0_it1)))) begin
                ap_NS_fsm = ap_ST_pp0_stg0_fsm_2;
            end else if ((((ap_ST_pp0_stg0_fsm_2 == ap_CS_fsm) & (ap_const_logic_1 == ap_reg_ppiten_pp0_it3) & ~((ap_sig_bdd_72 & (ap_const_logic_1 == ap_reg_ppiten_pp0_it1)) | (ap_sig_bdd_88 & (ap_const_logic_1 == ap_reg_ppiten_pp0_it3))) & ~(ap_const_logic_1 == ap_reg_ppiten_pp0_it2)) | ((ap_const_logic_1 == ap_reg_ppiten_pp0_it0) & ~((ap_sig_bdd_72 & (ap_const_logic_1 == ap_reg_ppiten_pp0_it1)) | (ap_sig_bdd_88 & (ap_const_logic_1 == ap_reg_ppiten_pp0_it3))) & ~(exitcond_fu_141_p2 == ap_const_lv1_0) & ~(ap_const_logic_1 == ap_reg_ppiten_pp0_it1)))) begin
                ap_NS_fsm = ap_ST_st2_fsm_1;
            end else begin
                ap_NS_fsm = ap_ST_pp0_stg0_fsm_2;
            end
        default : 
            ap_NS_fsm = 'bx;
    endcase
end

/// ap_sig_bdd_51 assign process. ///
always @ (ap_start or ap_done_reg)
begin
    ap_sig_bdd_51 = ((ap_start == ap_const_logic_0) | (ap_done_reg == ap_const_logic_1));
end

/// ap_sig_bdd_72 assign process. ///
always @ (src_data_stream_0_V_empty_n or gesture_V_V_empty_n or exitcond_reg_272)
begin
    ap_sig_bdd_72 = (((src_data_stream_0_V_empty_n == ap_const_logic_0) & (exitcond_reg_272 == ap_const_lv1_0)) | ((exitcond_reg_272 == ap_const_lv1_0) & (gesture_V_V_empty_n == ap_const_logic_0)));
end

/// ap_sig_bdd_88 assign process. ///
always @ (dst_data_stream_0_V_full_n or dst_data_stream_1_V_full_n or dst_data_stream_2_V_full_n or ap_reg_ppstg_exitcond_reg_272_pp0_it2)
begin
    ap_sig_bdd_88 = (((dst_data_stream_0_V_full_n == ap_const_logic_0) & (ap_const_lv1_0 == ap_reg_ppstg_exitcond_reg_272_pp0_it2)) | ((ap_const_lv1_0 == ap_reg_ppstg_exitcond_reg_272_pp0_it2) & (dst_data_stream_1_V_full_n == ap_const_logic_0)) | ((ap_const_lv1_0 == ap_reg_ppstg_exitcond_reg_272_pp0_it2) & (dst_data_stream_2_V_full_n == ap_const_logic_0)));
end
assign dst_data_stream_0_V_din = $signed(pixel_out_val_0_reg_321);
assign dst_data_stream_1_V_din = $signed(pixel_out_val_1_reg_316);
assign dst_data_stream_2_V_din = pixel_out_val_2_reg_311;
assign exitcond4_fu_130_p2 = (t_V_6_reg_107 == src_rows_V_read? 1'b1: 1'b0);
assign exitcond_fu_141_p2 = (t_V_reg_118 == src_cols_V_read? 1'b1: 1'b0);
assign i_V_fu_135_p2 = (t_V_6_reg_107 + ap_const_lv12_1);
assign j_V_fu_146_p2 = (t_V_reg_118 + ap_const_lv12_1);
assign not_sel_tmp5_fu_229_p2 = (sel_tmp5_fu_190_p2 ^ ap_const_lv1_1);
assign pixel_out_val_0_fu_241_p2 = (tmp_s_reg_292 & sel_tmp9_fu_235_p2);
assign pixel_out_val_1_fu_219_p2 = (tmp_s_reg_292 & sel_tmp7_fu_214_p2);
assign pixel_out_val_2_fu_207_p3 = ((tmp_s_reg_292)? sel_tmp6_fu_200_p3: ap_const_lv8_0);
assign sel_tmp3_fu_174_p2 = (tmp_9_fu_162_p2 ^ ap_const_lv1_1);
assign sel_tmp5_fu_190_p2 = (tmp2_reg_306 & tmp_s_reg_292);
assign sel_tmp6_fu_200_p3 = ((tmp_16_fu_194_p2)? ap_const_lv8_0: tmp_reg_281);
assign sel_tmp7_fu_214_p2 = (sel_tmp5_fu_190_p2 & tmp_28_reg_286);
assign sel_tmp8_fu_224_p2 = (sel_tmp_fu_186_p2 & tmp_28_reg_286);
assign sel_tmp9_fu_235_p2 = (sel_tmp8_fu_224_p2 & not_sel_tmp5_fu_229_p2);
assign sel_tmp_fu_186_p2 = (tmp_s_reg_292 & tmp_9_reg_301);
assign tmp2_fu_180_p2 = (tmp_10_fu_168_p2 & sel_tmp3_fu_174_p2);
assign tmp_10_fu_168_p2 = (gesture_V_V_dout == ap_const_lv2_1? 1'b1: 1'b0);
assign tmp_16_fu_194_p2 = (sel_tmp5_fu_190_p2 | sel_tmp_fu_186_p2);
assign tmp_28_fu_152_p1 = src_data_stream_0_V_dout[0:0];
assign tmp_9_fu_162_p2 = (gesture_V_V_dout == ap_const_lv2_0? 1'b1: 1'b0);
assign tmp_s_fu_156_p2 = (src_data_stream_0_V_dout == ap_const_lv8_FF? 1'b1: 1'b0);


endmodule //set_color

