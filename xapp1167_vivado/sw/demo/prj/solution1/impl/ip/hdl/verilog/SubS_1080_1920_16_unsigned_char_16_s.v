// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2013.2
// Copyright (C) 2013 Xilinx Inc. All rights reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

module SubS_1080_1920_16_unsigned_char_16_s (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_continue,
        ap_idle,
        ap_ready,
        src_rows_V_read,
        src_cols_V_read,
        src_data_stream_0_V_dout,
        src_data_stream_0_V_empty_n,
        src_data_stream_0_V_read,
        src_data_stream_1_V_dout,
        src_data_stream_1_V_empty_n,
        src_data_stream_1_V_read,
        src_data_stream_2_V_dout,
        src_data_stream_2_V_empty_n,
        src_data_stream_2_V_read,
        dst_rows_V_read,
        dst_cols_V_read,
        dst_data_stream_0_V_din,
        dst_data_stream_0_V_full_n,
        dst_data_stream_0_V_write,
        dst_data_stream_1_V_din,
        dst_data_stream_1_V_full_n,
        dst_data_stream_1_V_write,
        dst_data_stream_2_V_din,
        dst_data_stream_2_V_full_n,
        dst_data_stream_2_V_write
);

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
input   ap_continue;
output   ap_idle;
output   ap_ready;
input  [11:0] src_rows_V_read;
input  [11:0] src_cols_V_read;
input  [7:0] src_data_stream_0_V_dout;
input   src_data_stream_0_V_empty_n;
output   src_data_stream_0_V_read;
input  [7:0] src_data_stream_1_V_dout;
input   src_data_stream_1_V_empty_n;
output   src_data_stream_1_V_read;
input  [7:0] src_data_stream_2_V_dout;
input   src_data_stream_2_V_empty_n;
output   src_data_stream_2_V_read;
input  [11:0] dst_rows_V_read;
input  [11:0] dst_cols_V_read;
output  [7:0] dst_data_stream_0_V_din;
input   dst_data_stream_0_V_full_n;
output   dst_data_stream_0_V_write;
output  [7:0] dst_data_stream_1_V_din;
input   dst_data_stream_1_V_full_n;
output   dst_data_stream_1_V_write;
output  [7:0] dst_data_stream_2_V_din;
input   dst_data_stream_2_V_full_n;
output   dst_data_stream_2_V_write;

reg ap_done;
reg ap_idle;
reg ap_ready;
reg src_data_stream_0_V_read;
reg src_data_stream_1_V_read;
reg src_data_stream_2_V_read;
reg dst_data_stream_0_V_write;
reg dst_data_stream_1_V_write;
reg dst_data_stream_2_V_write;
reg    ap_done_reg = 1'b0;
reg   [1:0] ap_CS_fsm = 2'b00;
reg   [11:0] t_V_5_reg_148;
reg    ap_sig_bdd_58;
wire   [11:0] i_V_fu_165_p2;
reg   [11:0] i_V_reg_285;
wire   [0:0] exitcond4_fu_171_p2;
reg   [0:0] exitcond4_reg_290;
reg    ap_reg_ppiten_pp0_it0 = 1'b0;
reg    ap_sig_bdd_82;
reg    ap_reg_ppiten_pp0_it1 = 1'b0;
reg   [0:0] ap_reg_ppstg_exitcond4_reg_290_pp0_it1;
reg    ap_sig_bdd_96;
reg    ap_reg_ppiten_pp0_it2 = 1'b0;
wire   [11:0] j_V_fu_176_p2;
reg   [7:0] tmp_149_reg_299;
reg   [7:0] tmp_150_reg_304;
reg   [7:0] tmp_151_reg_309;
wire   [0:0] exitcond_fu_160_p2;
reg   [11:0] t_V_reg_137;
wire   [8:0] tmp18_cast_i_fu_182_p1;
wire   [8:0] v_assign_fu_185_p2;
wire   [0:0] tmp_fu_191_p3;
wire   [7:0] tmp_144_fu_199_p1;
wire   [8:0] tmp_1_cast_i_fu_212_p1;
wire   [8:0] v_assign_3_fu_215_p2;
wire   [0:0] tmp_145_fu_221_p3;
wire   [7:0] tmp_146_fu_229_p1;
wire   [8:0] tmp_2_cast_i_fu_242_p1;
wire   [8:0] v_assign_4_fu_245_p2;
wire   [0:0] tmp_147_fu_251_p3;
wire   [7:0] tmp_148_fu_259_p1;
reg   [1:0] ap_NS_fsm;
parameter    ap_const_logic_1 = 1'b1;
parameter    ap_const_logic_0 = 1'b0;
parameter    ap_ST_st1_fsm_0 = 2'b00;
parameter    ap_ST_st2_fsm_1 = 2'b1;
parameter    ap_ST_pp0_stg0_fsm_2 = 2'b10;
parameter    ap_ST_st6_fsm_3 = 2'b11;
parameter    ap_const_lv1_0 = 1'b0;
parameter    ap_const_lv12_0 = 12'b000000000000;
parameter    ap_const_lv12_1 = 12'b1;
parameter    ap_const_lv9_1CE = 9'b111001110;
parameter    ap_const_lv32_8 = 32'b1000;
parameter    ap_const_lv8_0 = 8'b00000000;
parameter    ap_true = 1'b1;




/// the current state (ap_CS_fsm) of the state machine. ///
always @ (posedge ap_clk)
begin : ap_ret_ap_CS_fsm
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_st1_fsm_0;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

/// ap_done_reg assign process. ///
always @ (posedge ap_clk)
begin : ap_ret_ap_done_reg
    if (ap_rst == 1'b1) begin
        ap_done_reg <= ap_const_logic_0;
    end else begin
        if ((ap_const_logic_1 == ap_continue)) begin
            ap_done_reg <= ap_const_logic_0;
        end else if (((ap_ST_st2_fsm_1 == ap_CS_fsm) & ~(ap_const_lv1_0 == exitcond_fu_160_p2))) begin
            ap_done_reg <= ap_const_logic_1;
        end
    end
end

/// ap_reg_ppiten_pp0_it0 assign process. ///
always @ (posedge ap_clk)
begin : ap_ret_ap_reg_ppiten_pp0_it0
    if (ap_rst == 1'b1) begin
        ap_reg_ppiten_pp0_it0 <= ap_const_logic_0;
    end else begin
        if (((ap_ST_pp0_stg0_fsm_2 == ap_CS_fsm) & ~((ap_sig_bdd_82 & (ap_const_logic_1 == ap_reg_ppiten_pp0_it1)) | (ap_sig_bdd_96 & (ap_const_logic_1 == ap_reg_ppiten_pp0_it2))) & ~(exitcond4_fu_171_p2 == ap_const_lv1_0))) begin
            ap_reg_ppiten_pp0_it0 <= ap_const_logic_0;
        end else if (((ap_ST_st2_fsm_1 == ap_CS_fsm) & (ap_const_lv1_0 == exitcond_fu_160_p2))) begin
            ap_reg_ppiten_pp0_it0 <= ap_const_logic_1;
        end
    end
end

/// ap_reg_ppiten_pp0_it1 assign process. ///
always @ (posedge ap_clk)
begin : ap_ret_ap_reg_ppiten_pp0_it1
    if (ap_rst == 1'b1) begin
        ap_reg_ppiten_pp0_it1 <= ap_const_logic_0;
    end else begin
        if (((ap_ST_pp0_stg0_fsm_2 == ap_CS_fsm) & ~((ap_sig_bdd_82 & (ap_const_logic_1 == ap_reg_ppiten_pp0_it1)) | (ap_sig_bdd_96 & (ap_const_logic_1 == ap_reg_ppiten_pp0_it2))) & (exitcond4_fu_171_p2 == ap_const_lv1_0))) begin
            ap_reg_ppiten_pp0_it1 <= ap_const_logic_1;
        end else if ((((ap_ST_st2_fsm_1 == ap_CS_fsm) & (ap_const_lv1_0 == exitcond_fu_160_p2)) | ((ap_ST_pp0_stg0_fsm_2 == ap_CS_fsm) & ~((ap_sig_bdd_82 & (ap_const_logic_1 == ap_reg_ppiten_pp0_it1)) | (ap_sig_bdd_96 & (ap_const_logic_1 == ap_reg_ppiten_pp0_it2))) & ~(exitcond4_fu_171_p2 == ap_const_lv1_0)))) begin
            ap_reg_ppiten_pp0_it1 <= ap_const_logic_0;
        end
    end
end

/// ap_reg_ppiten_pp0_it2 assign process. ///
always @ (posedge ap_clk)
begin : ap_ret_ap_reg_ppiten_pp0_it2
    if (ap_rst == 1'b1) begin
        ap_reg_ppiten_pp0_it2 <= ap_const_logic_0;
    end else begin
        if (((ap_ST_pp0_stg0_fsm_2 == ap_CS_fsm) & ~((ap_sig_bdd_82 & (ap_const_logic_1 == ap_reg_ppiten_pp0_it1)) | (ap_sig_bdd_96 & (ap_const_logic_1 == ap_reg_ppiten_pp0_it2))))) begin
            ap_reg_ppiten_pp0_it2 <= ap_reg_ppiten_pp0_it1;
        end else if (((ap_ST_st2_fsm_1 == ap_CS_fsm) & (ap_const_lv1_0 == exitcond_fu_160_p2))) begin
            ap_reg_ppiten_pp0_it2 <= ap_const_logic_0;
        end
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if (((ap_ST_pp0_stg0_fsm_2 == ap_CS_fsm) & (ap_const_logic_1 == ap_reg_ppiten_pp0_it0) & ~((ap_sig_bdd_82 & (ap_const_logic_1 == ap_reg_ppiten_pp0_it1)) | (ap_sig_bdd_96 & (ap_const_logic_1 == ap_reg_ppiten_pp0_it2))) & (exitcond4_fu_171_p2 == ap_const_lv1_0))) begin
        t_V_5_reg_148 <= j_V_fu_176_p2;
    end else if (((ap_ST_st2_fsm_1 == ap_CS_fsm) & (ap_const_lv1_0 == exitcond_fu_160_p2))) begin
        t_V_5_reg_148 <= ap_const_lv12_0;
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if (((ap_ST_st1_fsm_0 == ap_CS_fsm) & ~ap_sig_bdd_58)) begin
        t_V_reg_137 <= ap_const_lv12_0;
    end else if ((ap_ST_st6_fsm_3 == ap_CS_fsm)) begin
        t_V_reg_137 <= i_V_reg_285;
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if (((ap_ST_pp0_stg0_fsm_2 == ap_CS_fsm) & ~((ap_sig_bdd_82 & (ap_const_logic_1 == ap_reg_ppiten_pp0_it1)) | (ap_sig_bdd_96 & (ap_const_logic_1 == ap_reg_ppiten_pp0_it2))))) begin
        ap_reg_ppstg_exitcond4_reg_290_pp0_it1 <= exitcond4_reg_290;
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if (((ap_ST_pp0_stg0_fsm_2 == ap_CS_fsm) & (ap_const_logic_1 == ap_reg_ppiten_pp0_it0) & ~((ap_sig_bdd_82 & (ap_const_logic_1 == ap_reg_ppiten_pp0_it1)) | (ap_sig_bdd_96 & (ap_const_logic_1 == ap_reg_ppiten_pp0_it2))))) begin
        exitcond4_reg_290 <= exitcond4_fu_171_p2;
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if ((ap_ST_st2_fsm_1 == ap_CS_fsm)) begin
        i_V_reg_285 <= i_V_fu_165_p2;
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if (((ap_ST_pp0_stg0_fsm_2 == ap_CS_fsm) & (exitcond4_reg_290 == ap_const_lv1_0) & (ap_const_logic_1 == ap_reg_ppiten_pp0_it1) & ~((ap_sig_bdd_82 & (ap_const_logic_1 == ap_reg_ppiten_pp0_it1)) | (ap_sig_bdd_96 & (ap_const_logic_1 == ap_reg_ppiten_pp0_it2))))) begin
        tmp_149_reg_299 <= src_data_stream_0_V_dout;
        tmp_150_reg_304 <= src_data_stream_1_V_dout;
        tmp_151_reg_309 <= src_data_stream_2_V_dout;
    end
end

/// ap_done assign process. ///
always @ (ap_done_reg or ap_CS_fsm or exitcond_fu_160_p2)
begin
    if (((ap_const_logic_1 == ap_done_reg) | ((ap_ST_st2_fsm_1 == ap_CS_fsm) & ~(ap_const_lv1_0 == exitcond_fu_160_p2)))) begin
        ap_done = ap_const_logic_1;
    end else begin
        ap_done = ap_const_logic_0;
    end
end

/// ap_idle assign process. ///
always @ (ap_start or ap_CS_fsm)
begin
    if ((~(ap_const_logic_1 == ap_start) & (ap_ST_st1_fsm_0 == ap_CS_fsm))) begin
        ap_idle = ap_const_logic_1;
    end else begin
        ap_idle = ap_const_logic_0;
    end
end

/// ap_ready assign process. ///
always @ (ap_CS_fsm or exitcond_fu_160_p2)
begin
    if (((ap_ST_st2_fsm_1 == ap_CS_fsm) & ~(ap_const_lv1_0 == exitcond_fu_160_p2))) begin
        ap_ready = ap_const_logic_1;
    end else begin
        ap_ready = ap_const_logic_0;
    end
end

/// dst_data_stream_0_V_write assign process. ///
always @ (ap_CS_fsm or ap_sig_bdd_82 or ap_reg_ppiten_pp0_it1 or ap_reg_ppstg_exitcond4_reg_290_pp0_it1 or ap_sig_bdd_96 or ap_reg_ppiten_pp0_it2)
begin
    if (((ap_ST_pp0_stg0_fsm_2 == ap_CS_fsm) & (ap_const_lv1_0 == ap_reg_ppstg_exitcond4_reg_290_pp0_it1) & (ap_const_logic_1 == ap_reg_ppiten_pp0_it2) & ~((ap_sig_bdd_82 & (ap_const_logic_1 == ap_reg_ppiten_pp0_it1)) | (ap_sig_bdd_96 & (ap_const_logic_1 == ap_reg_ppiten_pp0_it2))))) begin
        dst_data_stream_0_V_write = ap_const_logic_1;
    end else begin
        dst_data_stream_0_V_write = ap_const_logic_0;
    end
end

/// dst_data_stream_1_V_write assign process. ///
always @ (ap_CS_fsm or ap_sig_bdd_82 or ap_reg_ppiten_pp0_it1 or ap_reg_ppstg_exitcond4_reg_290_pp0_it1 or ap_sig_bdd_96 or ap_reg_ppiten_pp0_it2)
begin
    if (((ap_ST_pp0_stg0_fsm_2 == ap_CS_fsm) & (ap_const_lv1_0 == ap_reg_ppstg_exitcond4_reg_290_pp0_it1) & (ap_const_logic_1 == ap_reg_ppiten_pp0_it2) & ~((ap_sig_bdd_82 & (ap_const_logic_1 == ap_reg_ppiten_pp0_it1)) | (ap_sig_bdd_96 & (ap_const_logic_1 == ap_reg_ppiten_pp0_it2))))) begin
        dst_data_stream_1_V_write = ap_const_logic_1;
    end else begin
        dst_data_stream_1_V_write = ap_const_logic_0;
    end
end

/// dst_data_stream_2_V_write assign process. ///
always @ (ap_CS_fsm or ap_sig_bdd_82 or ap_reg_ppiten_pp0_it1 or ap_reg_ppstg_exitcond4_reg_290_pp0_it1 or ap_sig_bdd_96 or ap_reg_ppiten_pp0_it2)
begin
    if (((ap_ST_pp0_stg0_fsm_2 == ap_CS_fsm) & (ap_const_lv1_0 == ap_reg_ppstg_exitcond4_reg_290_pp0_it1) & (ap_const_logic_1 == ap_reg_ppiten_pp0_it2) & ~((ap_sig_bdd_82 & (ap_const_logic_1 == ap_reg_ppiten_pp0_it1)) | (ap_sig_bdd_96 & (ap_const_logic_1 == ap_reg_ppiten_pp0_it2))))) begin
        dst_data_stream_2_V_write = ap_const_logic_1;
    end else begin
        dst_data_stream_2_V_write = ap_const_logic_0;
    end
end

/// src_data_stream_0_V_read assign process. ///
always @ (ap_CS_fsm or exitcond4_reg_290 or ap_sig_bdd_82 or ap_reg_ppiten_pp0_it1 or ap_sig_bdd_96 or ap_reg_ppiten_pp0_it2)
begin
    if (((ap_ST_pp0_stg0_fsm_2 == ap_CS_fsm) & (exitcond4_reg_290 == ap_const_lv1_0) & (ap_const_logic_1 == ap_reg_ppiten_pp0_it1) & ~((ap_sig_bdd_82 & (ap_const_logic_1 == ap_reg_ppiten_pp0_it1)) | (ap_sig_bdd_96 & (ap_const_logic_1 == ap_reg_ppiten_pp0_it2))))) begin
        src_data_stream_0_V_read = ap_const_logic_1;
    end else begin
        src_data_stream_0_V_read = ap_const_logic_0;
    end
end

/// src_data_stream_1_V_read assign process. ///
always @ (ap_CS_fsm or exitcond4_reg_290 or ap_sig_bdd_82 or ap_reg_ppiten_pp0_it1 or ap_sig_bdd_96 or ap_reg_ppiten_pp0_it2)
begin
    if (((ap_ST_pp0_stg0_fsm_2 == ap_CS_fsm) & (exitcond4_reg_290 == ap_const_lv1_0) & (ap_const_logic_1 == ap_reg_ppiten_pp0_it1) & ~((ap_sig_bdd_82 & (ap_const_logic_1 == ap_reg_ppiten_pp0_it1)) | (ap_sig_bdd_96 & (ap_const_logic_1 == ap_reg_ppiten_pp0_it2))))) begin
        src_data_stream_1_V_read = ap_const_logic_1;
    end else begin
        src_data_stream_1_V_read = ap_const_logic_0;
    end
end

/// src_data_stream_2_V_read assign process. ///
always @ (ap_CS_fsm or exitcond4_reg_290 or ap_sig_bdd_82 or ap_reg_ppiten_pp0_it1 or ap_sig_bdd_96 or ap_reg_ppiten_pp0_it2)
begin
    if (((ap_ST_pp0_stg0_fsm_2 == ap_CS_fsm) & (exitcond4_reg_290 == ap_const_lv1_0) & (ap_const_logic_1 == ap_reg_ppiten_pp0_it1) & ~((ap_sig_bdd_82 & (ap_const_logic_1 == ap_reg_ppiten_pp0_it1)) | (ap_sig_bdd_96 & (ap_const_logic_1 == ap_reg_ppiten_pp0_it2))))) begin
        src_data_stream_2_V_read = ap_const_logic_1;
    end else begin
        src_data_stream_2_V_read = ap_const_logic_0;
    end
end
always @ (ap_CS_fsm or ap_sig_bdd_58 or exitcond4_fu_171_p2 or ap_reg_ppiten_pp0_it0 or ap_sig_bdd_82 or ap_reg_ppiten_pp0_it1 or ap_sig_bdd_96 or ap_reg_ppiten_pp0_it2 or exitcond_fu_160_p2)
begin
    case (ap_CS_fsm)
        ap_ST_st1_fsm_0 : 
            if (~ap_sig_bdd_58) begin
                ap_NS_fsm = ap_ST_st2_fsm_1;
            end else begin
                ap_NS_fsm = ap_ST_st1_fsm_0;
            end
        ap_ST_st2_fsm_1 : 
            if (~(ap_const_lv1_0 == exitcond_fu_160_p2)) begin
                ap_NS_fsm = ap_ST_st1_fsm_0;
            end else begin
                ap_NS_fsm = ap_ST_pp0_stg0_fsm_2;
            end
        ap_ST_pp0_stg0_fsm_2 : 
            if ((~((ap_ST_pp0_stg0_fsm_2 == ap_CS_fsm) & (ap_const_logic_1 == ap_reg_ppiten_pp0_it2) & ~((ap_sig_bdd_82 & (ap_const_logic_1 == ap_reg_ppiten_pp0_it1)) | (ap_sig_bdd_96 & (ap_const_logic_1 == ap_reg_ppiten_pp0_it2))) & ~(ap_const_logic_1 == ap_reg_ppiten_pp0_it1)) & ~((ap_const_logic_1 == ap_reg_ppiten_pp0_it0) & ~((ap_sig_bdd_82 & (ap_const_logic_1 == ap_reg_ppiten_pp0_it1)) | (ap_sig_bdd_96 & (ap_const_logic_1 == ap_reg_ppiten_pp0_it2))) & ~(exitcond4_fu_171_p2 == ap_const_lv1_0) & ~(ap_const_logic_1 == ap_reg_ppiten_pp0_it1)))) begin
                ap_NS_fsm = ap_ST_pp0_stg0_fsm_2;
            end else if ((((ap_ST_pp0_stg0_fsm_2 == ap_CS_fsm) & (ap_const_logic_1 == ap_reg_ppiten_pp0_it2) & ~((ap_sig_bdd_82 & (ap_const_logic_1 == ap_reg_ppiten_pp0_it1)) | (ap_sig_bdd_96 & (ap_const_logic_1 == ap_reg_ppiten_pp0_it2))) & ~(ap_const_logic_1 == ap_reg_ppiten_pp0_it1)) | ((ap_const_logic_1 == ap_reg_ppiten_pp0_it0) & ~((ap_sig_bdd_82 & (ap_const_logic_1 == ap_reg_ppiten_pp0_it1)) | (ap_sig_bdd_96 & (ap_const_logic_1 == ap_reg_ppiten_pp0_it2))) & ~(exitcond4_fu_171_p2 == ap_const_lv1_0) & ~(ap_const_logic_1 == ap_reg_ppiten_pp0_it1)))) begin
                ap_NS_fsm = ap_ST_st6_fsm_3;
            end else begin
                ap_NS_fsm = ap_ST_pp0_stg0_fsm_2;
            end
        ap_ST_st6_fsm_3 : 
            ap_NS_fsm = ap_ST_st2_fsm_1;
        default : 
            ap_NS_fsm = 'bx;
    endcase
end

/// ap_sig_bdd_58 assign process. ///
always @ (ap_start or ap_done_reg)
begin
    ap_sig_bdd_58 = ((ap_start == ap_const_logic_0) | (ap_done_reg == ap_const_logic_1));
end

/// ap_sig_bdd_82 assign process. ///
always @ (src_data_stream_0_V_empty_n or src_data_stream_1_V_empty_n or src_data_stream_2_V_empty_n or exitcond4_reg_290)
begin
    ap_sig_bdd_82 = (((src_data_stream_0_V_empty_n == ap_const_logic_0) & (exitcond4_reg_290 == ap_const_lv1_0)) | ((exitcond4_reg_290 == ap_const_lv1_0) & (src_data_stream_1_V_empty_n == ap_const_logic_0)) | ((exitcond4_reg_290 == ap_const_lv1_0) & (src_data_stream_2_V_empty_n == ap_const_logic_0)));
end

/// ap_sig_bdd_96 assign process. ///
always @ (dst_data_stream_0_V_full_n or dst_data_stream_1_V_full_n or dst_data_stream_2_V_full_n or ap_reg_ppstg_exitcond4_reg_290_pp0_it1)
begin
    ap_sig_bdd_96 = (((dst_data_stream_0_V_full_n == ap_const_logic_0) & (ap_const_lv1_0 == ap_reg_ppstg_exitcond4_reg_290_pp0_it1)) | ((ap_const_lv1_0 == ap_reg_ppstg_exitcond4_reg_290_pp0_it1) & (dst_data_stream_1_V_full_n == ap_const_logic_0)) | ((ap_const_lv1_0 == ap_reg_ppstg_exitcond4_reg_290_pp0_it1) & (dst_data_stream_2_V_full_n == ap_const_logic_0)));
end
assign dst_data_stream_0_V_din = ((tmp_fu_191_p3)? ap_const_lv8_0: tmp_144_fu_199_p1);
assign dst_data_stream_1_V_din = ((tmp_145_fu_221_p3)? ap_const_lv8_0: tmp_146_fu_229_p1);
assign dst_data_stream_2_V_din = ((tmp_147_fu_251_p3)? ap_const_lv8_0: tmp_148_fu_259_p1);
assign exitcond4_fu_171_p2 = (t_V_5_reg_148 == dst_cols_V_read? 1'b1: 1'b0);
assign exitcond_fu_160_p2 = (t_V_reg_137 == dst_rows_V_read? 1'b1: 1'b0);
assign i_V_fu_165_p2 = (t_V_reg_137 + ap_const_lv12_1);
assign j_V_fu_176_p2 = (t_V_5_reg_148 + ap_const_lv12_1);
assign tmp18_cast_i_fu_182_p1 = $unsigned(tmp_149_reg_299);
assign tmp_144_fu_199_p1 = v_assign_fu_185_p2[7:0];
assign tmp_145_fu_221_p3 = v_assign_3_fu_215_p2[ap_const_lv32_8];
assign tmp_146_fu_229_p1 = v_assign_3_fu_215_p2[7:0];
assign tmp_147_fu_251_p3 = v_assign_4_fu_245_p2[ap_const_lv32_8];
assign tmp_148_fu_259_p1 = v_assign_4_fu_245_p2[7:0];
assign tmp_1_cast_i_fu_212_p1 = $unsigned(tmp_150_reg_304);
assign tmp_2_cast_i_fu_242_p1 = $unsigned(tmp_151_reg_309);
assign tmp_fu_191_p3 = v_assign_fu_185_p2[ap_const_lv32_8];
assign v_assign_3_fu_215_p2 = (tmp_1_cast_i_fu_212_p1 + ap_const_lv9_1CE);
assign v_assign_4_fu_245_p2 = (tmp_2_cast_i_fu_242_p1 + ap_const_lv9_1CE);
assign v_assign_fu_185_p2 = (tmp18_cast_i_fu_182_p1 + ap_const_lv9_1CE);


endmodule //SubS_1080_1920_16_unsigned_char_16_s

