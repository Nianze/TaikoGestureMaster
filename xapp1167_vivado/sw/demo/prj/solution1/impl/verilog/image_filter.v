// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2013.2
// Copyright (C) 2013 Xilinx Inc. All rights reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

(* CORE_GENERATION_INFO="image_filter,hls_ip_2013_2,{HLS_INPUT_TYPE=cxx,HLS_INPUT_FLOAT=0,HLS_INPUT_FIXED=0,HLS_INPUT_PART=xc7z020clg484-1,HLS_INPUT_CLOCK=6.666670,HLS_INPUT_ARCH=dataflow,HLS_SYN_CLOCK=5.650250,HLS_SYN_LAT=-1,HLS_SYN_TPT=-1,HLS_SYN_MEM=28,HLS_SYN_DSP=27,HLS_SYN_FF=6896,HLS_SYN_LUT=9960}" *)

module image_filter (
        input_V_data_V_dout,
        input_V_data_V_empty_n,
        input_V_data_V_read,
        input_V_keep_V_dout,
        input_V_keep_V_empty_n,
        input_V_keep_V_read,
        input_V_strb_V_dout,
        input_V_strb_V_empty_n,
        input_V_strb_V_read,
        input_V_user_V_dout,
        input_V_user_V_empty_n,
        input_V_user_V_read,
        input_V_last_V_dout,
        input_V_last_V_empty_n,
        input_V_last_V_read,
        input_V_id_V_dout,
        input_V_id_V_empty_n,
        input_V_id_V_read,
        input_V_dest_V_dout,
        input_V_dest_V_empty_n,
        input_V_dest_V_read,
        output_V_data_V_din,
        output_V_data_V_full_n,
        output_V_data_V_write,
        output_V_keep_V_din,
        output_V_keep_V_full_n,
        output_V_keep_V_write,
        output_V_strb_V_din,
        output_V_strb_V_full_n,
        output_V_strb_V_write,
        output_V_user_V_din,
        output_V_user_V_full_n,
        output_V_user_V_write,
        output_V_last_V_din,
        output_V_last_V_full_n,
        output_V_last_V_write,
        output_V_id_V_din,
        output_V_id_V_full_n,
        output_V_id_V_write,
        output_V_dest_V_din,
        output_V_dest_V_full_n,
        output_V_dest_V_write,
        rows,
        cols,
        ap_clk,
        ap_rst,
        ap_done,
        ap_start,
        ap_idle,
        ap_ready
);

input  [31:0] input_V_data_V_dout;
input   input_V_data_V_empty_n;
output   input_V_data_V_read;
input  [3:0] input_V_keep_V_dout;
input   input_V_keep_V_empty_n;
output   input_V_keep_V_read;
input  [3:0] input_V_strb_V_dout;
input   input_V_strb_V_empty_n;
output   input_V_strb_V_read;
input  [0:0] input_V_user_V_dout;
input   input_V_user_V_empty_n;
output   input_V_user_V_read;
input  [0:0] input_V_last_V_dout;
input   input_V_last_V_empty_n;
output   input_V_last_V_read;
input  [0:0] input_V_id_V_dout;
input   input_V_id_V_empty_n;
output   input_V_id_V_read;
input  [0:0] input_V_dest_V_dout;
input   input_V_dest_V_empty_n;
output   input_V_dest_V_read;
output  [31:0] output_V_data_V_din;
input   output_V_data_V_full_n;
output   output_V_data_V_write;
output  [3:0] output_V_keep_V_din;
input   output_V_keep_V_full_n;
output   output_V_keep_V_write;
output  [3:0] output_V_strb_V_din;
input   output_V_strb_V_full_n;
output   output_V_strb_V_write;
output  [0:0] output_V_user_V_din;
input   output_V_user_V_full_n;
output   output_V_user_V_write;
output  [0:0] output_V_last_V_din;
input   output_V_last_V_full_n;
output   output_V_last_V_write;
output  [0:0] output_V_id_V_din;
input   output_V_id_V_full_n;
output   output_V_id_V_write;
output  [0:0] output_V_dest_V_din;
input   output_V_dest_V_full_n;
output   output_V_dest_V_write;
input  [31:0] rows;
input  [31:0] cols;
input   ap_clk;
input   ap_rst;
output   ap_done;
input   ap_start;
output   ap_idle;
output   ap_ready;

reg ap_idle;
wire    init_U0_ap_start;
wire    init_U0_ap_done;
reg    init_U0_ap_continue;
wire    init_U0_ap_idle;
wire    init_U0_ap_ready;
wire   [31:0] init_U0_p_rows;
wire   [31:0] init_U0_p_cols;
wire   [11:0] init_U0_ap_return_0;
wire   [11:0] init_U0_ap_return_1;
wire   [11:0] init_U0_ap_return_2;
wire   [11:0] init_U0_ap_return_3;
reg    ap_chn_write_init_U0_img_0_rows_V;
wire    img_0_rows_V_full_n;
reg    ap_reg_ready_img_0_rows_V_full_n = 1'b0;
reg    ap_sig_ready_img_0_rows_V_full_n;
reg    ap_chn_write_init_U0_img_0_rows_V_channel;
wire    img_0_rows_V_channel_full_n;
reg    ap_reg_ready_img_0_rows_V_channel_full_n = 1'b0;
reg    ap_sig_ready_img_0_rows_V_channel_full_n;
reg    ap_chn_write_init_U0_img_0_cols_V;
wire    img_0_cols_V_full_n;
reg    ap_reg_ready_img_0_cols_V_full_n = 1'b0;
reg    ap_sig_ready_img_0_cols_V_full_n;
reg    ap_chn_write_init_U0_img_0_cols_V_channel;
wire    img_0_cols_V_channel_full_n;
reg    ap_reg_ready_img_0_cols_V_channel_full_n = 1'b0;
reg    ap_sig_ready_img_0_cols_V_channel_full_n;
wire    init_1_U0_ap_start;
wire    init_1_U0_ap_done;
reg    init_1_U0_ap_continue;
wire    init_1_U0_ap_idle;
wire    init_1_U0_ap_ready;
wire   [31:0] init_1_U0_p_rows;
wire   [31:0] init_1_U0_p_cols;
wire   [11:0] init_1_U0_ap_return_0;
wire   [11:0] init_1_U0_ap_return_1;
reg    ap_chn_write_init_1_U0_img_1_rows_V;
wire    img_1_rows_V_full_n;
reg    ap_reg_ready_img_1_rows_V_full_n = 1'b0;
reg    ap_sig_ready_img_1_rows_V_full_n;
reg    ap_chn_write_init_1_U0_img_1_cols_V;
wire    img_1_cols_V_full_n;
reg    ap_reg_ready_img_1_cols_V_full_n = 1'b0;
reg    ap_sig_ready_img_1_cols_V_full_n;
wire    init_2_U0_ap_start;
wire    init_2_U0_ap_done;
reg    init_2_U0_ap_continue;
wire    init_2_U0_ap_idle;
wire    init_2_U0_ap_ready;
wire   [31:0] init_2_U0_p_rows;
wire   [31:0] init_2_U0_p_cols;
wire   [11:0] init_2_U0_ap_return_0;
wire   [11:0] init_2_U0_ap_return_1;
wire   [11:0] init_2_U0_ap_return_2;
wire   [11:0] init_2_U0_ap_return_3;
reg    ap_chn_write_init_2_U0_img_2_rows_V;
wire    img_2_rows_V_full_n;
reg    ap_reg_ready_img_2_rows_V_full_n = 1'b0;
reg    ap_sig_ready_img_2_rows_V_full_n;
reg    ap_chn_write_init_2_U0_img_2_rows_V_channel;
wire    img_2_rows_V_channel_full_n;
reg    ap_reg_ready_img_2_rows_V_channel_full_n = 1'b0;
reg    ap_sig_ready_img_2_rows_V_channel_full_n;
reg    ap_chn_write_init_2_U0_img_2_cols_V;
wire    img_2_cols_V_full_n;
reg    ap_reg_ready_img_2_cols_V_full_n = 1'b0;
reg    ap_sig_ready_img_2_cols_V_full_n;
reg    ap_chn_write_init_2_U0_img_2_cols_V_channel;
wire    img_2_cols_V_channel_full_n;
reg    ap_reg_ready_img_2_cols_V_channel_full_n = 1'b0;
reg    ap_sig_ready_img_2_cols_V_channel_full_n;
wire    init_3_U0_ap_start;
wire    init_3_U0_ap_done;
reg    init_3_U0_ap_continue;
wire    init_3_U0_ap_idle;
wire    init_3_U0_ap_ready;
wire   [31:0] init_3_U0_p_rows;
wire   [31:0] init_3_U0_p_cols;
wire   [11:0] init_3_U0_ap_return_0;
wire   [11:0] init_3_U0_ap_return_1;
wire   [11:0] init_3_U0_ap_return_2;
wire   [11:0] init_3_U0_ap_return_3;
reg    ap_chn_write_init_3_U0_img_3_rows_V;
wire    img_3_rows_V_full_n;
reg    ap_reg_ready_img_3_rows_V_full_n = 1'b0;
reg    ap_sig_ready_img_3_rows_V_full_n;
reg    ap_chn_write_init_3_U0_img_3_rows_V_channel;
wire    img_3_rows_V_channel_full_n;
reg    ap_reg_ready_img_3_rows_V_channel_full_n = 1'b0;
reg    ap_sig_ready_img_3_rows_V_channel_full_n;
reg    ap_chn_write_init_3_U0_img_3_cols_V;
wire    img_3_cols_V_full_n;
reg    ap_reg_ready_img_3_cols_V_full_n = 1'b0;
reg    ap_sig_ready_img_3_cols_V_full_n;
reg    ap_chn_write_init_3_U0_img_3_cols_V_channel;
wire    img_3_cols_V_channel_full_n;
reg    ap_reg_ready_img_3_cols_V_channel_full_n = 1'b0;
reg    ap_sig_ready_img_3_cols_V_channel_full_n;
wire    init_4_U0_ap_start;
wire    init_4_U0_ap_done;
reg    init_4_U0_ap_continue;
wire    init_4_U0_ap_idle;
wire    init_4_U0_ap_ready;
wire   [31:0] init_4_U0_p_rows;
wire   [31:0] init_4_U0_p_cols;
wire   [11:0] init_4_U0_ap_return_0;
wire   [11:0] init_4_U0_ap_return_1;
reg    ap_chn_write_init_4_U0_img_4_rows_V;
wire    img_4_rows_V_full_n;
reg    ap_reg_ready_img_4_rows_V_full_n = 1'b0;
reg    ap_sig_ready_img_4_rows_V_full_n;
reg    ap_chn_write_init_4_U0_img_4_cols_V;
wire    img_4_cols_V_full_n;
reg    ap_reg_ready_img_4_cols_V_full_n = 1'b0;
reg    ap_sig_ready_img_4_cols_V_full_n;
wire    init_5_U0_ap_start;
wire    init_5_U0_ap_done;
reg    init_5_U0_ap_continue;
wire    init_5_U0_ap_idle;
wire    init_5_U0_ap_ready;
wire   [31:0] init_5_U0_p_rows;
wire   [31:0] init_5_U0_p_cols;
wire   [11:0] init_5_U0_ap_return_0;
wire   [11:0] init_5_U0_ap_return_1;
reg    ap_chn_write_init_5_U0_img_5_rows_V;
wire    img_5_rows_V_full_n;
reg    ap_reg_ready_img_5_rows_V_full_n = 1'b0;
reg    ap_sig_ready_img_5_rows_V_full_n;
reg    ap_chn_write_init_5_U0_img_5_cols_V;
wire    img_5_cols_V_full_n;
reg    ap_reg_ready_img_5_cols_V_full_n = 1'b0;
reg    ap_sig_ready_img_5_cols_V_full_n;
wire    AXIvideo2Mat_32_1080_1920_16_U0_ap_start;
wire    AXIvideo2Mat_32_1080_1920_16_U0_ap_done;
wire    AXIvideo2Mat_32_1080_1920_16_U0_ap_continue;
wire    AXIvideo2Mat_32_1080_1920_16_U0_ap_idle;
wire    AXIvideo2Mat_32_1080_1920_16_U0_ap_ready;
wire   [31:0] AXIvideo2Mat_32_1080_1920_16_U0_AXI_video_strm_V_data_V_dout;
wire    AXIvideo2Mat_32_1080_1920_16_U0_AXI_video_strm_V_data_V_empty_n;
wire    AXIvideo2Mat_32_1080_1920_16_U0_AXI_video_strm_V_data_V_read;
wire   [3:0] AXIvideo2Mat_32_1080_1920_16_U0_AXI_video_strm_V_keep_V_dout;
wire    AXIvideo2Mat_32_1080_1920_16_U0_AXI_video_strm_V_keep_V_empty_n;
wire    AXIvideo2Mat_32_1080_1920_16_U0_AXI_video_strm_V_keep_V_read;
wire   [3:0] AXIvideo2Mat_32_1080_1920_16_U0_AXI_video_strm_V_strb_V_dout;
wire    AXIvideo2Mat_32_1080_1920_16_U0_AXI_video_strm_V_strb_V_empty_n;
wire    AXIvideo2Mat_32_1080_1920_16_U0_AXI_video_strm_V_strb_V_read;
wire   [0:0] AXIvideo2Mat_32_1080_1920_16_U0_AXI_video_strm_V_user_V_dout;
wire    AXIvideo2Mat_32_1080_1920_16_U0_AXI_video_strm_V_user_V_empty_n;
wire    AXIvideo2Mat_32_1080_1920_16_U0_AXI_video_strm_V_user_V_read;
wire   [0:0] AXIvideo2Mat_32_1080_1920_16_U0_AXI_video_strm_V_last_V_dout;
wire    AXIvideo2Mat_32_1080_1920_16_U0_AXI_video_strm_V_last_V_empty_n;
wire    AXIvideo2Mat_32_1080_1920_16_U0_AXI_video_strm_V_last_V_read;
wire   [0:0] AXIvideo2Mat_32_1080_1920_16_U0_AXI_video_strm_V_id_V_dout;
wire    AXIvideo2Mat_32_1080_1920_16_U0_AXI_video_strm_V_id_V_empty_n;
wire    AXIvideo2Mat_32_1080_1920_16_U0_AXI_video_strm_V_id_V_read;
wire   [0:0] AXIvideo2Mat_32_1080_1920_16_U0_AXI_video_strm_V_dest_V_dout;
wire    AXIvideo2Mat_32_1080_1920_16_U0_AXI_video_strm_V_dest_V_empty_n;
wire    AXIvideo2Mat_32_1080_1920_16_U0_AXI_video_strm_V_dest_V_read;
wire   [11:0] AXIvideo2Mat_32_1080_1920_16_U0_img_rows_V_read;
wire   [11:0] AXIvideo2Mat_32_1080_1920_16_U0_img_cols_V_read;
wire   [7:0] AXIvideo2Mat_32_1080_1920_16_U0_img_data_stream_0_V_din;
wire    AXIvideo2Mat_32_1080_1920_16_U0_img_data_stream_0_V_full_n;
wire    AXIvideo2Mat_32_1080_1920_16_U0_img_data_stream_0_V_write;
wire   [7:0] AXIvideo2Mat_32_1080_1920_16_U0_img_data_stream_1_V_din;
wire    AXIvideo2Mat_32_1080_1920_16_U0_img_data_stream_1_V_full_n;
wire    AXIvideo2Mat_32_1080_1920_16_U0_img_data_stream_1_V_write;
wire   [7:0] AXIvideo2Mat_32_1080_1920_16_U0_img_data_stream_2_V_din;
wire    AXIvideo2Mat_32_1080_1920_16_U0_img_data_stream_2_V_full_n;
wire    AXIvideo2Mat_32_1080_1920_16_U0_img_data_stream_2_V_write;
wire    Sobel_1_0_3_16_16_1080_1920_1080_1920_U0_ap_start;
wire    Sobel_1_0_3_16_16_1080_1920_1080_1920_U0_ap_done;
wire    Sobel_1_0_3_16_16_1080_1920_1080_1920_U0_ap_continue;
wire    Sobel_1_0_3_16_16_1080_1920_1080_1920_U0_ap_idle;
wire    Sobel_1_0_3_16_16_1080_1920_1080_1920_U0_ap_ready;
wire   [11:0] Sobel_1_0_3_16_16_1080_1920_1080_1920_U0_p_src_rows_V_read;
wire   [11:0] Sobel_1_0_3_16_16_1080_1920_1080_1920_U0_p_src_cols_V_read;
wire   [7:0] Sobel_1_0_3_16_16_1080_1920_1080_1920_U0_p_src_data_stream_0_V_dout;
wire    Sobel_1_0_3_16_16_1080_1920_1080_1920_U0_p_src_data_stream_0_V_empty_n;
wire    Sobel_1_0_3_16_16_1080_1920_1080_1920_U0_p_src_data_stream_0_V_read;
wire   [7:0] Sobel_1_0_3_16_16_1080_1920_1080_1920_U0_p_src_data_stream_1_V_dout;
wire    Sobel_1_0_3_16_16_1080_1920_1080_1920_U0_p_src_data_stream_1_V_empty_n;
wire    Sobel_1_0_3_16_16_1080_1920_1080_1920_U0_p_src_data_stream_1_V_read;
wire   [7:0] Sobel_1_0_3_16_16_1080_1920_1080_1920_U0_p_src_data_stream_2_V_dout;
wire    Sobel_1_0_3_16_16_1080_1920_1080_1920_U0_p_src_data_stream_2_V_empty_n;
wire    Sobel_1_0_3_16_16_1080_1920_1080_1920_U0_p_src_data_stream_2_V_read;
wire   [7:0] Sobel_1_0_3_16_16_1080_1920_1080_1920_U0_p_dst_data_stream_0_V_din;
wire    Sobel_1_0_3_16_16_1080_1920_1080_1920_U0_p_dst_data_stream_0_V_full_n;
wire    Sobel_1_0_3_16_16_1080_1920_1080_1920_U0_p_dst_data_stream_0_V_write;
wire   [7:0] Sobel_1_0_3_16_16_1080_1920_1080_1920_U0_p_dst_data_stream_1_V_din;
wire    Sobel_1_0_3_16_16_1080_1920_1080_1920_U0_p_dst_data_stream_1_V_full_n;
wire    Sobel_1_0_3_16_16_1080_1920_1080_1920_U0_p_dst_data_stream_1_V_write;
wire   [7:0] Sobel_1_0_3_16_16_1080_1920_1080_1920_U0_p_dst_data_stream_2_V_din;
wire    Sobel_1_0_3_16_16_1080_1920_1080_1920_U0_p_dst_data_stream_2_V_full_n;
wire    Sobel_1_0_3_16_16_1080_1920_1080_1920_U0_p_dst_data_stream_2_V_write;
wire    SubS_1080_1920_16_unsigned_char_16_U0_ap_start;
wire    SubS_1080_1920_16_unsigned_char_16_U0_ap_done;
wire    SubS_1080_1920_16_unsigned_char_16_U0_ap_continue;
wire    SubS_1080_1920_16_unsigned_char_16_U0_ap_idle;
wire    SubS_1080_1920_16_unsigned_char_16_U0_ap_ready;
wire   [11:0] SubS_1080_1920_16_unsigned_char_16_U0_src_rows_V_read;
wire   [11:0] SubS_1080_1920_16_unsigned_char_16_U0_src_cols_V_read;
wire   [7:0] SubS_1080_1920_16_unsigned_char_16_U0_src_data_stream_0_V_dout;
wire    SubS_1080_1920_16_unsigned_char_16_U0_src_data_stream_0_V_empty_n;
wire    SubS_1080_1920_16_unsigned_char_16_U0_src_data_stream_0_V_read;
wire   [7:0] SubS_1080_1920_16_unsigned_char_16_U0_src_data_stream_1_V_dout;
wire    SubS_1080_1920_16_unsigned_char_16_U0_src_data_stream_1_V_empty_n;
wire    SubS_1080_1920_16_unsigned_char_16_U0_src_data_stream_1_V_read;
wire   [7:0] SubS_1080_1920_16_unsigned_char_16_U0_src_data_stream_2_V_dout;
wire    SubS_1080_1920_16_unsigned_char_16_U0_src_data_stream_2_V_empty_n;
wire    SubS_1080_1920_16_unsigned_char_16_U0_src_data_stream_2_V_read;
wire   [11:0] SubS_1080_1920_16_unsigned_char_16_U0_dst_rows_V_read;
wire   [11:0] SubS_1080_1920_16_unsigned_char_16_U0_dst_cols_V_read;
wire   [7:0] SubS_1080_1920_16_unsigned_char_16_U0_dst_data_stream_0_V_din;
wire    SubS_1080_1920_16_unsigned_char_16_U0_dst_data_stream_0_V_full_n;
wire    SubS_1080_1920_16_unsigned_char_16_U0_dst_data_stream_0_V_write;
wire   [7:0] SubS_1080_1920_16_unsigned_char_16_U0_dst_data_stream_1_V_din;
wire    SubS_1080_1920_16_unsigned_char_16_U0_dst_data_stream_1_V_full_n;
wire    SubS_1080_1920_16_unsigned_char_16_U0_dst_data_stream_1_V_write;
wire   [7:0] SubS_1080_1920_16_unsigned_char_16_U0_dst_data_stream_2_V_din;
wire    SubS_1080_1920_16_unsigned_char_16_U0_dst_data_stream_2_V_full_n;
wire    SubS_1080_1920_16_unsigned_char_16_U0_dst_data_stream_2_V_write;
wire    Scale_1080_1920_16_16_int_U0_ap_start;
wire    Scale_1080_1920_16_16_int_U0_ap_done;
wire    Scale_1080_1920_16_16_int_U0_ap_continue;
wire    Scale_1080_1920_16_16_int_U0_ap_idle;
wire    Scale_1080_1920_16_16_int_U0_ap_ready;
wire   [11:0] Scale_1080_1920_16_16_int_U0_src_rows_V_read;
wire   [11:0] Scale_1080_1920_16_16_int_U0_src_cols_V_read;
wire   [7:0] Scale_1080_1920_16_16_int_U0_src_data_stream_0_V_dout;
wire    Scale_1080_1920_16_16_int_U0_src_data_stream_0_V_empty_n;
wire    Scale_1080_1920_16_16_int_U0_src_data_stream_0_V_read;
wire   [7:0] Scale_1080_1920_16_16_int_U0_src_data_stream_1_V_dout;
wire    Scale_1080_1920_16_16_int_U0_src_data_stream_1_V_empty_n;
wire    Scale_1080_1920_16_16_int_U0_src_data_stream_1_V_read;
wire   [7:0] Scale_1080_1920_16_16_int_U0_src_data_stream_2_V_dout;
wire    Scale_1080_1920_16_16_int_U0_src_data_stream_2_V_empty_n;
wire    Scale_1080_1920_16_16_int_U0_src_data_stream_2_V_read;
wire   [11:0] Scale_1080_1920_16_16_int_U0_dst_rows_V_read;
wire   [11:0] Scale_1080_1920_16_16_int_U0_dst_cols_V_read;
wire   [7:0] Scale_1080_1920_16_16_int_U0_dst_data_stream_0_V_din;
wire    Scale_1080_1920_16_16_int_U0_dst_data_stream_0_V_full_n;
wire    Scale_1080_1920_16_16_int_U0_dst_data_stream_0_V_write;
wire   [7:0] Scale_1080_1920_16_16_int_U0_dst_data_stream_1_V_din;
wire    Scale_1080_1920_16_16_int_U0_dst_data_stream_1_V_full_n;
wire    Scale_1080_1920_16_16_int_U0_dst_data_stream_1_V_write;
wire   [7:0] Scale_1080_1920_16_16_int_U0_dst_data_stream_2_V_din;
wire    Scale_1080_1920_16_16_int_U0_dst_data_stream_2_V_full_n;
wire    Scale_1080_1920_16_16_int_U0_dst_data_stream_2_V_write;
wire    Erode_16_16_1080_1920_U0_ap_start;
wire    Erode_16_16_1080_1920_U0_ap_done;
wire    Erode_16_16_1080_1920_U0_ap_continue;
wire    Erode_16_16_1080_1920_U0_ap_idle;
wire    Erode_16_16_1080_1920_U0_ap_ready;
wire   [11:0] Erode_16_16_1080_1920_U0_p_src_rows_V_read;
wire   [11:0] Erode_16_16_1080_1920_U0_p_src_cols_V_read;
wire   [7:0] Erode_16_16_1080_1920_U0_p_src_data_stream_0_V_dout;
wire    Erode_16_16_1080_1920_U0_p_src_data_stream_0_V_empty_n;
wire    Erode_16_16_1080_1920_U0_p_src_data_stream_0_V_read;
wire   [7:0] Erode_16_16_1080_1920_U0_p_src_data_stream_1_V_dout;
wire    Erode_16_16_1080_1920_U0_p_src_data_stream_1_V_empty_n;
wire    Erode_16_16_1080_1920_U0_p_src_data_stream_1_V_read;
wire   [7:0] Erode_16_16_1080_1920_U0_p_src_data_stream_2_V_dout;
wire    Erode_16_16_1080_1920_U0_p_src_data_stream_2_V_empty_n;
wire    Erode_16_16_1080_1920_U0_p_src_data_stream_2_V_read;
wire   [7:0] Erode_16_16_1080_1920_U0_p_dst_data_stream_0_V_din;
wire    Erode_16_16_1080_1920_U0_p_dst_data_stream_0_V_full_n;
wire    Erode_16_16_1080_1920_U0_p_dst_data_stream_0_V_write;
wire   [7:0] Erode_16_16_1080_1920_U0_p_dst_data_stream_1_V_din;
wire    Erode_16_16_1080_1920_U0_p_dst_data_stream_1_V_full_n;
wire    Erode_16_16_1080_1920_U0_p_dst_data_stream_1_V_write;
wire   [7:0] Erode_16_16_1080_1920_U0_p_dst_data_stream_2_V_din;
wire    Erode_16_16_1080_1920_U0_p_dst_data_stream_2_V_full_n;
wire    Erode_16_16_1080_1920_U0_p_dst_data_stream_2_V_write;
wire    Dilate_16_16_1080_1920_U0_ap_start;
wire    Dilate_16_16_1080_1920_U0_ap_done;
wire    Dilate_16_16_1080_1920_U0_ap_continue;
wire    Dilate_16_16_1080_1920_U0_ap_idle;
wire    Dilate_16_16_1080_1920_U0_ap_ready;
wire   [11:0] Dilate_16_16_1080_1920_U0_p_src_rows_V_read;
wire   [11:0] Dilate_16_16_1080_1920_U0_p_src_cols_V_read;
wire   [7:0] Dilate_16_16_1080_1920_U0_p_src_data_stream_0_V_dout;
wire    Dilate_16_16_1080_1920_U0_p_src_data_stream_0_V_empty_n;
wire    Dilate_16_16_1080_1920_U0_p_src_data_stream_0_V_read;
wire   [7:0] Dilate_16_16_1080_1920_U0_p_src_data_stream_1_V_dout;
wire    Dilate_16_16_1080_1920_U0_p_src_data_stream_1_V_empty_n;
wire    Dilate_16_16_1080_1920_U0_p_src_data_stream_1_V_read;
wire   [7:0] Dilate_16_16_1080_1920_U0_p_src_data_stream_2_V_dout;
wire    Dilate_16_16_1080_1920_U0_p_src_data_stream_2_V_empty_n;
wire    Dilate_16_16_1080_1920_U0_p_src_data_stream_2_V_read;
wire   [7:0] Dilate_16_16_1080_1920_U0_p_dst_data_stream_0_V_din;
wire    Dilate_16_16_1080_1920_U0_p_dst_data_stream_0_V_full_n;
wire    Dilate_16_16_1080_1920_U0_p_dst_data_stream_0_V_write;
wire   [7:0] Dilate_16_16_1080_1920_U0_p_dst_data_stream_1_V_din;
wire    Dilate_16_16_1080_1920_U0_p_dst_data_stream_1_V_full_n;
wire    Dilate_16_16_1080_1920_U0_p_dst_data_stream_1_V_write;
wire   [7:0] Dilate_16_16_1080_1920_U0_p_dst_data_stream_2_V_din;
wire    Dilate_16_16_1080_1920_U0_p_dst_data_stream_2_V_full_n;
wire    Dilate_16_16_1080_1920_U0_p_dst_data_stream_2_V_write;
wire    Mat2AXIvideo_32_1080_1920_16_U0_ap_start;
wire    Mat2AXIvideo_32_1080_1920_16_U0_ap_done;
wire    Mat2AXIvideo_32_1080_1920_16_U0_ap_continue;
wire    Mat2AXIvideo_32_1080_1920_16_U0_ap_idle;
wire    Mat2AXIvideo_32_1080_1920_16_U0_ap_ready;
wire   [11:0] Mat2AXIvideo_32_1080_1920_16_U0_img_rows_V_read;
wire   [11:0] Mat2AXIvideo_32_1080_1920_16_U0_img_cols_V_read;
wire   [7:0] Mat2AXIvideo_32_1080_1920_16_U0_img_data_stream_0_V_dout;
wire    Mat2AXIvideo_32_1080_1920_16_U0_img_data_stream_0_V_empty_n;
wire    Mat2AXIvideo_32_1080_1920_16_U0_img_data_stream_0_V_read;
wire   [7:0] Mat2AXIvideo_32_1080_1920_16_U0_img_data_stream_1_V_dout;
wire    Mat2AXIvideo_32_1080_1920_16_U0_img_data_stream_1_V_empty_n;
wire    Mat2AXIvideo_32_1080_1920_16_U0_img_data_stream_1_V_read;
wire   [7:0] Mat2AXIvideo_32_1080_1920_16_U0_img_data_stream_2_V_dout;
wire    Mat2AXIvideo_32_1080_1920_16_U0_img_data_stream_2_V_empty_n;
wire    Mat2AXIvideo_32_1080_1920_16_U0_img_data_stream_2_V_read;
wire   [31:0] Mat2AXIvideo_32_1080_1920_16_U0_AXI_video_strm_V_data_V_din;
wire    Mat2AXIvideo_32_1080_1920_16_U0_AXI_video_strm_V_data_V_full_n;
wire    Mat2AXIvideo_32_1080_1920_16_U0_AXI_video_strm_V_data_V_write;
wire   [3:0] Mat2AXIvideo_32_1080_1920_16_U0_AXI_video_strm_V_keep_V_din;
wire    Mat2AXIvideo_32_1080_1920_16_U0_AXI_video_strm_V_keep_V_full_n;
wire    Mat2AXIvideo_32_1080_1920_16_U0_AXI_video_strm_V_keep_V_write;
wire   [3:0] Mat2AXIvideo_32_1080_1920_16_U0_AXI_video_strm_V_strb_V_din;
wire    Mat2AXIvideo_32_1080_1920_16_U0_AXI_video_strm_V_strb_V_full_n;
wire    Mat2AXIvideo_32_1080_1920_16_U0_AXI_video_strm_V_strb_V_write;
wire   [0:0] Mat2AXIvideo_32_1080_1920_16_U0_AXI_video_strm_V_user_V_din;
wire    Mat2AXIvideo_32_1080_1920_16_U0_AXI_video_strm_V_user_V_full_n;
wire    Mat2AXIvideo_32_1080_1920_16_U0_AXI_video_strm_V_user_V_write;
wire   [0:0] Mat2AXIvideo_32_1080_1920_16_U0_AXI_video_strm_V_last_V_din;
wire    Mat2AXIvideo_32_1080_1920_16_U0_AXI_video_strm_V_last_V_full_n;
wire    Mat2AXIvideo_32_1080_1920_16_U0_AXI_video_strm_V_last_V_write;
wire   [0:0] Mat2AXIvideo_32_1080_1920_16_U0_AXI_video_strm_V_id_V_din;
wire    Mat2AXIvideo_32_1080_1920_16_U0_AXI_video_strm_V_id_V_full_n;
wire    Mat2AXIvideo_32_1080_1920_16_U0_AXI_video_strm_V_id_V_write;
wire   [0:0] Mat2AXIvideo_32_1080_1920_16_U0_AXI_video_strm_V_dest_V_din;
wire    Mat2AXIvideo_32_1080_1920_16_U0_AXI_video_strm_V_dest_V_full_n;
wire    Mat2AXIvideo_32_1080_1920_16_U0_AXI_video_strm_V_dest_V_write;
wire    ap_sig_hs_continue;
wire    img_0_rows_V_ap_dummy_ce;
wire   [11:0] img_0_rows_V_din;
wire    img_0_rows_V_write;
wire   [11:0] img_0_rows_V_dout;
wire    img_0_rows_V_empty_n;
wire    img_0_rows_V_read;
wire    img_0_rows_V_channel_ap_dummy_ce;
wire   [11:0] img_0_rows_V_channel_din;
wire    img_0_rows_V_channel_write;
wire   [11:0] img_0_rows_V_channel_dout;
wire    img_0_rows_V_channel_empty_n;
wire    img_0_rows_V_channel_read;
wire    img_0_cols_V_ap_dummy_ce;
wire   [11:0] img_0_cols_V_din;
wire    img_0_cols_V_write;
wire   [11:0] img_0_cols_V_dout;
wire    img_0_cols_V_empty_n;
wire    img_0_cols_V_read;
wire    img_0_cols_V_channel_ap_dummy_ce;
wire   [11:0] img_0_cols_V_channel_din;
wire    img_0_cols_V_channel_write;
wire   [11:0] img_0_cols_V_channel_dout;
wire    img_0_cols_V_channel_empty_n;
wire    img_0_cols_V_channel_read;
wire    img_1_rows_V_ap_dummy_ce;
wire   [11:0] img_1_rows_V_din;
wire    img_1_rows_V_write;
wire   [11:0] img_1_rows_V_dout;
wire    img_1_rows_V_empty_n;
wire    img_1_rows_V_read;
wire    img_1_cols_V_ap_dummy_ce;
wire   [11:0] img_1_cols_V_din;
wire    img_1_cols_V_write;
wire   [11:0] img_1_cols_V_dout;
wire    img_1_cols_V_empty_n;
wire    img_1_cols_V_read;
wire    img_2_rows_V_ap_dummy_ce;
wire   [11:0] img_2_rows_V_din;
wire    img_2_rows_V_write;
wire   [11:0] img_2_rows_V_dout;
wire    img_2_rows_V_empty_n;
wire    img_2_rows_V_read;
wire    img_2_rows_V_channel_ap_dummy_ce;
wire   [11:0] img_2_rows_V_channel_din;
wire    img_2_rows_V_channel_write;
wire   [11:0] img_2_rows_V_channel_dout;
wire    img_2_rows_V_channel_empty_n;
wire    img_2_rows_V_channel_read;
wire    img_2_cols_V_ap_dummy_ce;
wire   [11:0] img_2_cols_V_din;
wire    img_2_cols_V_write;
wire   [11:0] img_2_cols_V_dout;
wire    img_2_cols_V_empty_n;
wire    img_2_cols_V_read;
wire    img_2_cols_V_channel_ap_dummy_ce;
wire   [11:0] img_2_cols_V_channel_din;
wire    img_2_cols_V_channel_write;
wire   [11:0] img_2_cols_V_channel_dout;
wire    img_2_cols_V_channel_empty_n;
wire    img_2_cols_V_channel_read;
wire    img_3_rows_V_ap_dummy_ce;
wire   [11:0] img_3_rows_V_din;
wire    img_3_rows_V_write;
wire   [11:0] img_3_rows_V_dout;
wire    img_3_rows_V_empty_n;
wire    img_3_rows_V_read;
wire    img_3_rows_V_channel_ap_dummy_ce;
wire   [11:0] img_3_rows_V_channel_din;
wire    img_3_rows_V_channel_write;
wire   [11:0] img_3_rows_V_channel_dout;
wire    img_3_rows_V_channel_empty_n;
wire    img_3_rows_V_channel_read;
wire    img_3_cols_V_ap_dummy_ce;
wire   [11:0] img_3_cols_V_din;
wire    img_3_cols_V_write;
wire   [11:0] img_3_cols_V_dout;
wire    img_3_cols_V_empty_n;
wire    img_3_cols_V_read;
wire    img_3_cols_V_channel_ap_dummy_ce;
wire   [11:0] img_3_cols_V_channel_din;
wire    img_3_cols_V_channel_write;
wire   [11:0] img_3_cols_V_channel_dout;
wire    img_3_cols_V_channel_empty_n;
wire    img_3_cols_V_channel_read;
wire    img_4_rows_V_ap_dummy_ce;
wire   [11:0] img_4_rows_V_din;
wire    img_4_rows_V_write;
wire   [11:0] img_4_rows_V_dout;
wire    img_4_rows_V_empty_n;
wire    img_4_rows_V_read;
wire    img_4_cols_V_ap_dummy_ce;
wire   [11:0] img_4_cols_V_din;
wire    img_4_cols_V_write;
wire   [11:0] img_4_cols_V_dout;
wire    img_4_cols_V_empty_n;
wire    img_4_cols_V_read;
wire    img_5_rows_V_ap_dummy_ce;
wire   [11:0] img_5_rows_V_din;
wire    img_5_rows_V_write;
wire   [11:0] img_5_rows_V_dout;
wire    img_5_rows_V_empty_n;
wire    img_5_rows_V_read;
wire    img_5_cols_V_ap_dummy_ce;
wire   [11:0] img_5_cols_V_din;
wire    img_5_cols_V_write;
wire   [11:0] img_5_cols_V_dout;
wire    img_5_cols_V_empty_n;
wire    img_5_cols_V_read;
wire    img_0_data_stream_0_V_ap_dummy_ce;
wire   [7:0] img_0_data_stream_0_V_din;
wire    img_0_data_stream_0_V_full_n;
wire    img_0_data_stream_0_V_write;
wire   [7:0] img_0_data_stream_0_V_dout;
wire    img_0_data_stream_0_V_empty_n;
wire    img_0_data_stream_0_V_read;
wire    img_0_data_stream_1_V_ap_dummy_ce;
wire   [7:0] img_0_data_stream_1_V_din;
wire    img_0_data_stream_1_V_full_n;
wire    img_0_data_stream_1_V_write;
wire   [7:0] img_0_data_stream_1_V_dout;
wire    img_0_data_stream_1_V_empty_n;
wire    img_0_data_stream_1_V_read;
wire    img_0_data_stream_2_V_ap_dummy_ce;
wire   [7:0] img_0_data_stream_2_V_din;
wire    img_0_data_stream_2_V_full_n;
wire    img_0_data_stream_2_V_write;
wire   [7:0] img_0_data_stream_2_V_dout;
wire    img_0_data_stream_2_V_empty_n;
wire    img_0_data_stream_2_V_read;
wire    img_1_data_stream_0_V_ap_dummy_ce;
wire   [7:0] img_1_data_stream_0_V_din;
wire    img_1_data_stream_0_V_full_n;
wire    img_1_data_stream_0_V_write;
wire   [7:0] img_1_data_stream_0_V_dout;
wire    img_1_data_stream_0_V_empty_n;
wire    img_1_data_stream_0_V_read;
wire    img_1_data_stream_1_V_ap_dummy_ce;
wire   [7:0] img_1_data_stream_1_V_din;
wire    img_1_data_stream_1_V_full_n;
wire    img_1_data_stream_1_V_write;
wire   [7:0] img_1_data_stream_1_V_dout;
wire    img_1_data_stream_1_V_empty_n;
wire    img_1_data_stream_1_V_read;
wire    img_1_data_stream_2_V_ap_dummy_ce;
wire   [7:0] img_1_data_stream_2_V_din;
wire    img_1_data_stream_2_V_full_n;
wire    img_1_data_stream_2_V_write;
wire   [7:0] img_1_data_stream_2_V_dout;
wire    img_1_data_stream_2_V_empty_n;
wire    img_1_data_stream_2_V_read;
wire    img_2_data_stream_0_V_ap_dummy_ce;
wire   [7:0] img_2_data_stream_0_V_din;
wire    img_2_data_stream_0_V_full_n;
wire    img_2_data_stream_0_V_write;
wire   [7:0] img_2_data_stream_0_V_dout;
wire    img_2_data_stream_0_V_empty_n;
wire    img_2_data_stream_0_V_read;
wire    img_2_data_stream_1_V_ap_dummy_ce;
wire   [7:0] img_2_data_stream_1_V_din;
wire    img_2_data_stream_1_V_full_n;
wire    img_2_data_stream_1_V_write;
wire   [7:0] img_2_data_stream_1_V_dout;
wire    img_2_data_stream_1_V_empty_n;
wire    img_2_data_stream_1_V_read;
wire    img_2_data_stream_2_V_ap_dummy_ce;
wire   [7:0] img_2_data_stream_2_V_din;
wire    img_2_data_stream_2_V_full_n;
wire    img_2_data_stream_2_V_write;
wire   [7:0] img_2_data_stream_2_V_dout;
wire    img_2_data_stream_2_V_empty_n;
wire    img_2_data_stream_2_V_read;
wire    img_3_data_stream_0_V_ap_dummy_ce;
wire   [7:0] img_3_data_stream_0_V_din;
wire    img_3_data_stream_0_V_full_n;
wire    img_3_data_stream_0_V_write;
wire   [7:0] img_3_data_stream_0_V_dout;
wire    img_3_data_stream_0_V_empty_n;
wire    img_3_data_stream_0_V_read;
wire    img_3_data_stream_1_V_ap_dummy_ce;
wire   [7:0] img_3_data_stream_1_V_din;
wire    img_3_data_stream_1_V_full_n;
wire    img_3_data_stream_1_V_write;
wire   [7:0] img_3_data_stream_1_V_dout;
wire    img_3_data_stream_1_V_empty_n;
wire    img_3_data_stream_1_V_read;
wire    img_3_data_stream_2_V_ap_dummy_ce;
wire   [7:0] img_3_data_stream_2_V_din;
wire    img_3_data_stream_2_V_full_n;
wire    img_3_data_stream_2_V_write;
wire   [7:0] img_3_data_stream_2_V_dout;
wire    img_3_data_stream_2_V_empty_n;
wire    img_3_data_stream_2_V_read;
wire    img_4_data_stream_0_V_ap_dummy_ce;
wire   [7:0] img_4_data_stream_0_V_din;
wire    img_4_data_stream_0_V_full_n;
wire    img_4_data_stream_0_V_write;
wire   [7:0] img_4_data_stream_0_V_dout;
wire    img_4_data_stream_0_V_empty_n;
wire    img_4_data_stream_0_V_read;
wire    img_4_data_stream_1_V_ap_dummy_ce;
wire   [7:0] img_4_data_stream_1_V_din;
wire    img_4_data_stream_1_V_full_n;
wire    img_4_data_stream_1_V_write;
wire   [7:0] img_4_data_stream_1_V_dout;
wire    img_4_data_stream_1_V_empty_n;
wire    img_4_data_stream_1_V_read;
wire    img_4_data_stream_2_V_ap_dummy_ce;
wire   [7:0] img_4_data_stream_2_V_din;
wire    img_4_data_stream_2_V_full_n;
wire    img_4_data_stream_2_V_write;
wire   [7:0] img_4_data_stream_2_V_dout;
wire    img_4_data_stream_2_V_empty_n;
wire    img_4_data_stream_2_V_read;
wire    img_5_data_stream_0_V_ap_dummy_ce;
wire   [7:0] img_5_data_stream_0_V_din;
wire    img_5_data_stream_0_V_full_n;
wire    img_5_data_stream_0_V_write;
wire   [7:0] img_5_data_stream_0_V_dout;
wire    img_5_data_stream_0_V_empty_n;
wire    img_5_data_stream_0_V_read;
wire    img_5_data_stream_1_V_ap_dummy_ce;
wire   [7:0] img_5_data_stream_1_V_din;
wire    img_5_data_stream_1_V_full_n;
wire    img_5_data_stream_1_V_write;
wire   [7:0] img_5_data_stream_1_V_dout;
wire    img_5_data_stream_1_V_empty_n;
wire    img_5_data_stream_1_V_read;
wire    img_5_data_stream_2_V_ap_dummy_ce;
wire   [7:0] img_5_data_stream_2_V_din;
wire    img_5_data_stream_2_V_full_n;
wire    img_5_data_stream_2_V_write;
wire   [7:0] img_5_data_stream_2_V_dout;
wire    img_5_data_stream_2_V_empty_n;
wire    img_5_data_stream_2_V_read;
reg    ap_reg_procdone_init_U0 = 1'b0;
reg    ap_sig_hs_done;
reg    ap_reg_procdone_init_1_U0 = 1'b0;
reg    ap_reg_procdone_init_2_U0 = 1'b0;
reg    ap_reg_procdone_init_3_U0 = 1'b0;
reg    ap_reg_procdone_init_4_U0 = 1'b0;
reg    ap_reg_procdone_init_5_U0 = 1'b0;
reg    ap_reg_procdone_AXIvideo2Mat_32_1080_1920_16_U0 = 1'b0;
reg    ap_reg_procdone_Sobel_1_0_3_16_16_1080_1920_1080_1920_U0 = 1'b0;
reg    ap_reg_procdone_SubS_1080_1920_16_unsigned_char_16_U0 = 1'b0;
reg    ap_reg_procdone_Scale_1080_1920_16_16_int_U0 = 1'b0;
reg    ap_reg_procdone_Erode_16_16_1080_1920_U0 = 1'b0;
reg    ap_reg_procdone_Dilate_16_16_1080_1920_U0 = 1'b0;
reg    ap_reg_procdone_Mat2AXIvideo_32_1080_1920_16_U0 = 1'b0;
wire    ap_CS;
reg    ap_sig_top_allready;
reg    ap_reg_ready_init_U0_ap_ready = 1'b0;
reg    ap_sig_ready_init_U0_ap_ready;
reg    ap_sig_start_in_init_U0_ap_start;
reg    ap_reg_ready_init_1_U0_ap_ready = 1'b0;
reg    ap_sig_ready_init_1_U0_ap_ready;
reg    ap_sig_start_in_init_1_U0_ap_start;
reg    ap_reg_ready_init_2_U0_ap_ready = 1'b0;
reg    ap_sig_ready_init_2_U0_ap_ready;
reg    ap_sig_start_in_init_2_U0_ap_start;
reg    ap_reg_ready_init_3_U0_ap_ready = 1'b0;
reg    ap_sig_ready_init_3_U0_ap_ready;
reg    ap_sig_start_in_init_3_U0_ap_start;
reg    ap_reg_ready_init_4_U0_ap_ready = 1'b0;
reg    ap_sig_ready_init_4_U0_ap_ready;
reg    ap_sig_start_in_init_4_U0_ap_start;
reg    ap_reg_ready_init_5_U0_ap_ready = 1'b0;
reg    ap_sig_ready_init_5_U0_ap_ready;
reg    ap_sig_start_in_init_5_U0_ap_start;
reg    ap_reg_ready_AXIvideo2Mat_32_1080_1920_16_U0_ap_ready = 1'b0;
reg    ap_sig_ready_AXIvideo2Mat_32_1080_1920_16_U0_ap_ready;
reg    ap_sig_start_in_AXIvideo2Mat_32_1080_1920_16_U0_ap_start;
parameter    ap_const_logic_0 = 1'b0;
parameter    ap_const_lv32_0 = 32'b00000000000000000000000000000000;
parameter    ap_const_lv4_0 = 4'b0000;
parameter    ap_const_lv1_0 = 1'b0;
parameter    ap_const_logic_1 = 1'b1;
parameter    ap_true = 1'b1;


init init_U0(
    .ap_clk( ap_clk ),
    .ap_rst( ap_rst ),
    .ap_start( init_U0_ap_start ),
    .ap_done( init_U0_ap_done ),
    .ap_continue( init_U0_ap_continue ),
    .ap_idle( init_U0_ap_idle ),
    .ap_ready( init_U0_ap_ready ),
    .p_rows( init_U0_p_rows ),
    .p_cols( init_U0_p_cols ),
    .ap_return_0( init_U0_ap_return_0 ),
    .ap_return_1( init_U0_ap_return_1 ),
    .ap_return_2( init_U0_ap_return_2 ),
    .ap_return_3( init_U0_ap_return_3 )
);

init_1 init_1_U0(
    .ap_clk( ap_clk ),
    .ap_rst( ap_rst ),
    .ap_start( init_1_U0_ap_start ),
    .ap_done( init_1_U0_ap_done ),
    .ap_continue( init_1_U0_ap_continue ),
    .ap_idle( init_1_U0_ap_idle ),
    .ap_ready( init_1_U0_ap_ready ),
    .p_rows( init_1_U0_p_rows ),
    .p_cols( init_1_U0_p_cols ),
    .ap_return_0( init_1_U0_ap_return_0 ),
    .ap_return_1( init_1_U0_ap_return_1 )
);

init_2 init_2_U0(
    .ap_clk( ap_clk ),
    .ap_rst( ap_rst ),
    .ap_start( init_2_U0_ap_start ),
    .ap_done( init_2_U0_ap_done ),
    .ap_continue( init_2_U0_ap_continue ),
    .ap_idle( init_2_U0_ap_idle ),
    .ap_ready( init_2_U0_ap_ready ),
    .p_rows( init_2_U0_p_rows ),
    .p_cols( init_2_U0_p_cols ),
    .ap_return_0( init_2_U0_ap_return_0 ),
    .ap_return_1( init_2_U0_ap_return_1 ),
    .ap_return_2( init_2_U0_ap_return_2 ),
    .ap_return_3( init_2_U0_ap_return_3 )
);

init_3 init_3_U0(
    .ap_clk( ap_clk ),
    .ap_rst( ap_rst ),
    .ap_start( init_3_U0_ap_start ),
    .ap_done( init_3_U0_ap_done ),
    .ap_continue( init_3_U0_ap_continue ),
    .ap_idle( init_3_U0_ap_idle ),
    .ap_ready( init_3_U0_ap_ready ),
    .p_rows( init_3_U0_p_rows ),
    .p_cols( init_3_U0_p_cols ),
    .ap_return_0( init_3_U0_ap_return_0 ),
    .ap_return_1( init_3_U0_ap_return_1 ),
    .ap_return_2( init_3_U0_ap_return_2 ),
    .ap_return_3( init_3_U0_ap_return_3 )
);

init_4 init_4_U0(
    .ap_clk( ap_clk ),
    .ap_rst( ap_rst ),
    .ap_start( init_4_U0_ap_start ),
    .ap_done( init_4_U0_ap_done ),
    .ap_continue( init_4_U0_ap_continue ),
    .ap_idle( init_4_U0_ap_idle ),
    .ap_ready( init_4_U0_ap_ready ),
    .p_rows( init_4_U0_p_rows ),
    .p_cols( init_4_U0_p_cols ),
    .ap_return_0( init_4_U0_ap_return_0 ),
    .ap_return_1( init_4_U0_ap_return_1 )
);

init_5 init_5_U0(
    .ap_clk( ap_clk ),
    .ap_rst( ap_rst ),
    .ap_start( init_5_U0_ap_start ),
    .ap_done( init_5_U0_ap_done ),
    .ap_continue( init_5_U0_ap_continue ),
    .ap_idle( init_5_U0_ap_idle ),
    .ap_ready( init_5_U0_ap_ready ),
    .p_rows( init_5_U0_p_rows ),
    .p_cols( init_5_U0_p_cols ),
    .ap_return_0( init_5_U0_ap_return_0 ),
    .ap_return_1( init_5_U0_ap_return_1 )
);

AXIvideo2Mat_32_1080_1920_16_s AXIvideo2Mat_32_1080_1920_16_U0(
    .ap_clk( ap_clk ),
    .ap_rst( ap_rst ),
    .ap_start( AXIvideo2Mat_32_1080_1920_16_U0_ap_start ),
    .ap_done( AXIvideo2Mat_32_1080_1920_16_U0_ap_done ),
    .ap_continue( AXIvideo2Mat_32_1080_1920_16_U0_ap_continue ),
    .ap_idle( AXIvideo2Mat_32_1080_1920_16_U0_ap_idle ),
    .ap_ready( AXIvideo2Mat_32_1080_1920_16_U0_ap_ready ),
    .AXI_video_strm_V_data_V_dout( AXIvideo2Mat_32_1080_1920_16_U0_AXI_video_strm_V_data_V_dout ),
    .AXI_video_strm_V_data_V_empty_n( AXIvideo2Mat_32_1080_1920_16_U0_AXI_video_strm_V_data_V_empty_n ),
    .AXI_video_strm_V_data_V_read( AXIvideo2Mat_32_1080_1920_16_U0_AXI_video_strm_V_data_V_read ),
    .AXI_video_strm_V_keep_V_dout( AXIvideo2Mat_32_1080_1920_16_U0_AXI_video_strm_V_keep_V_dout ),
    .AXI_video_strm_V_keep_V_empty_n( AXIvideo2Mat_32_1080_1920_16_U0_AXI_video_strm_V_keep_V_empty_n ),
    .AXI_video_strm_V_keep_V_read( AXIvideo2Mat_32_1080_1920_16_U0_AXI_video_strm_V_keep_V_read ),
    .AXI_video_strm_V_strb_V_dout( AXIvideo2Mat_32_1080_1920_16_U0_AXI_video_strm_V_strb_V_dout ),
    .AXI_video_strm_V_strb_V_empty_n( AXIvideo2Mat_32_1080_1920_16_U0_AXI_video_strm_V_strb_V_empty_n ),
    .AXI_video_strm_V_strb_V_read( AXIvideo2Mat_32_1080_1920_16_U0_AXI_video_strm_V_strb_V_read ),
    .AXI_video_strm_V_user_V_dout( AXIvideo2Mat_32_1080_1920_16_U0_AXI_video_strm_V_user_V_dout ),
    .AXI_video_strm_V_user_V_empty_n( AXIvideo2Mat_32_1080_1920_16_U0_AXI_video_strm_V_user_V_empty_n ),
    .AXI_video_strm_V_user_V_read( AXIvideo2Mat_32_1080_1920_16_U0_AXI_video_strm_V_user_V_read ),
    .AXI_video_strm_V_last_V_dout( AXIvideo2Mat_32_1080_1920_16_U0_AXI_video_strm_V_last_V_dout ),
    .AXI_video_strm_V_last_V_empty_n( AXIvideo2Mat_32_1080_1920_16_U0_AXI_video_strm_V_last_V_empty_n ),
    .AXI_video_strm_V_last_V_read( AXIvideo2Mat_32_1080_1920_16_U0_AXI_video_strm_V_last_V_read ),
    .AXI_video_strm_V_id_V_dout( AXIvideo2Mat_32_1080_1920_16_U0_AXI_video_strm_V_id_V_dout ),
    .AXI_video_strm_V_id_V_empty_n( AXIvideo2Mat_32_1080_1920_16_U0_AXI_video_strm_V_id_V_empty_n ),
    .AXI_video_strm_V_id_V_read( AXIvideo2Mat_32_1080_1920_16_U0_AXI_video_strm_V_id_V_read ),
    .AXI_video_strm_V_dest_V_dout( AXIvideo2Mat_32_1080_1920_16_U0_AXI_video_strm_V_dest_V_dout ),
    .AXI_video_strm_V_dest_V_empty_n( AXIvideo2Mat_32_1080_1920_16_U0_AXI_video_strm_V_dest_V_empty_n ),
    .AXI_video_strm_V_dest_V_read( AXIvideo2Mat_32_1080_1920_16_U0_AXI_video_strm_V_dest_V_read ),
    .img_rows_V_read( AXIvideo2Mat_32_1080_1920_16_U0_img_rows_V_read ),
    .img_cols_V_read( AXIvideo2Mat_32_1080_1920_16_U0_img_cols_V_read ),
    .img_data_stream_0_V_din( AXIvideo2Mat_32_1080_1920_16_U0_img_data_stream_0_V_din ),
    .img_data_stream_0_V_full_n( AXIvideo2Mat_32_1080_1920_16_U0_img_data_stream_0_V_full_n ),
    .img_data_stream_0_V_write( AXIvideo2Mat_32_1080_1920_16_U0_img_data_stream_0_V_write ),
    .img_data_stream_1_V_din( AXIvideo2Mat_32_1080_1920_16_U0_img_data_stream_1_V_din ),
    .img_data_stream_1_V_full_n( AXIvideo2Mat_32_1080_1920_16_U0_img_data_stream_1_V_full_n ),
    .img_data_stream_1_V_write( AXIvideo2Mat_32_1080_1920_16_U0_img_data_stream_1_V_write ),
    .img_data_stream_2_V_din( AXIvideo2Mat_32_1080_1920_16_U0_img_data_stream_2_V_din ),
    .img_data_stream_2_V_full_n( AXIvideo2Mat_32_1080_1920_16_U0_img_data_stream_2_V_full_n ),
    .img_data_stream_2_V_write( AXIvideo2Mat_32_1080_1920_16_U0_img_data_stream_2_V_write )
);

Sobel_1_0_3_16_16_1080_1920_1080_1920_s Sobel_1_0_3_16_16_1080_1920_1080_1920_U0(
    .ap_clk( ap_clk ),
    .ap_rst( ap_rst ),
    .ap_start( Sobel_1_0_3_16_16_1080_1920_1080_1920_U0_ap_start ),
    .ap_done( Sobel_1_0_3_16_16_1080_1920_1080_1920_U0_ap_done ),
    .ap_continue( Sobel_1_0_3_16_16_1080_1920_1080_1920_U0_ap_continue ),
    .ap_idle( Sobel_1_0_3_16_16_1080_1920_1080_1920_U0_ap_idle ),
    .ap_ready( Sobel_1_0_3_16_16_1080_1920_1080_1920_U0_ap_ready ),
    .p_src_rows_V_read( Sobel_1_0_3_16_16_1080_1920_1080_1920_U0_p_src_rows_V_read ),
    .p_src_cols_V_read( Sobel_1_0_3_16_16_1080_1920_1080_1920_U0_p_src_cols_V_read ),
    .p_src_data_stream_0_V_dout( Sobel_1_0_3_16_16_1080_1920_1080_1920_U0_p_src_data_stream_0_V_dout ),
    .p_src_data_stream_0_V_empty_n( Sobel_1_0_3_16_16_1080_1920_1080_1920_U0_p_src_data_stream_0_V_empty_n ),
    .p_src_data_stream_0_V_read( Sobel_1_0_3_16_16_1080_1920_1080_1920_U0_p_src_data_stream_0_V_read ),
    .p_src_data_stream_1_V_dout( Sobel_1_0_3_16_16_1080_1920_1080_1920_U0_p_src_data_stream_1_V_dout ),
    .p_src_data_stream_1_V_empty_n( Sobel_1_0_3_16_16_1080_1920_1080_1920_U0_p_src_data_stream_1_V_empty_n ),
    .p_src_data_stream_1_V_read( Sobel_1_0_3_16_16_1080_1920_1080_1920_U0_p_src_data_stream_1_V_read ),
    .p_src_data_stream_2_V_dout( Sobel_1_0_3_16_16_1080_1920_1080_1920_U0_p_src_data_stream_2_V_dout ),
    .p_src_data_stream_2_V_empty_n( Sobel_1_0_3_16_16_1080_1920_1080_1920_U0_p_src_data_stream_2_V_empty_n ),
    .p_src_data_stream_2_V_read( Sobel_1_0_3_16_16_1080_1920_1080_1920_U0_p_src_data_stream_2_V_read ),
    .p_dst_data_stream_0_V_din( Sobel_1_0_3_16_16_1080_1920_1080_1920_U0_p_dst_data_stream_0_V_din ),
    .p_dst_data_stream_0_V_full_n( Sobel_1_0_3_16_16_1080_1920_1080_1920_U0_p_dst_data_stream_0_V_full_n ),
    .p_dst_data_stream_0_V_write( Sobel_1_0_3_16_16_1080_1920_1080_1920_U0_p_dst_data_stream_0_V_write ),
    .p_dst_data_stream_1_V_din( Sobel_1_0_3_16_16_1080_1920_1080_1920_U0_p_dst_data_stream_1_V_din ),
    .p_dst_data_stream_1_V_full_n( Sobel_1_0_3_16_16_1080_1920_1080_1920_U0_p_dst_data_stream_1_V_full_n ),
    .p_dst_data_stream_1_V_write( Sobel_1_0_3_16_16_1080_1920_1080_1920_U0_p_dst_data_stream_1_V_write ),
    .p_dst_data_stream_2_V_din( Sobel_1_0_3_16_16_1080_1920_1080_1920_U0_p_dst_data_stream_2_V_din ),
    .p_dst_data_stream_2_V_full_n( Sobel_1_0_3_16_16_1080_1920_1080_1920_U0_p_dst_data_stream_2_V_full_n ),
    .p_dst_data_stream_2_V_write( Sobel_1_0_3_16_16_1080_1920_1080_1920_U0_p_dst_data_stream_2_V_write )
);

SubS_1080_1920_16_unsigned_char_16_s SubS_1080_1920_16_unsigned_char_16_U0(
    .ap_clk( ap_clk ),
    .ap_rst( ap_rst ),
    .ap_start( SubS_1080_1920_16_unsigned_char_16_U0_ap_start ),
    .ap_done( SubS_1080_1920_16_unsigned_char_16_U0_ap_done ),
    .ap_continue( SubS_1080_1920_16_unsigned_char_16_U0_ap_continue ),
    .ap_idle( SubS_1080_1920_16_unsigned_char_16_U0_ap_idle ),
    .ap_ready( SubS_1080_1920_16_unsigned_char_16_U0_ap_ready ),
    .src_rows_V_read( SubS_1080_1920_16_unsigned_char_16_U0_src_rows_V_read ),
    .src_cols_V_read( SubS_1080_1920_16_unsigned_char_16_U0_src_cols_V_read ),
    .src_data_stream_0_V_dout( SubS_1080_1920_16_unsigned_char_16_U0_src_data_stream_0_V_dout ),
    .src_data_stream_0_V_empty_n( SubS_1080_1920_16_unsigned_char_16_U0_src_data_stream_0_V_empty_n ),
    .src_data_stream_0_V_read( SubS_1080_1920_16_unsigned_char_16_U0_src_data_stream_0_V_read ),
    .src_data_stream_1_V_dout( SubS_1080_1920_16_unsigned_char_16_U0_src_data_stream_1_V_dout ),
    .src_data_stream_1_V_empty_n( SubS_1080_1920_16_unsigned_char_16_U0_src_data_stream_1_V_empty_n ),
    .src_data_stream_1_V_read( SubS_1080_1920_16_unsigned_char_16_U0_src_data_stream_1_V_read ),
    .src_data_stream_2_V_dout( SubS_1080_1920_16_unsigned_char_16_U0_src_data_stream_2_V_dout ),
    .src_data_stream_2_V_empty_n( SubS_1080_1920_16_unsigned_char_16_U0_src_data_stream_2_V_empty_n ),
    .src_data_stream_2_V_read( SubS_1080_1920_16_unsigned_char_16_U0_src_data_stream_2_V_read ),
    .dst_rows_V_read( SubS_1080_1920_16_unsigned_char_16_U0_dst_rows_V_read ),
    .dst_cols_V_read( SubS_1080_1920_16_unsigned_char_16_U0_dst_cols_V_read ),
    .dst_data_stream_0_V_din( SubS_1080_1920_16_unsigned_char_16_U0_dst_data_stream_0_V_din ),
    .dst_data_stream_0_V_full_n( SubS_1080_1920_16_unsigned_char_16_U0_dst_data_stream_0_V_full_n ),
    .dst_data_stream_0_V_write( SubS_1080_1920_16_unsigned_char_16_U0_dst_data_stream_0_V_write ),
    .dst_data_stream_1_V_din( SubS_1080_1920_16_unsigned_char_16_U0_dst_data_stream_1_V_din ),
    .dst_data_stream_1_V_full_n( SubS_1080_1920_16_unsigned_char_16_U0_dst_data_stream_1_V_full_n ),
    .dst_data_stream_1_V_write( SubS_1080_1920_16_unsigned_char_16_U0_dst_data_stream_1_V_write ),
    .dst_data_stream_2_V_din( SubS_1080_1920_16_unsigned_char_16_U0_dst_data_stream_2_V_din ),
    .dst_data_stream_2_V_full_n( SubS_1080_1920_16_unsigned_char_16_U0_dst_data_stream_2_V_full_n ),
    .dst_data_stream_2_V_write( SubS_1080_1920_16_unsigned_char_16_U0_dst_data_stream_2_V_write )
);

Scale_1080_1920_16_16_int_s Scale_1080_1920_16_16_int_U0(
    .ap_clk( ap_clk ),
    .ap_rst( ap_rst ),
    .ap_start( Scale_1080_1920_16_16_int_U0_ap_start ),
    .ap_done( Scale_1080_1920_16_16_int_U0_ap_done ),
    .ap_continue( Scale_1080_1920_16_16_int_U0_ap_continue ),
    .ap_idle( Scale_1080_1920_16_16_int_U0_ap_idle ),
    .ap_ready( Scale_1080_1920_16_16_int_U0_ap_ready ),
    .src_rows_V_read( Scale_1080_1920_16_16_int_U0_src_rows_V_read ),
    .src_cols_V_read( Scale_1080_1920_16_16_int_U0_src_cols_V_read ),
    .src_data_stream_0_V_dout( Scale_1080_1920_16_16_int_U0_src_data_stream_0_V_dout ),
    .src_data_stream_0_V_empty_n( Scale_1080_1920_16_16_int_U0_src_data_stream_0_V_empty_n ),
    .src_data_stream_0_V_read( Scale_1080_1920_16_16_int_U0_src_data_stream_0_V_read ),
    .src_data_stream_1_V_dout( Scale_1080_1920_16_16_int_U0_src_data_stream_1_V_dout ),
    .src_data_stream_1_V_empty_n( Scale_1080_1920_16_16_int_U0_src_data_stream_1_V_empty_n ),
    .src_data_stream_1_V_read( Scale_1080_1920_16_16_int_U0_src_data_stream_1_V_read ),
    .src_data_stream_2_V_dout( Scale_1080_1920_16_16_int_U0_src_data_stream_2_V_dout ),
    .src_data_stream_2_V_empty_n( Scale_1080_1920_16_16_int_U0_src_data_stream_2_V_empty_n ),
    .src_data_stream_2_V_read( Scale_1080_1920_16_16_int_U0_src_data_stream_2_V_read ),
    .dst_rows_V_read( Scale_1080_1920_16_16_int_U0_dst_rows_V_read ),
    .dst_cols_V_read( Scale_1080_1920_16_16_int_U0_dst_cols_V_read ),
    .dst_data_stream_0_V_din( Scale_1080_1920_16_16_int_U0_dst_data_stream_0_V_din ),
    .dst_data_stream_0_V_full_n( Scale_1080_1920_16_16_int_U0_dst_data_stream_0_V_full_n ),
    .dst_data_stream_0_V_write( Scale_1080_1920_16_16_int_U0_dst_data_stream_0_V_write ),
    .dst_data_stream_1_V_din( Scale_1080_1920_16_16_int_U0_dst_data_stream_1_V_din ),
    .dst_data_stream_1_V_full_n( Scale_1080_1920_16_16_int_U0_dst_data_stream_1_V_full_n ),
    .dst_data_stream_1_V_write( Scale_1080_1920_16_16_int_U0_dst_data_stream_1_V_write ),
    .dst_data_stream_2_V_din( Scale_1080_1920_16_16_int_U0_dst_data_stream_2_V_din ),
    .dst_data_stream_2_V_full_n( Scale_1080_1920_16_16_int_U0_dst_data_stream_2_V_full_n ),
    .dst_data_stream_2_V_write( Scale_1080_1920_16_16_int_U0_dst_data_stream_2_V_write )
);

Erode_16_16_1080_1920_s Erode_16_16_1080_1920_U0(
    .ap_clk( ap_clk ),
    .ap_rst( ap_rst ),
    .ap_start( Erode_16_16_1080_1920_U0_ap_start ),
    .ap_done( Erode_16_16_1080_1920_U0_ap_done ),
    .ap_continue( Erode_16_16_1080_1920_U0_ap_continue ),
    .ap_idle( Erode_16_16_1080_1920_U0_ap_idle ),
    .ap_ready( Erode_16_16_1080_1920_U0_ap_ready ),
    .p_src_rows_V_read( Erode_16_16_1080_1920_U0_p_src_rows_V_read ),
    .p_src_cols_V_read( Erode_16_16_1080_1920_U0_p_src_cols_V_read ),
    .p_src_data_stream_0_V_dout( Erode_16_16_1080_1920_U0_p_src_data_stream_0_V_dout ),
    .p_src_data_stream_0_V_empty_n( Erode_16_16_1080_1920_U0_p_src_data_stream_0_V_empty_n ),
    .p_src_data_stream_0_V_read( Erode_16_16_1080_1920_U0_p_src_data_stream_0_V_read ),
    .p_src_data_stream_1_V_dout( Erode_16_16_1080_1920_U0_p_src_data_stream_1_V_dout ),
    .p_src_data_stream_1_V_empty_n( Erode_16_16_1080_1920_U0_p_src_data_stream_1_V_empty_n ),
    .p_src_data_stream_1_V_read( Erode_16_16_1080_1920_U0_p_src_data_stream_1_V_read ),
    .p_src_data_stream_2_V_dout( Erode_16_16_1080_1920_U0_p_src_data_stream_2_V_dout ),
    .p_src_data_stream_2_V_empty_n( Erode_16_16_1080_1920_U0_p_src_data_stream_2_V_empty_n ),
    .p_src_data_stream_2_V_read( Erode_16_16_1080_1920_U0_p_src_data_stream_2_V_read ),
    .p_dst_data_stream_0_V_din( Erode_16_16_1080_1920_U0_p_dst_data_stream_0_V_din ),
    .p_dst_data_stream_0_V_full_n( Erode_16_16_1080_1920_U0_p_dst_data_stream_0_V_full_n ),
    .p_dst_data_stream_0_V_write( Erode_16_16_1080_1920_U0_p_dst_data_stream_0_V_write ),
    .p_dst_data_stream_1_V_din( Erode_16_16_1080_1920_U0_p_dst_data_stream_1_V_din ),
    .p_dst_data_stream_1_V_full_n( Erode_16_16_1080_1920_U0_p_dst_data_stream_1_V_full_n ),
    .p_dst_data_stream_1_V_write( Erode_16_16_1080_1920_U0_p_dst_data_stream_1_V_write ),
    .p_dst_data_stream_2_V_din( Erode_16_16_1080_1920_U0_p_dst_data_stream_2_V_din ),
    .p_dst_data_stream_2_V_full_n( Erode_16_16_1080_1920_U0_p_dst_data_stream_2_V_full_n ),
    .p_dst_data_stream_2_V_write( Erode_16_16_1080_1920_U0_p_dst_data_stream_2_V_write )
);

Dilate_16_16_1080_1920_s Dilate_16_16_1080_1920_U0(
    .ap_clk( ap_clk ),
    .ap_rst( ap_rst ),
    .ap_start( Dilate_16_16_1080_1920_U0_ap_start ),
    .ap_done( Dilate_16_16_1080_1920_U0_ap_done ),
    .ap_continue( Dilate_16_16_1080_1920_U0_ap_continue ),
    .ap_idle( Dilate_16_16_1080_1920_U0_ap_idle ),
    .ap_ready( Dilate_16_16_1080_1920_U0_ap_ready ),
    .p_src_rows_V_read( Dilate_16_16_1080_1920_U0_p_src_rows_V_read ),
    .p_src_cols_V_read( Dilate_16_16_1080_1920_U0_p_src_cols_V_read ),
    .p_src_data_stream_0_V_dout( Dilate_16_16_1080_1920_U0_p_src_data_stream_0_V_dout ),
    .p_src_data_stream_0_V_empty_n( Dilate_16_16_1080_1920_U0_p_src_data_stream_0_V_empty_n ),
    .p_src_data_stream_0_V_read( Dilate_16_16_1080_1920_U0_p_src_data_stream_0_V_read ),
    .p_src_data_stream_1_V_dout( Dilate_16_16_1080_1920_U0_p_src_data_stream_1_V_dout ),
    .p_src_data_stream_1_V_empty_n( Dilate_16_16_1080_1920_U0_p_src_data_stream_1_V_empty_n ),
    .p_src_data_stream_1_V_read( Dilate_16_16_1080_1920_U0_p_src_data_stream_1_V_read ),
    .p_src_data_stream_2_V_dout( Dilate_16_16_1080_1920_U0_p_src_data_stream_2_V_dout ),
    .p_src_data_stream_2_V_empty_n( Dilate_16_16_1080_1920_U0_p_src_data_stream_2_V_empty_n ),
    .p_src_data_stream_2_V_read( Dilate_16_16_1080_1920_U0_p_src_data_stream_2_V_read ),
    .p_dst_data_stream_0_V_din( Dilate_16_16_1080_1920_U0_p_dst_data_stream_0_V_din ),
    .p_dst_data_stream_0_V_full_n( Dilate_16_16_1080_1920_U0_p_dst_data_stream_0_V_full_n ),
    .p_dst_data_stream_0_V_write( Dilate_16_16_1080_1920_U0_p_dst_data_stream_0_V_write ),
    .p_dst_data_stream_1_V_din( Dilate_16_16_1080_1920_U0_p_dst_data_stream_1_V_din ),
    .p_dst_data_stream_1_V_full_n( Dilate_16_16_1080_1920_U0_p_dst_data_stream_1_V_full_n ),
    .p_dst_data_stream_1_V_write( Dilate_16_16_1080_1920_U0_p_dst_data_stream_1_V_write ),
    .p_dst_data_stream_2_V_din( Dilate_16_16_1080_1920_U0_p_dst_data_stream_2_V_din ),
    .p_dst_data_stream_2_V_full_n( Dilate_16_16_1080_1920_U0_p_dst_data_stream_2_V_full_n ),
    .p_dst_data_stream_2_V_write( Dilate_16_16_1080_1920_U0_p_dst_data_stream_2_V_write )
);

Mat2AXIvideo_32_1080_1920_16_s Mat2AXIvideo_32_1080_1920_16_U0(
    .ap_clk( ap_clk ),
    .ap_rst( ap_rst ),
    .ap_start( Mat2AXIvideo_32_1080_1920_16_U0_ap_start ),
    .ap_done( Mat2AXIvideo_32_1080_1920_16_U0_ap_done ),
    .ap_continue( Mat2AXIvideo_32_1080_1920_16_U0_ap_continue ),
    .ap_idle( Mat2AXIvideo_32_1080_1920_16_U0_ap_idle ),
    .ap_ready( Mat2AXIvideo_32_1080_1920_16_U0_ap_ready ),
    .img_rows_V_read( Mat2AXIvideo_32_1080_1920_16_U0_img_rows_V_read ),
    .img_cols_V_read( Mat2AXIvideo_32_1080_1920_16_U0_img_cols_V_read ),
    .img_data_stream_0_V_dout( Mat2AXIvideo_32_1080_1920_16_U0_img_data_stream_0_V_dout ),
    .img_data_stream_0_V_empty_n( Mat2AXIvideo_32_1080_1920_16_U0_img_data_stream_0_V_empty_n ),
    .img_data_stream_0_V_read( Mat2AXIvideo_32_1080_1920_16_U0_img_data_stream_0_V_read ),
    .img_data_stream_1_V_dout( Mat2AXIvideo_32_1080_1920_16_U0_img_data_stream_1_V_dout ),
    .img_data_stream_1_V_empty_n( Mat2AXIvideo_32_1080_1920_16_U0_img_data_stream_1_V_empty_n ),
    .img_data_stream_1_V_read( Mat2AXIvideo_32_1080_1920_16_U0_img_data_stream_1_V_read ),
    .img_data_stream_2_V_dout( Mat2AXIvideo_32_1080_1920_16_U0_img_data_stream_2_V_dout ),
    .img_data_stream_2_V_empty_n( Mat2AXIvideo_32_1080_1920_16_U0_img_data_stream_2_V_empty_n ),
    .img_data_stream_2_V_read( Mat2AXIvideo_32_1080_1920_16_U0_img_data_stream_2_V_read ),
    .AXI_video_strm_V_data_V_din( Mat2AXIvideo_32_1080_1920_16_U0_AXI_video_strm_V_data_V_din ),
    .AXI_video_strm_V_data_V_full_n( Mat2AXIvideo_32_1080_1920_16_U0_AXI_video_strm_V_data_V_full_n ),
    .AXI_video_strm_V_data_V_write( Mat2AXIvideo_32_1080_1920_16_U0_AXI_video_strm_V_data_V_write ),
    .AXI_video_strm_V_keep_V_din( Mat2AXIvideo_32_1080_1920_16_U0_AXI_video_strm_V_keep_V_din ),
    .AXI_video_strm_V_keep_V_full_n( Mat2AXIvideo_32_1080_1920_16_U0_AXI_video_strm_V_keep_V_full_n ),
    .AXI_video_strm_V_keep_V_write( Mat2AXIvideo_32_1080_1920_16_U0_AXI_video_strm_V_keep_V_write ),
    .AXI_video_strm_V_strb_V_din( Mat2AXIvideo_32_1080_1920_16_U0_AXI_video_strm_V_strb_V_din ),
    .AXI_video_strm_V_strb_V_full_n( Mat2AXIvideo_32_1080_1920_16_U0_AXI_video_strm_V_strb_V_full_n ),
    .AXI_video_strm_V_strb_V_write( Mat2AXIvideo_32_1080_1920_16_U0_AXI_video_strm_V_strb_V_write ),
    .AXI_video_strm_V_user_V_din( Mat2AXIvideo_32_1080_1920_16_U0_AXI_video_strm_V_user_V_din ),
    .AXI_video_strm_V_user_V_full_n( Mat2AXIvideo_32_1080_1920_16_U0_AXI_video_strm_V_user_V_full_n ),
    .AXI_video_strm_V_user_V_write( Mat2AXIvideo_32_1080_1920_16_U0_AXI_video_strm_V_user_V_write ),
    .AXI_video_strm_V_last_V_din( Mat2AXIvideo_32_1080_1920_16_U0_AXI_video_strm_V_last_V_din ),
    .AXI_video_strm_V_last_V_full_n( Mat2AXIvideo_32_1080_1920_16_U0_AXI_video_strm_V_last_V_full_n ),
    .AXI_video_strm_V_last_V_write( Mat2AXIvideo_32_1080_1920_16_U0_AXI_video_strm_V_last_V_write ),
    .AXI_video_strm_V_id_V_din( Mat2AXIvideo_32_1080_1920_16_U0_AXI_video_strm_V_id_V_din ),
    .AXI_video_strm_V_id_V_full_n( Mat2AXIvideo_32_1080_1920_16_U0_AXI_video_strm_V_id_V_full_n ),
    .AXI_video_strm_V_id_V_write( Mat2AXIvideo_32_1080_1920_16_U0_AXI_video_strm_V_id_V_write ),
    .AXI_video_strm_V_dest_V_din( Mat2AXIvideo_32_1080_1920_16_U0_AXI_video_strm_V_dest_V_din ),
    .AXI_video_strm_V_dest_V_full_n( Mat2AXIvideo_32_1080_1920_16_U0_AXI_video_strm_V_dest_V_full_n ),
    .AXI_video_strm_V_dest_V_write( Mat2AXIvideo_32_1080_1920_16_U0_AXI_video_strm_V_dest_V_write )
);

FIFO_image_filter_img_0_rows_V img_0_rows_V(
    .clk( ap_clk ),
    .reset( ap_rst ),
    .if_read_ce( img_0_rows_V_ap_dummy_ce ),
    .if_write_ce( img_0_rows_V_ap_dummy_ce ),
    .if_din( img_0_rows_V_din ),
    .if_full_n( img_0_rows_V_full_n ),
    .if_write( img_0_rows_V_write ),
    .if_dout( img_0_rows_V_dout ),
    .if_empty_n( img_0_rows_V_empty_n ),
    .if_read( img_0_rows_V_read )
);

FIFO_image_filter_img_0_rows_V_channel img_0_rows_V_channel(
    .clk( ap_clk ),
    .reset( ap_rst ),
    .if_read_ce( img_0_rows_V_channel_ap_dummy_ce ),
    .if_write_ce( img_0_rows_V_channel_ap_dummy_ce ),
    .if_din( img_0_rows_V_channel_din ),
    .if_full_n( img_0_rows_V_channel_full_n ),
    .if_write( img_0_rows_V_channel_write ),
    .if_dout( img_0_rows_V_channel_dout ),
    .if_empty_n( img_0_rows_V_channel_empty_n ),
    .if_read( img_0_rows_V_channel_read )
);

FIFO_image_filter_img_0_cols_V img_0_cols_V(
    .clk( ap_clk ),
    .reset( ap_rst ),
    .if_read_ce( img_0_cols_V_ap_dummy_ce ),
    .if_write_ce( img_0_cols_V_ap_dummy_ce ),
    .if_din( img_0_cols_V_din ),
    .if_full_n( img_0_cols_V_full_n ),
    .if_write( img_0_cols_V_write ),
    .if_dout( img_0_cols_V_dout ),
    .if_empty_n( img_0_cols_V_empty_n ),
    .if_read( img_0_cols_V_read )
);

FIFO_image_filter_img_0_cols_V_channel img_0_cols_V_channel(
    .clk( ap_clk ),
    .reset( ap_rst ),
    .if_read_ce( img_0_cols_V_channel_ap_dummy_ce ),
    .if_write_ce( img_0_cols_V_channel_ap_dummy_ce ),
    .if_din( img_0_cols_V_channel_din ),
    .if_full_n( img_0_cols_V_channel_full_n ),
    .if_write( img_0_cols_V_channel_write ),
    .if_dout( img_0_cols_V_channel_dout ),
    .if_empty_n( img_0_cols_V_channel_empty_n ),
    .if_read( img_0_cols_V_channel_read )
);

FIFO_image_filter_img_1_rows_V img_1_rows_V(
    .clk( ap_clk ),
    .reset( ap_rst ),
    .if_read_ce( img_1_rows_V_ap_dummy_ce ),
    .if_write_ce( img_1_rows_V_ap_dummy_ce ),
    .if_din( img_1_rows_V_din ),
    .if_full_n( img_1_rows_V_full_n ),
    .if_write( img_1_rows_V_write ),
    .if_dout( img_1_rows_V_dout ),
    .if_empty_n( img_1_rows_V_empty_n ),
    .if_read( img_1_rows_V_read )
);

FIFO_image_filter_img_1_cols_V img_1_cols_V(
    .clk( ap_clk ),
    .reset( ap_rst ),
    .if_read_ce( img_1_cols_V_ap_dummy_ce ),
    .if_write_ce( img_1_cols_V_ap_dummy_ce ),
    .if_din( img_1_cols_V_din ),
    .if_full_n( img_1_cols_V_full_n ),
    .if_write( img_1_cols_V_write ),
    .if_dout( img_1_cols_V_dout ),
    .if_empty_n( img_1_cols_V_empty_n ),
    .if_read( img_1_cols_V_read )
);

FIFO_image_filter_img_2_rows_V img_2_rows_V(
    .clk( ap_clk ),
    .reset( ap_rst ),
    .if_read_ce( img_2_rows_V_ap_dummy_ce ),
    .if_write_ce( img_2_rows_V_ap_dummy_ce ),
    .if_din( img_2_rows_V_din ),
    .if_full_n( img_2_rows_V_full_n ),
    .if_write( img_2_rows_V_write ),
    .if_dout( img_2_rows_V_dout ),
    .if_empty_n( img_2_rows_V_empty_n ),
    .if_read( img_2_rows_V_read )
);

FIFO_image_filter_img_2_rows_V_channel img_2_rows_V_channel(
    .clk( ap_clk ),
    .reset( ap_rst ),
    .if_read_ce( img_2_rows_V_channel_ap_dummy_ce ),
    .if_write_ce( img_2_rows_V_channel_ap_dummy_ce ),
    .if_din( img_2_rows_V_channel_din ),
    .if_full_n( img_2_rows_V_channel_full_n ),
    .if_write( img_2_rows_V_channel_write ),
    .if_dout( img_2_rows_V_channel_dout ),
    .if_empty_n( img_2_rows_V_channel_empty_n ),
    .if_read( img_2_rows_V_channel_read )
);

FIFO_image_filter_img_2_cols_V img_2_cols_V(
    .clk( ap_clk ),
    .reset( ap_rst ),
    .if_read_ce( img_2_cols_V_ap_dummy_ce ),
    .if_write_ce( img_2_cols_V_ap_dummy_ce ),
    .if_din( img_2_cols_V_din ),
    .if_full_n( img_2_cols_V_full_n ),
    .if_write( img_2_cols_V_write ),
    .if_dout( img_2_cols_V_dout ),
    .if_empty_n( img_2_cols_V_empty_n ),
    .if_read( img_2_cols_V_read )
);

FIFO_image_filter_img_2_cols_V_channel img_2_cols_V_channel(
    .clk( ap_clk ),
    .reset( ap_rst ),
    .if_read_ce( img_2_cols_V_channel_ap_dummy_ce ),
    .if_write_ce( img_2_cols_V_channel_ap_dummy_ce ),
    .if_din( img_2_cols_V_channel_din ),
    .if_full_n( img_2_cols_V_channel_full_n ),
    .if_write( img_2_cols_V_channel_write ),
    .if_dout( img_2_cols_V_channel_dout ),
    .if_empty_n( img_2_cols_V_channel_empty_n ),
    .if_read( img_2_cols_V_channel_read )
);

FIFO_image_filter_img_3_rows_V img_3_rows_V(
    .clk( ap_clk ),
    .reset( ap_rst ),
    .if_read_ce( img_3_rows_V_ap_dummy_ce ),
    .if_write_ce( img_3_rows_V_ap_dummy_ce ),
    .if_din( img_3_rows_V_din ),
    .if_full_n( img_3_rows_V_full_n ),
    .if_write( img_3_rows_V_write ),
    .if_dout( img_3_rows_V_dout ),
    .if_empty_n( img_3_rows_V_empty_n ),
    .if_read( img_3_rows_V_read )
);

FIFO_image_filter_img_3_rows_V_channel img_3_rows_V_channel(
    .clk( ap_clk ),
    .reset( ap_rst ),
    .if_read_ce( img_3_rows_V_channel_ap_dummy_ce ),
    .if_write_ce( img_3_rows_V_channel_ap_dummy_ce ),
    .if_din( img_3_rows_V_channel_din ),
    .if_full_n( img_3_rows_V_channel_full_n ),
    .if_write( img_3_rows_V_channel_write ),
    .if_dout( img_3_rows_V_channel_dout ),
    .if_empty_n( img_3_rows_V_channel_empty_n ),
    .if_read( img_3_rows_V_channel_read )
);

FIFO_image_filter_img_3_cols_V img_3_cols_V(
    .clk( ap_clk ),
    .reset( ap_rst ),
    .if_read_ce( img_3_cols_V_ap_dummy_ce ),
    .if_write_ce( img_3_cols_V_ap_dummy_ce ),
    .if_din( img_3_cols_V_din ),
    .if_full_n( img_3_cols_V_full_n ),
    .if_write( img_3_cols_V_write ),
    .if_dout( img_3_cols_V_dout ),
    .if_empty_n( img_3_cols_V_empty_n ),
    .if_read( img_3_cols_V_read )
);

FIFO_image_filter_img_3_cols_V_channel img_3_cols_V_channel(
    .clk( ap_clk ),
    .reset( ap_rst ),
    .if_read_ce( img_3_cols_V_channel_ap_dummy_ce ),
    .if_write_ce( img_3_cols_V_channel_ap_dummy_ce ),
    .if_din( img_3_cols_V_channel_din ),
    .if_full_n( img_3_cols_V_channel_full_n ),
    .if_write( img_3_cols_V_channel_write ),
    .if_dout( img_3_cols_V_channel_dout ),
    .if_empty_n( img_3_cols_V_channel_empty_n ),
    .if_read( img_3_cols_V_channel_read )
);

FIFO_image_filter_img_4_rows_V img_4_rows_V(
    .clk( ap_clk ),
    .reset( ap_rst ),
    .if_read_ce( img_4_rows_V_ap_dummy_ce ),
    .if_write_ce( img_4_rows_V_ap_dummy_ce ),
    .if_din( img_4_rows_V_din ),
    .if_full_n( img_4_rows_V_full_n ),
    .if_write( img_4_rows_V_write ),
    .if_dout( img_4_rows_V_dout ),
    .if_empty_n( img_4_rows_V_empty_n ),
    .if_read( img_4_rows_V_read )
);

FIFO_image_filter_img_4_cols_V img_4_cols_V(
    .clk( ap_clk ),
    .reset( ap_rst ),
    .if_read_ce( img_4_cols_V_ap_dummy_ce ),
    .if_write_ce( img_4_cols_V_ap_dummy_ce ),
    .if_din( img_4_cols_V_din ),
    .if_full_n( img_4_cols_V_full_n ),
    .if_write( img_4_cols_V_write ),
    .if_dout( img_4_cols_V_dout ),
    .if_empty_n( img_4_cols_V_empty_n ),
    .if_read( img_4_cols_V_read )
);

FIFO_image_filter_img_5_rows_V img_5_rows_V(
    .clk( ap_clk ),
    .reset( ap_rst ),
    .if_read_ce( img_5_rows_V_ap_dummy_ce ),
    .if_write_ce( img_5_rows_V_ap_dummy_ce ),
    .if_din( img_5_rows_V_din ),
    .if_full_n( img_5_rows_V_full_n ),
    .if_write( img_5_rows_V_write ),
    .if_dout( img_5_rows_V_dout ),
    .if_empty_n( img_5_rows_V_empty_n ),
    .if_read( img_5_rows_V_read )
);

FIFO_image_filter_img_5_cols_V img_5_cols_V(
    .clk( ap_clk ),
    .reset( ap_rst ),
    .if_read_ce( img_5_cols_V_ap_dummy_ce ),
    .if_write_ce( img_5_cols_V_ap_dummy_ce ),
    .if_din( img_5_cols_V_din ),
    .if_full_n( img_5_cols_V_full_n ),
    .if_write( img_5_cols_V_write ),
    .if_dout( img_5_cols_V_dout ),
    .if_empty_n( img_5_cols_V_empty_n ),
    .if_read( img_5_cols_V_read )
);

FIFO_image_filter_img_0_data_stream_0_V img_0_data_stream_0_V(
    .clk( ap_clk ),
    .reset( ap_rst ),
    .if_read_ce( img_0_data_stream_0_V_ap_dummy_ce ),
    .if_write_ce( img_0_data_stream_0_V_ap_dummy_ce ),
    .if_din( img_0_data_stream_0_V_din ),
    .if_full_n( img_0_data_stream_0_V_full_n ),
    .if_write( img_0_data_stream_0_V_write ),
    .if_dout( img_0_data_stream_0_V_dout ),
    .if_empty_n( img_0_data_stream_0_V_empty_n ),
    .if_read( img_0_data_stream_0_V_read )
);

FIFO_image_filter_img_0_data_stream_1_V img_0_data_stream_1_V(
    .clk( ap_clk ),
    .reset( ap_rst ),
    .if_read_ce( img_0_data_stream_1_V_ap_dummy_ce ),
    .if_write_ce( img_0_data_stream_1_V_ap_dummy_ce ),
    .if_din( img_0_data_stream_1_V_din ),
    .if_full_n( img_0_data_stream_1_V_full_n ),
    .if_write( img_0_data_stream_1_V_write ),
    .if_dout( img_0_data_stream_1_V_dout ),
    .if_empty_n( img_0_data_stream_1_V_empty_n ),
    .if_read( img_0_data_stream_1_V_read )
);

FIFO_image_filter_img_0_data_stream_2_V img_0_data_stream_2_V(
    .clk( ap_clk ),
    .reset( ap_rst ),
    .if_read_ce( img_0_data_stream_2_V_ap_dummy_ce ),
    .if_write_ce( img_0_data_stream_2_V_ap_dummy_ce ),
    .if_din( img_0_data_stream_2_V_din ),
    .if_full_n( img_0_data_stream_2_V_full_n ),
    .if_write( img_0_data_stream_2_V_write ),
    .if_dout( img_0_data_stream_2_V_dout ),
    .if_empty_n( img_0_data_stream_2_V_empty_n ),
    .if_read( img_0_data_stream_2_V_read )
);

FIFO_image_filter_img_1_data_stream_0_V img_1_data_stream_0_V(
    .clk( ap_clk ),
    .reset( ap_rst ),
    .if_read_ce( img_1_data_stream_0_V_ap_dummy_ce ),
    .if_write_ce( img_1_data_stream_0_V_ap_dummy_ce ),
    .if_din( img_1_data_stream_0_V_din ),
    .if_full_n( img_1_data_stream_0_V_full_n ),
    .if_write( img_1_data_stream_0_V_write ),
    .if_dout( img_1_data_stream_0_V_dout ),
    .if_empty_n( img_1_data_stream_0_V_empty_n ),
    .if_read( img_1_data_stream_0_V_read )
);

FIFO_image_filter_img_1_data_stream_1_V img_1_data_stream_1_V(
    .clk( ap_clk ),
    .reset( ap_rst ),
    .if_read_ce( img_1_data_stream_1_V_ap_dummy_ce ),
    .if_write_ce( img_1_data_stream_1_V_ap_dummy_ce ),
    .if_din( img_1_data_stream_1_V_din ),
    .if_full_n( img_1_data_stream_1_V_full_n ),
    .if_write( img_1_data_stream_1_V_write ),
    .if_dout( img_1_data_stream_1_V_dout ),
    .if_empty_n( img_1_data_stream_1_V_empty_n ),
    .if_read( img_1_data_stream_1_V_read )
);

FIFO_image_filter_img_1_data_stream_2_V img_1_data_stream_2_V(
    .clk( ap_clk ),
    .reset( ap_rst ),
    .if_read_ce( img_1_data_stream_2_V_ap_dummy_ce ),
    .if_write_ce( img_1_data_stream_2_V_ap_dummy_ce ),
    .if_din( img_1_data_stream_2_V_din ),
    .if_full_n( img_1_data_stream_2_V_full_n ),
    .if_write( img_1_data_stream_2_V_write ),
    .if_dout( img_1_data_stream_2_V_dout ),
    .if_empty_n( img_1_data_stream_2_V_empty_n ),
    .if_read( img_1_data_stream_2_V_read )
);

FIFO_image_filter_img_2_data_stream_0_V img_2_data_stream_0_V(
    .clk( ap_clk ),
    .reset( ap_rst ),
    .if_read_ce( img_2_data_stream_0_V_ap_dummy_ce ),
    .if_write_ce( img_2_data_stream_0_V_ap_dummy_ce ),
    .if_din( img_2_data_stream_0_V_din ),
    .if_full_n( img_2_data_stream_0_V_full_n ),
    .if_write( img_2_data_stream_0_V_write ),
    .if_dout( img_2_data_stream_0_V_dout ),
    .if_empty_n( img_2_data_stream_0_V_empty_n ),
    .if_read( img_2_data_stream_0_V_read )
);

FIFO_image_filter_img_2_data_stream_1_V img_2_data_stream_1_V(
    .clk( ap_clk ),
    .reset( ap_rst ),
    .if_read_ce( img_2_data_stream_1_V_ap_dummy_ce ),
    .if_write_ce( img_2_data_stream_1_V_ap_dummy_ce ),
    .if_din( img_2_data_stream_1_V_din ),
    .if_full_n( img_2_data_stream_1_V_full_n ),
    .if_write( img_2_data_stream_1_V_write ),
    .if_dout( img_2_data_stream_1_V_dout ),
    .if_empty_n( img_2_data_stream_1_V_empty_n ),
    .if_read( img_2_data_stream_1_V_read )
);

FIFO_image_filter_img_2_data_stream_2_V img_2_data_stream_2_V(
    .clk( ap_clk ),
    .reset( ap_rst ),
    .if_read_ce( img_2_data_stream_2_V_ap_dummy_ce ),
    .if_write_ce( img_2_data_stream_2_V_ap_dummy_ce ),
    .if_din( img_2_data_stream_2_V_din ),
    .if_full_n( img_2_data_stream_2_V_full_n ),
    .if_write( img_2_data_stream_2_V_write ),
    .if_dout( img_2_data_stream_2_V_dout ),
    .if_empty_n( img_2_data_stream_2_V_empty_n ),
    .if_read( img_2_data_stream_2_V_read )
);

FIFO_image_filter_img_3_data_stream_0_V img_3_data_stream_0_V(
    .clk( ap_clk ),
    .reset( ap_rst ),
    .if_read_ce( img_3_data_stream_0_V_ap_dummy_ce ),
    .if_write_ce( img_3_data_stream_0_V_ap_dummy_ce ),
    .if_din( img_3_data_stream_0_V_din ),
    .if_full_n( img_3_data_stream_0_V_full_n ),
    .if_write( img_3_data_stream_0_V_write ),
    .if_dout( img_3_data_stream_0_V_dout ),
    .if_empty_n( img_3_data_stream_0_V_empty_n ),
    .if_read( img_3_data_stream_0_V_read )
);

FIFO_image_filter_img_3_data_stream_1_V img_3_data_stream_1_V(
    .clk( ap_clk ),
    .reset( ap_rst ),
    .if_read_ce( img_3_data_stream_1_V_ap_dummy_ce ),
    .if_write_ce( img_3_data_stream_1_V_ap_dummy_ce ),
    .if_din( img_3_data_stream_1_V_din ),
    .if_full_n( img_3_data_stream_1_V_full_n ),
    .if_write( img_3_data_stream_1_V_write ),
    .if_dout( img_3_data_stream_1_V_dout ),
    .if_empty_n( img_3_data_stream_1_V_empty_n ),
    .if_read( img_3_data_stream_1_V_read )
);

FIFO_image_filter_img_3_data_stream_2_V img_3_data_stream_2_V(
    .clk( ap_clk ),
    .reset( ap_rst ),
    .if_read_ce( img_3_data_stream_2_V_ap_dummy_ce ),
    .if_write_ce( img_3_data_stream_2_V_ap_dummy_ce ),
    .if_din( img_3_data_stream_2_V_din ),
    .if_full_n( img_3_data_stream_2_V_full_n ),
    .if_write( img_3_data_stream_2_V_write ),
    .if_dout( img_3_data_stream_2_V_dout ),
    .if_empty_n( img_3_data_stream_2_V_empty_n ),
    .if_read( img_3_data_stream_2_V_read )
);

FIFO_image_filter_img_4_data_stream_0_V img_4_data_stream_0_V(
    .clk( ap_clk ),
    .reset( ap_rst ),
    .if_read_ce( img_4_data_stream_0_V_ap_dummy_ce ),
    .if_write_ce( img_4_data_stream_0_V_ap_dummy_ce ),
    .if_din( img_4_data_stream_0_V_din ),
    .if_full_n( img_4_data_stream_0_V_full_n ),
    .if_write( img_4_data_stream_0_V_write ),
    .if_dout( img_4_data_stream_0_V_dout ),
    .if_empty_n( img_4_data_stream_0_V_empty_n ),
    .if_read( img_4_data_stream_0_V_read )
);

FIFO_image_filter_img_4_data_stream_1_V img_4_data_stream_1_V(
    .clk( ap_clk ),
    .reset( ap_rst ),
    .if_read_ce( img_4_data_stream_1_V_ap_dummy_ce ),
    .if_write_ce( img_4_data_stream_1_V_ap_dummy_ce ),
    .if_din( img_4_data_stream_1_V_din ),
    .if_full_n( img_4_data_stream_1_V_full_n ),
    .if_write( img_4_data_stream_1_V_write ),
    .if_dout( img_4_data_stream_1_V_dout ),
    .if_empty_n( img_4_data_stream_1_V_empty_n ),
    .if_read( img_4_data_stream_1_V_read )
);

FIFO_image_filter_img_4_data_stream_2_V img_4_data_stream_2_V(
    .clk( ap_clk ),
    .reset( ap_rst ),
    .if_read_ce( img_4_data_stream_2_V_ap_dummy_ce ),
    .if_write_ce( img_4_data_stream_2_V_ap_dummy_ce ),
    .if_din( img_4_data_stream_2_V_din ),
    .if_full_n( img_4_data_stream_2_V_full_n ),
    .if_write( img_4_data_stream_2_V_write ),
    .if_dout( img_4_data_stream_2_V_dout ),
    .if_empty_n( img_4_data_stream_2_V_empty_n ),
    .if_read( img_4_data_stream_2_V_read )
);

FIFO_image_filter_img_5_data_stream_0_V img_5_data_stream_0_V(
    .clk( ap_clk ),
    .reset( ap_rst ),
    .if_read_ce( img_5_data_stream_0_V_ap_dummy_ce ),
    .if_write_ce( img_5_data_stream_0_V_ap_dummy_ce ),
    .if_din( img_5_data_stream_0_V_din ),
    .if_full_n( img_5_data_stream_0_V_full_n ),
    .if_write( img_5_data_stream_0_V_write ),
    .if_dout( img_5_data_stream_0_V_dout ),
    .if_empty_n( img_5_data_stream_0_V_empty_n ),
    .if_read( img_5_data_stream_0_V_read )
);

FIFO_image_filter_img_5_data_stream_1_V img_5_data_stream_1_V(
    .clk( ap_clk ),
    .reset( ap_rst ),
    .if_read_ce( img_5_data_stream_1_V_ap_dummy_ce ),
    .if_write_ce( img_5_data_stream_1_V_ap_dummy_ce ),
    .if_din( img_5_data_stream_1_V_din ),
    .if_full_n( img_5_data_stream_1_V_full_n ),
    .if_write( img_5_data_stream_1_V_write ),
    .if_dout( img_5_data_stream_1_V_dout ),
    .if_empty_n( img_5_data_stream_1_V_empty_n ),
    .if_read( img_5_data_stream_1_V_read )
);

FIFO_image_filter_img_5_data_stream_2_V img_5_data_stream_2_V(
    .clk( ap_clk ),
    .reset( ap_rst ),
    .if_read_ce( img_5_data_stream_2_V_ap_dummy_ce ),
    .if_write_ce( img_5_data_stream_2_V_ap_dummy_ce ),
    .if_din( img_5_data_stream_2_V_din ),
    .if_full_n( img_5_data_stream_2_V_full_n ),
    .if_write( img_5_data_stream_2_V_write ),
    .if_dout( img_5_data_stream_2_V_dout ),
    .if_empty_n( img_5_data_stream_2_V_empty_n ),
    .if_read( img_5_data_stream_2_V_read )
);



/// ap_reg_procdone_AXIvideo2Mat_32_1080_1920_16_U0 assign process. ///
always @ (posedge ap_clk)
begin : ap_ret_ap_reg_procdone_AXIvideo2Mat_32_1080_1920_16_U0
    if (ap_rst == 1'b1) begin
        ap_reg_procdone_AXIvideo2Mat_32_1080_1920_16_U0 <= ap_const_logic_0;
    end else begin
        if ((ap_const_logic_1 == ap_sig_hs_done)) begin
            ap_reg_procdone_AXIvideo2Mat_32_1080_1920_16_U0 <= ap_const_logic_0;
        end else if ((ap_const_logic_1 == AXIvideo2Mat_32_1080_1920_16_U0_ap_done)) begin
            ap_reg_procdone_AXIvideo2Mat_32_1080_1920_16_U0 <= ap_const_logic_1;
        end
    end
end

/// ap_reg_procdone_Dilate_16_16_1080_1920_U0 assign process. ///
always @ (posedge ap_clk)
begin : ap_ret_ap_reg_procdone_Dilate_16_16_1080_1920_U0
    if (ap_rst == 1'b1) begin
        ap_reg_procdone_Dilate_16_16_1080_1920_U0 <= ap_const_logic_0;
    end else begin
        if ((ap_const_logic_1 == ap_sig_hs_done)) begin
            ap_reg_procdone_Dilate_16_16_1080_1920_U0 <= ap_const_logic_0;
        end else if ((ap_const_logic_1 == Dilate_16_16_1080_1920_U0_ap_done)) begin
            ap_reg_procdone_Dilate_16_16_1080_1920_U0 <= ap_const_logic_1;
        end
    end
end

/// ap_reg_procdone_Erode_16_16_1080_1920_U0 assign process. ///
always @ (posedge ap_clk)
begin : ap_ret_ap_reg_procdone_Erode_16_16_1080_1920_U0
    if (ap_rst == 1'b1) begin
        ap_reg_procdone_Erode_16_16_1080_1920_U0 <= ap_const_logic_0;
    end else begin
        if ((ap_const_logic_1 == ap_sig_hs_done)) begin
            ap_reg_procdone_Erode_16_16_1080_1920_U0 <= ap_const_logic_0;
        end else if ((ap_const_logic_1 == Erode_16_16_1080_1920_U0_ap_done)) begin
            ap_reg_procdone_Erode_16_16_1080_1920_U0 <= ap_const_logic_1;
        end
    end
end

/// ap_reg_procdone_Mat2AXIvideo_32_1080_1920_16_U0 assign process. ///
always @ (posedge ap_clk)
begin : ap_ret_ap_reg_procdone_Mat2AXIvideo_32_1080_1920_16_U0
    if (ap_rst == 1'b1) begin
        ap_reg_procdone_Mat2AXIvideo_32_1080_1920_16_U0 <= ap_const_logic_0;
    end else begin
        if ((ap_const_logic_1 == ap_sig_hs_done)) begin
            ap_reg_procdone_Mat2AXIvideo_32_1080_1920_16_U0 <= ap_const_logic_0;
        end else if ((ap_const_logic_1 == Mat2AXIvideo_32_1080_1920_16_U0_ap_done)) begin
            ap_reg_procdone_Mat2AXIvideo_32_1080_1920_16_U0 <= ap_const_logic_1;
        end
    end
end

/// ap_reg_procdone_Scale_1080_1920_16_16_int_U0 assign process. ///
always @ (posedge ap_clk)
begin : ap_ret_ap_reg_procdone_Scale_1080_1920_16_16_int_U0
    if (ap_rst == 1'b1) begin
        ap_reg_procdone_Scale_1080_1920_16_16_int_U0 <= ap_const_logic_0;
    end else begin
        if ((ap_const_logic_1 == ap_sig_hs_done)) begin
            ap_reg_procdone_Scale_1080_1920_16_16_int_U0 <= ap_const_logic_0;
        end else if ((ap_const_logic_1 == Scale_1080_1920_16_16_int_U0_ap_done)) begin
            ap_reg_procdone_Scale_1080_1920_16_16_int_U0 <= ap_const_logic_1;
        end
    end
end

/// ap_reg_procdone_Sobel_1_0_3_16_16_1080_1920_1080_1920_U0 assign process. ///
always @ (posedge ap_clk)
begin : ap_ret_ap_reg_procdone_Sobel_1_0_3_16_16_1080_1920_1080_1920_U0
    if (ap_rst == 1'b1) begin
        ap_reg_procdone_Sobel_1_0_3_16_16_1080_1920_1080_1920_U0 <= ap_const_logic_0;
    end else begin
        if ((ap_const_logic_1 == ap_sig_hs_done)) begin
            ap_reg_procdone_Sobel_1_0_3_16_16_1080_1920_1080_1920_U0 <= ap_const_logic_0;
        end else if ((ap_const_logic_1 == Sobel_1_0_3_16_16_1080_1920_1080_1920_U0_ap_done)) begin
            ap_reg_procdone_Sobel_1_0_3_16_16_1080_1920_1080_1920_U0 <= ap_const_logic_1;
        end
    end
end

/// ap_reg_procdone_SubS_1080_1920_16_unsigned_char_16_U0 assign process. ///
always @ (posedge ap_clk)
begin : ap_ret_ap_reg_procdone_SubS_1080_1920_16_unsigned_char_16_U0
    if (ap_rst == 1'b1) begin
        ap_reg_procdone_SubS_1080_1920_16_unsigned_char_16_U0 <= ap_const_logic_0;
    end else begin
        if ((ap_const_logic_1 == ap_sig_hs_done)) begin
            ap_reg_procdone_SubS_1080_1920_16_unsigned_char_16_U0 <= ap_const_logic_0;
        end else if ((ap_const_logic_1 == SubS_1080_1920_16_unsigned_char_16_U0_ap_done)) begin
            ap_reg_procdone_SubS_1080_1920_16_unsigned_char_16_U0 <= ap_const_logic_1;
        end
    end
end

/// ap_reg_procdone_init_1_U0 assign process. ///
always @ (posedge ap_clk)
begin : ap_ret_ap_reg_procdone_init_1_U0
    if (ap_rst == 1'b1) begin
        ap_reg_procdone_init_1_U0 <= ap_const_logic_0;
    end else begin
        if ((ap_const_logic_1 == ap_sig_hs_done)) begin
            ap_reg_procdone_init_1_U0 <= ap_const_logic_0;
        end else if ((ap_const_logic_1 == init_1_U0_ap_done)) begin
            ap_reg_procdone_init_1_U0 <= ap_const_logic_1;
        end
    end
end

/// ap_reg_procdone_init_2_U0 assign process. ///
always @ (posedge ap_clk)
begin : ap_ret_ap_reg_procdone_init_2_U0
    if (ap_rst == 1'b1) begin
        ap_reg_procdone_init_2_U0 <= ap_const_logic_0;
    end else begin
        if ((ap_const_logic_1 == ap_sig_hs_done)) begin
            ap_reg_procdone_init_2_U0 <= ap_const_logic_0;
        end else if ((ap_const_logic_1 == init_2_U0_ap_done)) begin
            ap_reg_procdone_init_2_U0 <= ap_const_logic_1;
        end
    end
end

/// ap_reg_procdone_init_3_U0 assign process. ///
always @ (posedge ap_clk)
begin : ap_ret_ap_reg_procdone_init_3_U0
    if (ap_rst == 1'b1) begin
        ap_reg_procdone_init_3_U0 <= ap_const_logic_0;
    end else begin
        if ((ap_const_logic_1 == ap_sig_hs_done)) begin
            ap_reg_procdone_init_3_U0 <= ap_const_logic_0;
        end else if ((ap_const_logic_1 == init_3_U0_ap_done)) begin
            ap_reg_procdone_init_3_U0 <= ap_const_logic_1;
        end
    end
end

/// ap_reg_procdone_init_4_U0 assign process. ///
always @ (posedge ap_clk)
begin : ap_ret_ap_reg_procdone_init_4_U0
    if (ap_rst == 1'b1) begin
        ap_reg_procdone_init_4_U0 <= ap_const_logic_0;
    end else begin
        if ((ap_const_logic_1 == ap_sig_hs_done)) begin
            ap_reg_procdone_init_4_U0 <= ap_const_logic_0;
        end else if ((ap_const_logic_1 == init_4_U0_ap_done)) begin
            ap_reg_procdone_init_4_U0 <= ap_const_logic_1;
        end
    end
end

/// ap_reg_procdone_init_5_U0 assign process. ///
always @ (posedge ap_clk)
begin : ap_ret_ap_reg_procdone_init_5_U0
    if (ap_rst == 1'b1) begin
        ap_reg_procdone_init_5_U0 <= ap_const_logic_0;
    end else begin
        if ((ap_const_logic_1 == ap_sig_hs_done)) begin
            ap_reg_procdone_init_5_U0 <= ap_const_logic_0;
        end else if ((ap_const_logic_1 == init_5_U0_ap_done)) begin
            ap_reg_procdone_init_5_U0 <= ap_const_logic_1;
        end
    end
end

/// ap_reg_procdone_init_U0 assign process. ///
always @ (posedge ap_clk)
begin : ap_ret_ap_reg_procdone_init_U0
    if (ap_rst == 1'b1) begin
        ap_reg_procdone_init_U0 <= ap_const_logic_0;
    end else begin
        if ((ap_const_logic_1 == ap_sig_hs_done)) begin
            ap_reg_procdone_init_U0 <= ap_const_logic_0;
        end else if ((init_U0_ap_done == ap_const_logic_1)) begin
            ap_reg_procdone_init_U0 <= ap_const_logic_1;
        end
    end
end

/// ap_reg_ready_AXIvideo2Mat_32_1080_1920_16_U0_ap_ready assign process. ///
always @ (posedge ap_clk)
begin : ap_ret_ap_reg_ready_AXIvideo2Mat_32_1080_1920_16_U0_ap_ready
    if (ap_rst == 1'b1) begin
        ap_reg_ready_AXIvideo2Mat_32_1080_1920_16_U0_ap_ready <= ap_const_logic_0;
    end else begin
        if (((ap_const_logic_1 == ap_start) & (ap_const_logic_1 == ap_sig_top_allready))) begin
            ap_reg_ready_AXIvideo2Mat_32_1080_1920_16_U0_ap_ready <= ap_const_logic_0;
        end else if ((ap_const_logic_1 == AXIvideo2Mat_32_1080_1920_16_U0_ap_ready)) begin
            ap_reg_ready_AXIvideo2Mat_32_1080_1920_16_U0_ap_ready <= ap_const_logic_1;
        end
    end
end

/// ap_reg_ready_img_0_cols_V_channel_full_n assign process. ///
always @ (posedge ap_clk)
begin : ap_ret_ap_reg_ready_img_0_cols_V_channel_full_n
    if (ap_rst == 1'b1) begin
        ap_reg_ready_img_0_cols_V_channel_full_n <= ap_const_logic_0;
    end else begin
        if (((init_U0_ap_done == ap_const_logic_1) & (init_U0_ap_continue == ap_const_logic_1))) begin
            ap_reg_ready_img_0_cols_V_channel_full_n <= ap_const_logic_0;
        end else if (((init_U0_ap_done == ap_const_logic_1) & (ap_const_logic_1 == img_0_cols_V_channel_full_n))) begin
            ap_reg_ready_img_0_cols_V_channel_full_n <= ap_const_logic_1;
        end
    end
end

/// ap_reg_ready_img_0_cols_V_full_n assign process. ///
always @ (posedge ap_clk)
begin : ap_ret_ap_reg_ready_img_0_cols_V_full_n
    if (ap_rst == 1'b1) begin
        ap_reg_ready_img_0_cols_V_full_n <= ap_const_logic_0;
    end else begin
        if (((init_U0_ap_done == ap_const_logic_1) & (init_U0_ap_continue == ap_const_logic_1))) begin
            ap_reg_ready_img_0_cols_V_full_n <= ap_const_logic_0;
        end else if (((init_U0_ap_done == ap_const_logic_1) & (ap_const_logic_1 == img_0_cols_V_full_n))) begin
            ap_reg_ready_img_0_cols_V_full_n <= ap_const_logic_1;
        end
    end
end

/// ap_reg_ready_img_0_rows_V_channel_full_n assign process. ///
always @ (posedge ap_clk)
begin : ap_ret_ap_reg_ready_img_0_rows_V_channel_full_n
    if (ap_rst == 1'b1) begin
        ap_reg_ready_img_0_rows_V_channel_full_n <= ap_const_logic_0;
    end else begin
        if (((init_U0_ap_done == ap_const_logic_1) & (init_U0_ap_continue == ap_const_logic_1))) begin
            ap_reg_ready_img_0_rows_V_channel_full_n <= ap_const_logic_0;
        end else if (((init_U0_ap_done == ap_const_logic_1) & (ap_const_logic_1 == img_0_rows_V_channel_full_n))) begin
            ap_reg_ready_img_0_rows_V_channel_full_n <= ap_const_logic_1;
        end
    end
end

/// ap_reg_ready_img_0_rows_V_full_n assign process. ///
always @ (posedge ap_clk)
begin : ap_ret_ap_reg_ready_img_0_rows_V_full_n
    if (ap_rst == 1'b1) begin
        ap_reg_ready_img_0_rows_V_full_n <= ap_const_logic_0;
    end else begin
        if (((init_U0_ap_done == ap_const_logic_1) & (init_U0_ap_continue == ap_const_logic_1))) begin
            ap_reg_ready_img_0_rows_V_full_n <= ap_const_logic_0;
        end else if (((init_U0_ap_done == ap_const_logic_1) & (ap_const_logic_1 == img_0_rows_V_full_n))) begin
            ap_reg_ready_img_0_rows_V_full_n <= ap_const_logic_1;
        end
    end
end

/// ap_reg_ready_img_1_cols_V_full_n assign process. ///
always @ (posedge ap_clk)
begin : ap_ret_ap_reg_ready_img_1_cols_V_full_n
    if (ap_rst == 1'b1) begin
        ap_reg_ready_img_1_cols_V_full_n <= ap_const_logic_0;
    end else begin
        if (((ap_const_logic_1 == init_1_U0_ap_done) & (ap_const_logic_1 == init_1_U0_ap_continue))) begin
            ap_reg_ready_img_1_cols_V_full_n <= ap_const_logic_0;
        end else if (((ap_const_logic_1 == init_1_U0_ap_done) & (ap_const_logic_1 == img_1_cols_V_full_n))) begin
            ap_reg_ready_img_1_cols_V_full_n <= ap_const_logic_1;
        end
    end
end

/// ap_reg_ready_img_1_rows_V_full_n assign process. ///
always @ (posedge ap_clk)
begin : ap_ret_ap_reg_ready_img_1_rows_V_full_n
    if (ap_rst == 1'b1) begin
        ap_reg_ready_img_1_rows_V_full_n <= ap_const_logic_0;
    end else begin
        if (((ap_const_logic_1 == init_1_U0_ap_done) & (ap_const_logic_1 == init_1_U0_ap_continue))) begin
            ap_reg_ready_img_1_rows_V_full_n <= ap_const_logic_0;
        end else if (((ap_const_logic_1 == init_1_U0_ap_done) & (ap_const_logic_1 == img_1_rows_V_full_n))) begin
            ap_reg_ready_img_1_rows_V_full_n <= ap_const_logic_1;
        end
    end
end

/// ap_reg_ready_img_2_cols_V_channel_full_n assign process. ///
always @ (posedge ap_clk)
begin : ap_ret_ap_reg_ready_img_2_cols_V_channel_full_n
    if (ap_rst == 1'b1) begin
        ap_reg_ready_img_2_cols_V_channel_full_n <= ap_const_logic_0;
    end else begin
        if (((ap_const_logic_1 == init_2_U0_ap_done) & (ap_const_logic_1 == init_2_U0_ap_continue))) begin
            ap_reg_ready_img_2_cols_V_channel_full_n <= ap_const_logic_0;
        end else if (((ap_const_logic_1 == init_2_U0_ap_done) & (ap_const_logic_1 == img_2_cols_V_channel_full_n))) begin
            ap_reg_ready_img_2_cols_V_channel_full_n <= ap_const_logic_1;
        end
    end
end

/// ap_reg_ready_img_2_cols_V_full_n assign process. ///
always @ (posedge ap_clk)
begin : ap_ret_ap_reg_ready_img_2_cols_V_full_n
    if (ap_rst == 1'b1) begin
        ap_reg_ready_img_2_cols_V_full_n <= ap_const_logic_0;
    end else begin
        if (((ap_const_logic_1 == init_2_U0_ap_done) & (ap_const_logic_1 == init_2_U0_ap_continue))) begin
            ap_reg_ready_img_2_cols_V_full_n <= ap_const_logic_0;
        end else if (((ap_const_logic_1 == init_2_U0_ap_done) & (ap_const_logic_1 == img_2_cols_V_full_n))) begin
            ap_reg_ready_img_2_cols_V_full_n <= ap_const_logic_1;
        end
    end
end

/// ap_reg_ready_img_2_rows_V_channel_full_n assign process. ///
always @ (posedge ap_clk)
begin : ap_ret_ap_reg_ready_img_2_rows_V_channel_full_n
    if (ap_rst == 1'b1) begin
        ap_reg_ready_img_2_rows_V_channel_full_n <= ap_const_logic_0;
    end else begin
        if (((ap_const_logic_1 == init_2_U0_ap_done) & (ap_const_logic_1 == init_2_U0_ap_continue))) begin
            ap_reg_ready_img_2_rows_V_channel_full_n <= ap_const_logic_0;
        end else if (((ap_const_logic_1 == init_2_U0_ap_done) & (ap_const_logic_1 == img_2_rows_V_channel_full_n))) begin
            ap_reg_ready_img_2_rows_V_channel_full_n <= ap_const_logic_1;
        end
    end
end

/// ap_reg_ready_img_2_rows_V_full_n assign process. ///
always @ (posedge ap_clk)
begin : ap_ret_ap_reg_ready_img_2_rows_V_full_n
    if (ap_rst == 1'b1) begin
        ap_reg_ready_img_2_rows_V_full_n <= ap_const_logic_0;
    end else begin
        if (((ap_const_logic_1 == init_2_U0_ap_done) & (ap_const_logic_1 == init_2_U0_ap_continue))) begin
            ap_reg_ready_img_2_rows_V_full_n <= ap_const_logic_0;
        end else if (((ap_const_logic_1 == init_2_U0_ap_done) & (ap_const_logic_1 == img_2_rows_V_full_n))) begin
            ap_reg_ready_img_2_rows_V_full_n <= ap_const_logic_1;
        end
    end
end

/// ap_reg_ready_img_3_cols_V_channel_full_n assign process. ///
always @ (posedge ap_clk)
begin : ap_ret_ap_reg_ready_img_3_cols_V_channel_full_n
    if (ap_rst == 1'b1) begin
        ap_reg_ready_img_3_cols_V_channel_full_n <= ap_const_logic_0;
    end else begin
        if (((ap_const_logic_1 == init_3_U0_ap_done) & (ap_const_logic_1 == init_3_U0_ap_continue))) begin
            ap_reg_ready_img_3_cols_V_channel_full_n <= ap_const_logic_0;
        end else if (((ap_const_logic_1 == init_3_U0_ap_done) & (ap_const_logic_1 == img_3_cols_V_channel_full_n))) begin
            ap_reg_ready_img_3_cols_V_channel_full_n <= ap_const_logic_1;
        end
    end
end

/// ap_reg_ready_img_3_cols_V_full_n assign process. ///
always @ (posedge ap_clk)
begin : ap_ret_ap_reg_ready_img_3_cols_V_full_n
    if (ap_rst == 1'b1) begin
        ap_reg_ready_img_3_cols_V_full_n <= ap_const_logic_0;
    end else begin
        if (((ap_const_logic_1 == init_3_U0_ap_done) & (ap_const_logic_1 == init_3_U0_ap_continue))) begin
            ap_reg_ready_img_3_cols_V_full_n <= ap_const_logic_0;
        end else if (((ap_const_logic_1 == init_3_U0_ap_done) & (ap_const_logic_1 == img_3_cols_V_full_n))) begin
            ap_reg_ready_img_3_cols_V_full_n <= ap_const_logic_1;
        end
    end
end

/// ap_reg_ready_img_3_rows_V_channel_full_n assign process. ///
always @ (posedge ap_clk)
begin : ap_ret_ap_reg_ready_img_3_rows_V_channel_full_n
    if (ap_rst == 1'b1) begin
        ap_reg_ready_img_3_rows_V_channel_full_n <= ap_const_logic_0;
    end else begin
        if (((ap_const_logic_1 == init_3_U0_ap_done) & (ap_const_logic_1 == init_3_U0_ap_continue))) begin
            ap_reg_ready_img_3_rows_V_channel_full_n <= ap_const_logic_0;
        end else if (((ap_const_logic_1 == init_3_U0_ap_done) & (ap_const_logic_1 == img_3_rows_V_channel_full_n))) begin
            ap_reg_ready_img_3_rows_V_channel_full_n <= ap_const_logic_1;
        end
    end
end

/// ap_reg_ready_img_3_rows_V_full_n assign process. ///
always @ (posedge ap_clk)
begin : ap_ret_ap_reg_ready_img_3_rows_V_full_n
    if (ap_rst == 1'b1) begin
        ap_reg_ready_img_3_rows_V_full_n <= ap_const_logic_0;
    end else begin
        if (((ap_const_logic_1 == init_3_U0_ap_done) & (ap_const_logic_1 == init_3_U0_ap_continue))) begin
            ap_reg_ready_img_3_rows_V_full_n <= ap_const_logic_0;
        end else if (((ap_const_logic_1 == init_3_U0_ap_done) & (ap_const_logic_1 == img_3_rows_V_full_n))) begin
            ap_reg_ready_img_3_rows_V_full_n <= ap_const_logic_1;
        end
    end
end

/// ap_reg_ready_img_4_cols_V_full_n assign process. ///
always @ (posedge ap_clk)
begin : ap_ret_ap_reg_ready_img_4_cols_V_full_n
    if (ap_rst == 1'b1) begin
        ap_reg_ready_img_4_cols_V_full_n <= ap_const_logic_0;
    end else begin
        if (((ap_const_logic_1 == init_4_U0_ap_done) & (ap_const_logic_1 == init_4_U0_ap_continue))) begin
            ap_reg_ready_img_4_cols_V_full_n <= ap_const_logic_0;
        end else if (((ap_const_logic_1 == init_4_U0_ap_done) & (ap_const_logic_1 == img_4_cols_V_full_n))) begin
            ap_reg_ready_img_4_cols_V_full_n <= ap_const_logic_1;
        end
    end
end

/// ap_reg_ready_img_4_rows_V_full_n assign process. ///
always @ (posedge ap_clk)
begin : ap_ret_ap_reg_ready_img_4_rows_V_full_n
    if (ap_rst == 1'b1) begin
        ap_reg_ready_img_4_rows_V_full_n <= ap_const_logic_0;
    end else begin
        if (((ap_const_logic_1 == init_4_U0_ap_done) & (ap_const_logic_1 == init_4_U0_ap_continue))) begin
            ap_reg_ready_img_4_rows_V_full_n <= ap_const_logic_0;
        end else if (((ap_const_logic_1 == init_4_U0_ap_done) & (ap_const_logic_1 == img_4_rows_V_full_n))) begin
            ap_reg_ready_img_4_rows_V_full_n <= ap_const_logic_1;
        end
    end
end

/// ap_reg_ready_img_5_cols_V_full_n assign process. ///
always @ (posedge ap_clk)
begin : ap_ret_ap_reg_ready_img_5_cols_V_full_n
    if (ap_rst == 1'b1) begin
        ap_reg_ready_img_5_cols_V_full_n <= ap_const_logic_0;
    end else begin
        if (((ap_const_logic_1 == init_5_U0_ap_done) & (ap_const_logic_1 == init_5_U0_ap_continue))) begin
            ap_reg_ready_img_5_cols_V_full_n <= ap_const_logic_0;
        end else if (((ap_const_logic_1 == init_5_U0_ap_done) & (ap_const_logic_1 == img_5_cols_V_full_n))) begin
            ap_reg_ready_img_5_cols_V_full_n <= ap_const_logic_1;
        end
    end
end

/// ap_reg_ready_img_5_rows_V_full_n assign process. ///
always @ (posedge ap_clk)
begin : ap_ret_ap_reg_ready_img_5_rows_V_full_n
    if (ap_rst == 1'b1) begin
        ap_reg_ready_img_5_rows_V_full_n <= ap_const_logic_0;
    end else begin
        if (((ap_const_logic_1 == init_5_U0_ap_done) & (ap_const_logic_1 == init_5_U0_ap_continue))) begin
            ap_reg_ready_img_5_rows_V_full_n <= ap_const_logic_0;
        end else if (((ap_const_logic_1 == init_5_U0_ap_done) & (ap_const_logic_1 == img_5_rows_V_full_n))) begin
            ap_reg_ready_img_5_rows_V_full_n <= ap_const_logic_1;
        end
    end
end

/// ap_reg_ready_init_1_U0_ap_ready assign process. ///
always @ (posedge ap_clk)
begin : ap_ret_ap_reg_ready_init_1_U0_ap_ready
    if (ap_rst == 1'b1) begin
        ap_reg_ready_init_1_U0_ap_ready <= ap_const_logic_0;
    end else begin
        if (((ap_const_logic_1 == ap_start) & (ap_const_logic_1 == ap_sig_top_allready))) begin
            ap_reg_ready_init_1_U0_ap_ready <= ap_const_logic_0;
        end else if ((ap_const_logic_1 == init_1_U0_ap_ready)) begin
            ap_reg_ready_init_1_U0_ap_ready <= ap_const_logic_1;
        end
    end
end

/// ap_reg_ready_init_2_U0_ap_ready assign process. ///
always @ (posedge ap_clk)
begin : ap_ret_ap_reg_ready_init_2_U0_ap_ready
    if (ap_rst == 1'b1) begin
        ap_reg_ready_init_2_U0_ap_ready <= ap_const_logic_0;
    end else begin
        if (((ap_const_logic_1 == ap_start) & (ap_const_logic_1 == ap_sig_top_allready))) begin
            ap_reg_ready_init_2_U0_ap_ready <= ap_const_logic_0;
        end else if ((ap_const_logic_1 == init_2_U0_ap_ready)) begin
            ap_reg_ready_init_2_U0_ap_ready <= ap_const_logic_1;
        end
    end
end

/// ap_reg_ready_init_3_U0_ap_ready assign process. ///
always @ (posedge ap_clk)
begin : ap_ret_ap_reg_ready_init_3_U0_ap_ready
    if (ap_rst == 1'b1) begin
        ap_reg_ready_init_3_U0_ap_ready <= ap_const_logic_0;
    end else begin
        if (((ap_const_logic_1 == ap_start) & (ap_const_logic_1 == ap_sig_top_allready))) begin
            ap_reg_ready_init_3_U0_ap_ready <= ap_const_logic_0;
        end else if ((ap_const_logic_1 == init_3_U0_ap_ready)) begin
            ap_reg_ready_init_3_U0_ap_ready <= ap_const_logic_1;
        end
    end
end

/// ap_reg_ready_init_4_U0_ap_ready assign process. ///
always @ (posedge ap_clk)
begin : ap_ret_ap_reg_ready_init_4_U0_ap_ready
    if (ap_rst == 1'b1) begin
        ap_reg_ready_init_4_U0_ap_ready <= ap_const_logic_0;
    end else begin
        if (((ap_const_logic_1 == ap_start) & (ap_const_logic_1 == ap_sig_top_allready))) begin
            ap_reg_ready_init_4_U0_ap_ready <= ap_const_logic_0;
        end else if ((ap_const_logic_1 == init_4_U0_ap_ready)) begin
            ap_reg_ready_init_4_U0_ap_ready <= ap_const_logic_1;
        end
    end
end

/// ap_reg_ready_init_5_U0_ap_ready assign process. ///
always @ (posedge ap_clk)
begin : ap_ret_ap_reg_ready_init_5_U0_ap_ready
    if (ap_rst == 1'b1) begin
        ap_reg_ready_init_5_U0_ap_ready <= ap_const_logic_0;
    end else begin
        if (((ap_const_logic_1 == ap_start) & (ap_const_logic_1 == ap_sig_top_allready))) begin
            ap_reg_ready_init_5_U0_ap_ready <= ap_const_logic_0;
        end else if ((ap_const_logic_1 == init_5_U0_ap_ready)) begin
            ap_reg_ready_init_5_U0_ap_ready <= ap_const_logic_1;
        end
    end
end

/// ap_reg_ready_init_U0_ap_ready assign process. ///
always @ (posedge ap_clk)
begin : ap_ret_ap_reg_ready_init_U0_ap_ready
    if (ap_rst == 1'b1) begin
        ap_reg_ready_init_U0_ap_ready <= ap_const_logic_0;
    end else begin
        if (((ap_const_logic_1 == ap_start) & (ap_const_logic_1 == ap_sig_top_allready))) begin
            ap_reg_ready_init_U0_ap_ready <= ap_const_logic_0;
        end else if ((init_U0_ap_ready == ap_const_logic_1)) begin
            ap_reg_ready_init_U0_ap_ready <= ap_const_logic_1;
        end
    end
end

/// ap_chn_write_init_1_U0_img_1_cols_V assign process. ///
always @ (init_1_U0_ap_done or ap_reg_ready_img_1_cols_V_full_n)
begin
    if ((ap_const_logic_1 == ap_reg_ready_img_1_cols_V_full_n)) begin
        ap_chn_write_init_1_U0_img_1_cols_V = ap_const_logic_0;
    end else begin
        ap_chn_write_init_1_U0_img_1_cols_V = init_1_U0_ap_done;
    end
end

/// ap_chn_write_init_1_U0_img_1_rows_V assign process. ///
always @ (init_1_U0_ap_done or ap_reg_ready_img_1_rows_V_full_n)
begin
    if ((ap_const_logic_1 == ap_reg_ready_img_1_rows_V_full_n)) begin
        ap_chn_write_init_1_U0_img_1_rows_V = ap_const_logic_0;
    end else begin
        ap_chn_write_init_1_U0_img_1_rows_V = init_1_U0_ap_done;
    end
end

/// ap_chn_write_init_2_U0_img_2_cols_V assign process. ///
always @ (init_2_U0_ap_done or ap_reg_ready_img_2_cols_V_full_n)
begin
    if ((ap_const_logic_1 == ap_reg_ready_img_2_cols_V_full_n)) begin
        ap_chn_write_init_2_U0_img_2_cols_V = ap_const_logic_0;
    end else begin
        ap_chn_write_init_2_U0_img_2_cols_V = init_2_U0_ap_done;
    end
end

/// ap_chn_write_init_2_U0_img_2_cols_V_channel assign process. ///
always @ (init_2_U0_ap_done or ap_reg_ready_img_2_cols_V_channel_full_n)
begin
    if ((ap_const_logic_1 == ap_reg_ready_img_2_cols_V_channel_full_n)) begin
        ap_chn_write_init_2_U0_img_2_cols_V_channel = ap_const_logic_0;
    end else begin
        ap_chn_write_init_2_U0_img_2_cols_V_channel = init_2_U0_ap_done;
    end
end

/// ap_chn_write_init_2_U0_img_2_rows_V assign process. ///
always @ (init_2_U0_ap_done or ap_reg_ready_img_2_rows_V_full_n)
begin
    if ((ap_const_logic_1 == ap_reg_ready_img_2_rows_V_full_n)) begin
        ap_chn_write_init_2_U0_img_2_rows_V = ap_const_logic_0;
    end else begin
        ap_chn_write_init_2_U0_img_2_rows_V = init_2_U0_ap_done;
    end
end

/// ap_chn_write_init_2_U0_img_2_rows_V_channel assign process. ///
always @ (init_2_U0_ap_done or ap_reg_ready_img_2_rows_V_channel_full_n)
begin
    if ((ap_const_logic_1 == ap_reg_ready_img_2_rows_V_channel_full_n)) begin
        ap_chn_write_init_2_U0_img_2_rows_V_channel = ap_const_logic_0;
    end else begin
        ap_chn_write_init_2_U0_img_2_rows_V_channel = init_2_U0_ap_done;
    end
end

/// ap_chn_write_init_3_U0_img_3_cols_V assign process. ///
always @ (init_3_U0_ap_done or ap_reg_ready_img_3_cols_V_full_n)
begin
    if ((ap_const_logic_1 == ap_reg_ready_img_3_cols_V_full_n)) begin
        ap_chn_write_init_3_U0_img_3_cols_V = ap_const_logic_0;
    end else begin
        ap_chn_write_init_3_U0_img_3_cols_V = init_3_U0_ap_done;
    end
end

/// ap_chn_write_init_3_U0_img_3_cols_V_channel assign process. ///
always @ (init_3_U0_ap_done or ap_reg_ready_img_3_cols_V_channel_full_n)
begin
    if ((ap_const_logic_1 == ap_reg_ready_img_3_cols_V_channel_full_n)) begin
        ap_chn_write_init_3_U0_img_3_cols_V_channel = ap_const_logic_0;
    end else begin
        ap_chn_write_init_3_U0_img_3_cols_V_channel = init_3_U0_ap_done;
    end
end

/// ap_chn_write_init_3_U0_img_3_rows_V assign process. ///
always @ (init_3_U0_ap_done or ap_reg_ready_img_3_rows_V_full_n)
begin
    if ((ap_const_logic_1 == ap_reg_ready_img_3_rows_V_full_n)) begin
        ap_chn_write_init_3_U0_img_3_rows_V = ap_const_logic_0;
    end else begin
        ap_chn_write_init_3_U0_img_3_rows_V = init_3_U0_ap_done;
    end
end

/// ap_chn_write_init_3_U0_img_3_rows_V_channel assign process. ///
always @ (init_3_U0_ap_done or ap_reg_ready_img_3_rows_V_channel_full_n)
begin
    if ((ap_const_logic_1 == ap_reg_ready_img_3_rows_V_channel_full_n)) begin
        ap_chn_write_init_3_U0_img_3_rows_V_channel = ap_const_logic_0;
    end else begin
        ap_chn_write_init_3_U0_img_3_rows_V_channel = init_3_U0_ap_done;
    end
end

/// ap_chn_write_init_4_U0_img_4_cols_V assign process. ///
always @ (init_4_U0_ap_done or ap_reg_ready_img_4_cols_V_full_n)
begin
    if ((ap_const_logic_1 == ap_reg_ready_img_4_cols_V_full_n)) begin
        ap_chn_write_init_4_U0_img_4_cols_V = ap_const_logic_0;
    end else begin
        ap_chn_write_init_4_U0_img_4_cols_V = init_4_U0_ap_done;
    end
end

/// ap_chn_write_init_4_U0_img_4_rows_V assign process. ///
always @ (init_4_U0_ap_done or ap_reg_ready_img_4_rows_V_full_n)
begin
    if ((ap_const_logic_1 == ap_reg_ready_img_4_rows_V_full_n)) begin
        ap_chn_write_init_4_U0_img_4_rows_V = ap_const_logic_0;
    end else begin
        ap_chn_write_init_4_U0_img_4_rows_V = init_4_U0_ap_done;
    end
end

/// ap_chn_write_init_5_U0_img_5_cols_V assign process. ///
always @ (init_5_U0_ap_done or ap_reg_ready_img_5_cols_V_full_n)
begin
    if ((ap_const_logic_1 == ap_reg_ready_img_5_cols_V_full_n)) begin
        ap_chn_write_init_5_U0_img_5_cols_V = ap_const_logic_0;
    end else begin
        ap_chn_write_init_5_U0_img_5_cols_V = init_5_U0_ap_done;
    end
end

/// ap_chn_write_init_5_U0_img_5_rows_V assign process. ///
always @ (init_5_U0_ap_done or ap_reg_ready_img_5_rows_V_full_n)
begin
    if ((ap_const_logic_1 == ap_reg_ready_img_5_rows_V_full_n)) begin
        ap_chn_write_init_5_U0_img_5_rows_V = ap_const_logic_0;
    end else begin
        ap_chn_write_init_5_U0_img_5_rows_V = init_5_U0_ap_done;
    end
end

/// ap_chn_write_init_U0_img_0_cols_V assign process. ///
always @ (init_U0_ap_done or ap_reg_ready_img_0_cols_V_full_n)
begin
    if ((ap_const_logic_1 == ap_reg_ready_img_0_cols_V_full_n)) begin
        ap_chn_write_init_U0_img_0_cols_V = ap_const_logic_0;
    end else begin
        ap_chn_write_init_U0_img_0_cols_V = init_U0_ap_done;
    end
end

/// ap_chn_write_init_U0_img_0_cols_V_channel assign process. ///
always @ (init_U0_ap_done or ap_reg_ready_img_0_cols_V_channel_full_n)
begin
    if ((ap_const_logic_1 == ap_reg_ready_img_0_cols_V_channel_full_n)) begin
        ap_chn_write_init_U0_img_0_cols_V_channel = ap_const_logic_0;
    end else begin
        ap_chn_write_init_U0_img_0_cols_V_channel = init_U0_ap_done;
    end
end

/// ap_chn_write_init_U0_img_0_rows_V assign process. ///
always @ (init_U0_ap_done or ap_reg_ready_img_0_rows_V_full_n)
begin
    if ((ap_const_logic_1 == ap_reg_ready_img_0_rows_V_full_n)) begin
        ap_chn_write_init_U0_img_0_rows_V = ap_const_logic_0;
    end else begin
        ap_chn_write_init_U0_img_0_rows_V = init_U0_ap_done;
    end
end

/// ap_chn_write_init_U0_img_0_rows_V_channel assign process. ///
always @ (init_U0_ap_done or ap_reg_ready_img_0_rows_V_channel_full_n)
begin
    if ((ap_const_logic_1 == ap_reg_ready_img_0_rows_V_channel_full_n)) begin
        ap_chn_write_init_U0_img_0_rows_V_channel = ap_const_logic_0;
    end else begin
        ap_chn_write_init_U0_img_0_rows_V_channel = init_U0_ap_done;
    end
end

/// ap_idle assign process. ///
always @ (init_U0_ap_idle or init_1_U0_ap_idle or init_2_U0_ap_idle or init_3_U0_ap_idle or init_4_U0_ap_idle or init_5_U0_ap_idle or AXIvideo2Mat_32_1080_1920_16_U0_ap_idle or Sobel_1_0_3_16_16_1080_1920_1080_1920_U0_ap_idle or SubS_1080_1920_16_unsigned_char_16_U0_ap_idle or Scale_1080_1920_16_16_int_U0_ap_idle or Erode_16_16_1080_1920_U0_ap_idle or Dilate_16_16_1080_1920_U0_ap_idle or Mat2AXIvideo_32_1080_1920_16_U0_ap_idle or img_0_rows_V_empty_n or img_0_rows_V_channel_empty_n or img_0_cols_V_empty_n or img_0_cols_V_channel_empty_n or img_1_rows_V_empty_n or img_1_cols_V_empty_n or img_2_rows_V_empty_n or img_2_rows_V_channel_empty_n or img_2_cols_V_empty_n or img_2_cols_V_channel_empty_n or img_3_rows_V_empty_n or img_3_rows_V_channel_empty_n or img_3_cols_V_empty_n or img_3_cols_V_channel_empty_n or img_4_rows_V_empty_n or img_4_cols_V_empty_n or img_5_rows_V_empty_n or img_5_cols_V_empty_n)
begin
    if (((init_U0_ap_idle == ap_const_logic_1) & (ap_const_logic_1 == init_1_U0_ap_idle) & (ap_const_logic_1 == init_2_U0_ap_idle) & (ap_const_logic_1 == init_3_U0_ap_idle) & (ap_const_logic_1 == init_4_U0_ap_idle) & (ap_const_logic_1 == init_5_U0_ap_idle) & (ap_const_logic_1 == AXIvideo2Mat_32_1080_1920_16_U0_ap_idle) & (ap_const_logic_1 == Sobel_1_0_3_16_16_1080_1920_1080_1920_U0_ap_idle) & (ap_const_logic_1 == SubS_1080_1920_16_unsigned_char_16_U0_ap_idle) & (ap_const_logic_1 == Scale_1080_1920_16_16_int_U0_ap_idle) & (ap_const_logic_1 == Erode_16_16_1080_1920_U0_ap_idle) & (ap_const_logic_1 == Dilate_16_16_1080_1920_U0_ap_idle) & (ap_const_logic_1 == Mat2AXIvideo_32_1080_1920_16_U0_ap_idle) & (ap_const_logic_0 == img_0_rows_V_empty_n) & (ap_const_logic_0 == img_0_rows_V_channel_empty_n) & (ap_const_logic_0 == img_0_cols_V_empty_n) & (ap_const_logic_0 == img_0_cols_V_channel_empty_n) & (ap_const_logic_0 == img_1_rows_V_empty_n) & (ap_const_logic_0 == img_1_cols_V_empty_n) & (ap_const_logic_0 == img_2_rows_V_empty_n) & (ap_const_logic_0 == img_2_rows_V_channel_empty_n) & (ap_const_logic_0 == img_2_cols_V_empty_n) & (ap_const_logic_0 == img_2_cols_V_channel_empty_n) & (ap_const_logic_0 == img_3_rows_V_empty_n) & (ap_const_logic_0 == img_3_rows_V_channel_empty_n) & (ap_const_logic_0 == img_3_cols_V_empty_n) & (ap_const_logic_0 == img_3_cols_V_channel_empty_n) & (ap_const_logic_0 == img_4_rows_V_empty_n) & (ap_const_logic_0 == img_4_cols_V_empty_n) & (ap_const_logic_0 == img_5_rows_V_empty_n) & (ap_const_logic_0 == img_5_cols_V_empty_n))) begin
        ap_idle = ap_const_logic_1;
    end else begin
        ap_idle = ap_const_logic_0;
    end
end

/// ap_sig_hs_done assign process. ///
always @ (Mat2AXIvideo_32_1080_1920_16_U0_ap_done or ap_reg_procdone_Mat2AXIvideo_32_1080_1920_16_U0)
begin
    if (((ap_const_logic_1 == Mat2AXIvideo_32_1080_1920_16_U0_ap_done) | (ap_const_logic_1 == ap_reg_procdone_Mat2AXIvideo_32_1080_1920_16_U0))) begin
        ap_sig_hs_done = ap_const_logic_1;
    end else begin
        ap_sig_hs_done = ap_const_logic_0;
    end
end

/// ap_sig_ready_AXIvideo2Mat_32_1080_1920_16_U0_ap_ready assign process. ///
always @ (AXIvideo2Mat_32_1080_1920_16_U0_ap_ready or ap_reg_ready_AXIvideo2Mat_32_1080_1920_16_U0_ap_ready)
begin
    if ((ap_const_logic_0 == ap_reg_ready_AXIvideo2Mat_32_1080_1920_16_U0_ap_ready)) begin
        ap_sig_ready_AXIvideo2Mat_32_1080_1920_16_U0_ap_ready = AXIvideo2Mat_32_1080_1920_16_U0_ap_ready;
    end else begin
        ap_sig_ready_AXIvideo2Mat_32_1080_1920_16_U0_ap_ready = ap_const_logic_1;
    end
end

/// ap_sig_ready_img_0_cols_V_channel_full_n assign process. ///
always @ (img_0_cols_V_channel_full_n or ap_reg_ready_img_0_cols_V_channel_full_n)
begin
    if ((ap_const_logic_0 == ap_reg_ready_img_0_cols_V_channel_full_n)) begin
        ap_sig_ready_img_0_cols_V_channel_full_n = img_0_cols_V_channel_full_n;
    end else begin
        ap_sig_ready_img_0_cols_V_channel_full_n = ap_const_logic_1;
    end
end

/// ap_sig_ready_img_0_cols_V_full_n assign process. ///
always @ (img_0_cols_V_full_n or ap_reg_ready_img_0_cols_V_full_n)
begin
    if ((ap_const_logic_0 == ap_reg_ready_img_0_cols_V_full_n)) begin
        ap_sig_ready_img_0_cols_V_full_n = img_0_cols_V_full_n;
    end else begin
        ap_sig_ready_img_0_cols_V_full_n = ap_const_logic_1;
    end
end

/// ap_sig_ready_img_0_rows_V_channel_full_n assign process. ///
always @ (img_0_rows_V_channel_full_n or ap_reg_ready_img_0_rows_V_channel_full_n)
begin
    if ((ap_const_logic_0 == ap_reg_ready_img_0_rows_V_channel_full_n)) begin
        ap_sig_ready_img_0_rows_V_channel_full_n = img_0_rows_V_channel_full_n;
    end else begin
        ap_sig_ready_img_0_rows_V_channel_full_n = ap_const_logic_1;
    end
end

/// ap_sig_ready_img_0_rows_V_full_n assign process. ///
always @ (img_0_rows_V_full_n or ap_reg_ready_img_0_rows_V_full_n)
begin
    if ((ap_const_logic_0 == ap_reg_ready_img_0_rows_V_full_n)) begin
        ap_sig_ready_img_0_rows_V_full_n = img_0_rows_V_full_n;
    end else begin
        ap_sig_ready_img_0_rows_V_full_n = ap_const_logic_1;
    end
end

/// ap_sig_ready_img_1_cols_V_full_n assign process. ///
always @ (img_1_cols_V_full_n or ap_reg_ready_img_1_cols_V_full_n)
begin
    if ((ap_const_logic_0 == ap_reg_ready_img_1_cols_V_full_n)) begin
        ap_sig_ready_img_1_cols_V_full_n = img_1_cols_V_full_n;
    end else begin
        ap_sig_ready_img_1_cols_V_full_n = ap_const_logic_1;
    end
end

/// ap_sig_ready_img_1_rows_V_full_n assign process. ///
always @ (img_1_rows_V_full_n or ap_reg_ready_img_1_rows_V_full_n)
begin
    if ((ap_const_logic_0 == ap_reg_ready_img_1_rows_V_full_n)) begin
        ap_sig_ready_img_1_rows_V_full_n = img_1_rows_V_full_n;
    end else begin
        ap_sig_ready_img_1_rows_V_full_n = ap_const_logic_1;
    end
end

/// ap_sig_ready_img_2_cols_V_channel_full_n assign process. ///
always @ (img_2_cols_V_channel_full_n or ap_reg_ready_img_2_cols_V_channel_full_n)
begin
    if ((ap_const_logic_0 == ap_reg_ready_img_2_cols_V_channel_full_n)) begin
        ap_sig_ready_img_2_cols_V_channel_full_n = img_2_cols_V_channel_full_n;
    end else begin
        ap_sig_ready_img_2_cols_V_channel_full_n = ap_const_logic_1;
    end
end

/// ap_sig_ready_img_2_cols_V_full_n assign process. ///
always @ (img_2_cols_V_full_n or ap_reg_ready_img_2_cols_V_full_n)
begin
    if ((ap_const_logic_0 == ap_reg_ready_img_2_cols_V_full_n)) begin
        ap_sig_ready_img_2_cols_V_full_n = img_2_cols_V_full_n;
    end else begin
        ap_sig_ready_img_2_cols_V_full_n = ap_const_logic_1;
    end
end

/// ap_sig_ready_img_2_rows_V_channel_full_n assign process. ///
always @ (img_2_rows_V_channel_full_n or ap_reg_ready_img_2_rows_V_channel_full_n)
begin
    if ((ap_const_logic_0 == ap_reg_ready_img_2_rows_V_channel_full_n)) begin
        ap_sig_ready_img_2_rows_V_channel_full_n = img_2_rows_V_channel_full_n;
    end else begin
        ap_sig_ready_img_2_rows_V_channel_full_n = ap_const_logic_1;
    end
end

/// ap_sig_ready_img_2_rows_V_full_n assign process. ///
always @ (img_2_rows_V_full_n or ap_reg_ready_img_2_rows_V_full_n)
begin
    if ((ap_const_logic_0 == ap_reg_ready_img_2_rows_V_full_n)) begin
        ap_sig_ready_img_2_rows_V_full_n = img_2_rows_V_full_n;
    end else begin
        ap_sig_ready_img_2_rows_V_full_n = ap_const_logic_1;
    end
end

/// ap_sig_ready_img_3_cols_V_channel_full_n assign process. ///
always @ (img_3_cols_V_channel_full_n or ap_reg_ready_img_3_cols_V_channel_full_n)
begin
    if ((ap_const_logic_0 == ap_reg_ready_img_3_cols_V_channel_full_n)) begin
        ap_sig_ready_img_3_cols_V_channel_full_n = img_3_cols_V_channel_full_n;
    end else begin
        ap_sig_ready_img_3_cols_V_channel_full_n = ap_const_logic_1;
    end
end

/// ap_sig_ready_img_3_cols_V_full_n assign process. ///
always @ (img_3_cols_V_full_n or ap_reg_ready_img_3_cols_V_full_n)
begin
    if ((ap_const_logic_0 == ap_reg_ready_img_3_cols_V_full_n)) begin
        ap_sig_ready_img_3_cols_V_full_n = img_3_cols_V_full_n;
    end else begin
        ap_sig_ready_img_3_cols_V_full_n = ap_const_logic_1;
    end
end

/// ap_sig_ready_img_3_rows_V_channel_full_n assign process. ///
always @ (img_3_rows_V_channel_full_n or ap_reg_ready_img_3_rows_V_channel_full_n)
begin
    if ((ap_const_logic_0 == ap_reg_ready_img_3_rows_V_channel_full_n)) begin
        ap_sig_ready_img_3_rows_V_channel_full_n = img_3_rows_V_channel_full_n;
    end else begin
        ap_sig_ready_img_3_rows_V_channel_full_n = ap_const_logic_1;
    end
end

/// ap_sig_ready_img_3_rows_V_full_n assign process. ///
always @ (img_3_rows_V_full_n or ap_reg_ready_img_3_rows_V_full_n)
begin
    if ((ap_const_logic_0 == ap_reg_ready_img_3_rows_V_full_n)) begin
        ap_sig_ready_img_3_rows_V_full_n = img_3_rows_V_full_n;
    end else begin
        ap_sig_ready_img_3_rows_V_full_n = ap_const_logic_1;
    end
end

/// ap_sig_ready_img_4_cols_V_full_n assign process. ///
always @ (img_4_cols_V_full_n or ap_reg_ready_img_4_cols_V_full_n)
begin
    if ((ap_const_logic_0 == ap_reg_ready_img_4_cols_V_full_n)) begin
        ap_sig_ready_img_4_cols_V_full_n = img_4_cols_V_full_n;
    end else begin
        ap_sig_ready_img_4_cols_V_full_n = ap_const_logic_1;
    end
end

/// ap_sig_ready_img_4_rows_V_full_n assign process. ///
always @ (img_4_rows_V_full_n or ap_reg_ready_img_4_rows_V_full_n)
begin
    if ((ap_const_logic_0 == ap_reg_ready_img_4_rows_V_full_n)) begin
        ap_sig_ready_img_4_rows_V_full_n = img_4_rows_V_full_n;
    end else begin
        ap_sig_ready_img_4_rows_V_full_n = ap_const_logic_1;
    end
end

/// ap_sig_ready_img_5_cols_V_full_n assign process. ///
always @ (img_5_cols_V_full_n or ap_reg_ready_img_5_cols_V_full_n)
begin
    if ((ap_const_logic_0 == ap_reg_ready_img_5_cols_V_full_n)) begin
        ap_sig_ready_img_5_cols_V_full_n = img_5_cols_V_full_n;
    end else begin
        ap_sig_ready_img_5_cols_V_full_n = ap_const_logic_1;
    end
end

/// ap_sig_ready_img_5_rows_V_full_n assign process. ///
always @ (img_5_rows_V_full_n or ap_reg_ready_img_5_rows_V_full_n)
begin
    if ((ap_const_logic_0 == ap_reg_ready_img_5_rows_V_full_n)) begin
        ap_sig_ready_img_5_rows_V_full_n = img_5_rows_V_full_n;
    end else begin
        ap_sig_ready_img_5_rows_V_full_n = ap_const_logic_1;
    end
end

/// ap_sig_ready_init_1_U0_ap_ready assign process. ///
always @ (init_1_U0_ap_ready or ap_reg_ready_init_1_U0_ap_ready)
begin
    if ((ap_const_logic_0 == ap_reg_ready_init_1_U0_ap_ready)) begin
        ap_sig_ready_init_1_U0_ap_ready = init_1_U0_ap_ready;
    end else begin
        ap_sig_ready_init_1_U0_ap_ready = ap_const_logic_1;
    end
end

/// ap_sig_ready_init_2_U0_ap_ready assign process. ///
always @ (init_2_U0_ap_ready or ap_reg_ready_init_2_U0_ap_ready)
begin
    if ((ap_const_logic_0 == ap_reg_ready_init_2_U0_ap_ready)) begin
        ap_sig_ready_init_2_U0_ap_ready = init_2_U0_ap_ready;
    end else begin
        ap_sig_ready_init_2_U0_ap_ready = ap_const_logic_1;
    end
end

/// ap_sig_ready_init_3_U0_ap_ready assign process. ///
always @ (init_3_U0_ap_ready or ap_reg_ready_init_3_U0_ap_ready)
begin
    if ((ap_const_logic_0 == ap_reg_ready_init_3_U0_ap_ready)) begin
        ap_sig_ready_init_3_U0_ap_ready = init_3_U0_ap_ready;
    end else begin
        ap_sig_ready_init_3_U0_ap_ready = ap_const_logic_1;
    end
end

/// ap_sig_ready_init_4_U0_ap_ready assign process. ///
always @ (init_4_U0_ap_ready or ap_reg_ready_init_4_U0_ap_ready)
begin
    if ((ap_const_logic_0 == ap_reg_ready_init_4_U0_ap_ready)) begin
        ap_sig_ready_init_4_U0_ap_ready = init_4_U0_ap_ready;
    end else begin
        ap_sig_ready_init_4_U0_ap_ready = ap_const_logic_1;
    end
end

/// ap_sig_ready_init_5_U0_ap_ready assign process. ///
always @ (init_5_U0_ap_ready or ap_reg_ready_init_5_U0_ap_ready)
begin
    if ((ap_const_logic_0 == ap_reg_ready_init_5_U0_ap_ready)) begin
        ap_sig_ready_init_5_U0_ap_ready = init_5_U0_ap_ready;
    end else begin
        ap_sig_ready_init_5_U0_ap_ready = ap_const_logic_1;
    end
end

/// ap_sig_ready_init_U0_ap_ready assign process. ///
always @ (init_U0_ap_ready or ap_reg_ready_init_U0_ap_ready)
begin
    if ((ap_const_logic_0 == ap_reg_ready_init_U0_ap_ready)) begin
        ap_sig_ready_init_U0_ap_ready = init_U0_ap_ready;
    end else begin
        ap_sig_ready_init_U0_ap_ready = ap_const_logic_1;
    end
end

/// ap_sig_start_in_AXIvideo2Mat_32_1080_1920_16_U0_ap_start assign process. ///
always @ (ap_start or ap_reg_ready_AXIvideo2Mat_32_1080_1920_16_U0_ap_ready)
begin
    if (((ap_const_logic_1 == ap_start) & (ap_const_logic_0 == ap_reg_ready_AXIvideo2Mat_32_1080_1920_16_U0_ap_ready))) begin
        ap_sig_start_in_AXIvideo2Mat_32_1080_1920_16_U0_ap_start = ap_const_logic_1;
    end else begin
        ap_sig_start_in_AXIvideo2Mat_32_1080_1920_16_U0_ap_start = ap_const_logic_0;
    end
end

/// ap_sig_start_in_init_1_U0_ap_start assign process. ///
always @ (ap_start or ap_reg_ready_init_1_U0_ap_ready)
begin
    if (((ap_const_logic_1 == ap_start) & (ap_const_logic_0 == ap_reg_ready_init_1_U0_ap_ready))) begin
        ap_sig_start_in_init_1_U0_ap_start = ap_const_logic_1;
    end else begin
        ap_sig_start_in_init_1_U0_ap_start = ap_const_logic_0;
    end
end

/// ap_sig_start_in_init_2_U0_ap_start assign process. ///
always @ (ap_start or ap_reg_ready_init_2_U0_ap_ready)
begin
    if (((ap_const_logic_1 == ap_start) & (ap_const_logic_0 == ap_reg_ready_init_2_U0_ap_ready))) begin
        ap_sig_start_in_init_2_U0_ap_start = ap_const_logic_1;
    end else begin
        ap_sig_start_in_init_2_U0_ap_start = ap_const_logic_0;
    end
end

/// ap_sig_start_in_init_3_U0_ap_start assign process. ///
always @ (ap_start or ap_reg_ready_init_3_U0_ap_ready)
begin
    if (((ap_const_logic_1 == ap_start) & (ap_const_logic_0 == ap_reg_ready_init_3_U0_ap_ready))) begin
        ap_sig_start_in_init_3_U0_ap_start = ap_const_logic_1;
    end else begin
        ap_sig_start_in_init_3_U0_ap_start = ap_const_logic_0;
    end
end

/// ap_sig_start_in_init_4_U0_ap_start assign process. ///
always @ (ap_start or ap_reg_ready_init_4_U0_ap_ready)
begin
    if (((ap_const_logic_1 == ap_start) & (ap_const_logic_0 == ap_reg_ready_init_4_U0_ap_ready))) begin
        ap_sig_start_in_init_4_U0_ap_start = ap_const_logic_1;
    end else begin
        ap_sig_start_in_init_4_U0_ap_start = ap_const_logic_0;
    end
end

/// ap_sig_start_in_init_5_U0_ap_start assign process. ///
always @ (ap_start or ap_reg_ready_init_5_U0_ap_ready)
begin
    if (((ap_const_logic_1 == ap_start) & (ap_const_logic_0 == ap_reg_ready_init_5_U0_ap_ready))) begin
        ap_sig_start_in_init_5_U0_ap_start = ap_const_logic_1;
    end else begin
        ap_sig_start_in_init_5_U0_ap_start = ap_const_logic_0;
    end
end

/// ap_sig_start_in_init_U0_ap_start assign process. ///
always @ (ap_start or ap_reg_ready_init_U0_ap_ready)
begin
    if (((ap_const_logic_0 == ap_reg_ready_init_U0_ap_ready) & (ap_const_logic_1 == ap_start))) begin
        ap_sig_start_in_init_U0_ap_start = ap_const_logic_1;
    end else begin
        ap_sig_start_in_init_U0_ap_start = ap_const_logic_0;
    end
end

/// ap_sig_top_allready assign process. ///
always @ (ap_sig_ready_init_U0_ap_ready or ap_sig_ready_init_1_U0_ap_ready or ap_sig_ready_init_2_U0_ap_ready or ap_sig_ready_init_3_U0_ap_ready or ap_sig_ready_init_4_U0_ap_ready or ap_sig_ready_init_5_U0_ap_ready or ap_sig_ready_AXIvideo2Mat_32_1080_1920_16_U0_ap_ready)
begin
    if (((ap_const_logic_1 == ap_sig_ready_init_U0_ap_ready) & (ap_const_logic_1 == ap_sig_ready_init_1_U0_ap_ready) & (ap_const_logic_1 == ap_sig_ready_init_2_U0_ap_ready) & (ap_const_logic_1 == ap_sig_ready_init_3_U0_ap_ready) & (ap_const_logic_1 == ap_sig_ready_init_4_U0_ap_ready) & (ap_const_logic_1 == ap_sig_ready_init_5_U0_ap_ready) & (ap_const_logic_1 == ap_sig_ready_AXIvideo2Mat_32_1080_1920_16_U0_ap_ready))) begin
        ap_sig_top_allready = ap_const_logic_1;
    end else begin
        ap_sig_top_allready = ap_const_logic_0;
    end
end

/// init_1_U0_ap_continue assign process. ///
always @ (ap_sig_ready_img_1_rows_V_full_n or ap_sig_ready_img_1_cols_V_full_n)
begin
    if (((ap_const_logic_1 == ap_sig_ready_img_1_rows_V_full_n) & (ap_const_logic_1 == ap_sig_ready_img_1_cols_V_full_n))) begin
        init_1_U0_ap_continue = ap_const_logic_1;
    end else begin
        init_1_U0_ap_continue = ap_const_logic_0;
    end
end

/// init_2_U0_ap_continue assign process. ///
always @ (ap_sig_ready_img_2_rows_V_full_n or ap_sig_ready_img_2_rows_V_channel_full_n or ap_sig_ready_img_2_cols_V_full_n or ap_sig_ready_img_2_cols_V_channel_full_n)
begin
    if (((ap_const_logic_1 == ap_sig_ready_img_2_rows_V_full_n) & (ap_const_logic_1 == ap_sig_ready_img_2_rows_V_channel_full_n) & (ap_const_logic_1 == ap_sig_ready_img_2_cols_V_full_n) & (ap_const_logic_1 == ap_sig_ready_img_2_cols_V_channel_full_n))) begin
        init_2_U0_ap_continue = ap_const_logic_1;
    end else begin
        init_2_U0_ap_continue = ap_const_logic_0;
    end
end

/// init_3_U0_ap_continue assign process. ///
always @ (ap_sig_ready_img_3_rows_V_full_n or ap_sig_ready_img_3_rows_V_channel_full_n or ap_sig_ready_img_3_cols_V_full_n or ap_sig_ready_img_3_cols_V_channel_full_n)
begin
    if (((ap_const_logic_1 == ap_sig_ready_img_3_rows_V_full_n) & (ap_const_logic_1 == ap_sig_ready_img_3_rows_V_channel_full_n) & (ap_const_logic_1 == ap_sig_ready_img_3_cols_V_full_n) & (ap_const_logic_1 == ap_sig_ready_img_3_cols_V_channel_full_n))) begin
        init_3_U0_ap_continue = ap_const_logic_1;
    end else begin
        init_3_U0_ap_continue = ap_const_logic_0;
    end
end

/// init_4_U0_ap_continue assign process. ///
always @ (ap_sig_ready_img_4_rows_V_full_n or ap_sig_ready_img_4_cols_V_full_n)
begin
    if (((ap_const_logic_1 == ap_sig_ready_img_4_rows_V_full_n) & (ap_const_logic_1 == ap_sig_ready_img_4_cols_V_full_n))) begin
        init_4_U0_ap_continue = ap_const_logic_1;
    end else begin
        init_4_U0_ap_continue = ap_const_logic_0;
    end
end

/// init_5_U0_ap_continue assign process. ///
always @ (ap_sig_ready_img_5_rows_V_full_n or ap_sig_ready_img_5_cols_V_full_n)
begin
    if (((ap_const_logic_1 == ap_sig_ready_img_5_rows_V_full_n) & (ap_const_logic_1 == ap_sig_ready_img_5_cols_V_full_n))) begin
        init_5_U0_ap_continue = ap_const_logic_1;
    end else begin
        init_5_U0_ap_continue = ap_const_logic_0;
    end
end

/// init_U0_ap_continue assign process. ///
always @ (ap_sig_ready_img_0_rows_V_full_n or ap_sig_ready_img_0_rows_V_channel_full_n or ap_sig_ready_img_0_cols_V_full_n or ap_sig_ready_img_0_cols_V_channel_full_n)
begin
    if (((ap_const_logic_1 == ap_sig_ready_img_0_rows_V_full_n) & (ap_const_logic_1 == ap_sig_ready_img_0_rows_V_channel_full_n) & (ap_const_logic_1 == ap_sig_ready_img_0_cols_V_full_n) & (ap_const_logic_1 == ap_sig_ready_img_0_cols_V_channel_full_n))) begin
        init_U0_ap_continue = ap_const_logic_1;
    end else begin
        init_U0_ap_continue = ap_const_logic_0;
    end
end
assign AXIvideo2Mat_32_1080_1920_16_U0_AXI_video_strm_V_data_V_dout = input_V_data_V_dout;
assign AXIvideo2Mat_32_1080_1920_16_U0_AXI_video_strm_V_data_V_empty_n = input_V_data_V_empty_n;
assign AXIvideo2Mat_32_1080_1920_16_U0_AXI_video_strm_V_dest_V_dout = input_V_dest_V_dout;
assign AXIvideo2Mat_32_1080_1920_16_U0_AXI_video_strm_V_dest_V_empty_n = input_V_dest_V_empty_n;
assign AXIvideo2Mat_32_1080_1920_16_U0_AXI_video_strm_V_id_V_dout = input_V_id_V_dout;
assign AXIvideo2Mat_32_1080_1920_16_U0_AXI_video_strm_V_id_V_empty_n = input_V_id_V_empty_n;
assign AXIvideo2Mat_32_1080_1920_16_U0_AXI_video_strm_V_keep_V_dout = input_V_keep_V_dout;
assign AXIvideo2Mat_32_1080_1920_16_U0_AXI_video_strm_V_keep_V_empty_n = input_V_keep_V_empty_n;
assign AXIvideo2Mat_32_1080_1920_16_U0_AXI_video_strm_V_last_V_dout = input_V_last_V_dout;
assign AXIvideo2Mat_32_1080_1920_16_U0_AXI_video_strm_V_last_V_empty_n = input_V_last_V_empty_n;
assign AXIvideo2Mat_32_1080_1920_16_U0_AXI_video_strm_V_strb_V_dout = input_V_strb_V_dout;
assign AXIvideo2Mat_32_1080_1920_16_U0_AXI_video_strm_V_strb_V_empty_n = input_V_strb_V_empty_n;
assign AXIvideo2Mat_32_1080_1920_16_U0_AXI_video_strm_V_user_V_dout = input_V_user_V_dout;
assign AXIvideo2Mat_32_1080_1920_16_U0_AXI_video_strm_V_user_V_empty_n = input_V_user_V_empty_n;
assign AXIvideo2Mat_32_1080_1920_16_U0_ap_continue = ap_const_logic_1;
assign AXIvideo2Mat_32_1080_1920_16_U0_ap_start = (img_0_rows_V_empty_n & img_0_cols_V_empty_n & ap_sig_start_in_AXIvideo2Mat_32_1080_1920_16_U0_ap_start);
assign AXIvideo2Mat_32_1080_1920_16_U0_img_cols_V_read = img_0_cols_V_dout;
assign AXIvideo2Mat_32_1080_1920_16_U0_img_data_stream_0_V_full_n = img_0_data_stream_0_V_full_n;
assign AXIvideo2Mat_32_1080_1920_16_U0_img_data_stream_1_V_full_n = img_0_data_stream_1_V_full_n;
assign AXIvideo2Mat_32_1080_1920_16_U0_img_data_stream_2_V_full_n = img_0_data_stream_2_V_full_n;
assign AXIvideo2Mat_32_1080_1920_16_U0_img_rows_V_read = img_0_rows_V_dout;
assign Dilate_16_16_1080_1920_U0_ap_continue = ap_const_logic_1;
assign Dilate_16_16_1080_1920_U0_ap_start = (img_4_rows_V_empty_n & img_4_cols_V_empty_n);
assign Dilate_16_16_1080_1920_U0_p_dst_data_stream_0_V_full_n = img_5_data_stream_0_V_full_n;
assign Dilate_16_16_1080_1920_U0_p_dst_data_stream_1_V_full_n = img_5_data_stream_1_V_full_n;
assign Dilate_16_16_1080_1920_U0_p_dst_data_stream_2_V_full_n = img_5_data_stream_2_V_full_n;
assign Dilate_16_16_1080_1920_U0_p_src_cols_V_read = img_4_cols_V_dout;
assign Dilate_16_16_1080_1920_U0_p_src_data_stream_0_V_dout = img_4_data_stream_0_V_dout;
assign Dilate_16_16_1080_1920_U0_p_src_data_stream_0_V_empty_n = img_4_data_stream_0_V_empty_n;
assign Dilate_16_16_1080_1920_U0_p_src_data_stream_1_V_dout = img_4_data_stream_1_V_dout;
assign Dilate_16_16_1080_1920_U0_p_src_data_stream_1_V_empty_n = img_4_data_stream_1_V_empty_n;
assign Dilate_16_16_1080_1920_U0_p_src_data_stream_2_V_dout = img_4_data_stream_2_V_dout;
assign Dilate_16_16_1080_1920_U0_p_src_data_stream_2_V_empty_n = img_4_data_stream_2_V_empty_n;
assign Dilate_16_16_1080_1920_U0_p_src_rows_V_read = img_4_rows_V_dout;
assign Erode_16_16_1080_1920_U0_ap_continue = ap_const_logic_1;
assign Erode_16_16_1080_1920_U0_ap_start = (img_3_rows_V_channel_empty_n & img_3_cols_V_channel_empty_n);
assign Erode_16_16_1080_1920_U0_p_dst_data_stream_0_V_full_n = img_4_data_stream_0_V_full_n;
assign Erode_16_16_1080_1920_U0_p_dst_data_stream_1_V_full_n = img_4_data_stream_1_V_full_n;
assign Erode_16_16_1080_1920_U0_p_dst_data_stream_2_V_full_n = img_4_data_stream_2_V_full_n;
assign Erode_16_16_1080_1920_U0_p_src_cols_V_read = img_3_cols_V_channel_dout;
assign Erode_16_16_1080_1920_U0_p_src_data_stream_0_V_dout = img_3_data_stream_0_V_dout;
assign Erode_16_16_1080_1920_U0_p_src_data_stream_0_V_empty_n = img_3_data_stream_0_V_empty_n;
assign Erode_16_16_1080_1920_U0_p_src_data_stream_1_V_dout = img_3_data_stream_1_V_dout;
assign Erode_16_16_1080_1920_U0_p_src_data_stream_1_V_empty_n = img_3_data_stream_1_V_empty_n;
assign Erode_16_16_1080_1920_U0_p_src_data_stream_2_V_dout = img_3_data_stream_2_V_dout;
assign Erode_16_16_1080_1920_U0_p_src_data_stream_2_V_empty_n = img_3_data_stream_2_V_empty_n;
assign Erode_16_16_1080_1920_U0_p_src_rows_V_read = img_3_rows_V_channel_dout;
assign Mat2AXIvideo_32_1080_1920_16_U0_AXI_video_strm_V_data_V_full_n = output_V_data_V_full_n;
assign Mat2AXIvideo_32_1080_1920_16_U0_AXI_video_strm_V_dest_V_full_n = output_V_dest_V_full_n;
assign Mat2AXIvideo_32_1080_1920_16_U0_AXI_video_strm_V_id_V_full_n = output_V_id_V_full_n;
assign Mat2AXIvideo_32_1080_1920_16_U0_AXI_video_strm_V_keep_V_full_n = output_V_keep_V_full_n;
assign Mat2AXIvideo_32_1080_1920_16_U0_AXI_video_strm_V_last_V_full_n = output_V_last_V_full_n;
assign Mat2AXIvideo_32_1080_1920_16_U0_AXI_video_strm_V_strb_V_full_n = output_V_strb_V_full_n;
assign Mat2AXIvideo_32_1080_1920_16_U0_AXI_video_strm_V_user_V_full_n = output_V_user_V_full_n;
assign Mat2AXIvideo_32_1080_1920_16_U0_ap_continue = ap_sig_hs_continue;
assign Mat2AXIvideo_32_1080_1920_16_U0_ap_start = (img_5_rows_V_empty_n & img_5_cols_V_empty_n);
assign Mat2AXIvideo_32_1080_1920_16_U0_img_cols_V_read = img_5_cols_V_dout;
assign Mat2AXIvideo_32_1080_1920_16_U0_img_data_stream_0_V_dout = img_5_data_stream_0_V_dout;
assign Mat2AXIvideo_32_1080_1920_16_U0_img_data_stream_0_V_empty_n = img_5_data_stream_0_V_empty_n;
assign Mat2AXIvideo_32_1080_1920_16_U0_img_data_stream_1_V_dout = img_5_data_stream_1_V_dout;
assign Mat2AXIvideo_32_1080_1920_16_U0_img_data_stream_1_V_empty_n = img_5_data_stream_1_V_empty_n;
assign Mat2AXIvideo_32_1080_1920_16_U0_img_data_stream_2_V_dout = img_5_data_stream_2_V_dout;
assign Mat2AXIvideo_32_1080_1920_16_U0_img_data_stream_2_V_empty_n = img_5_data_stream_2_V_empty_n;
assign Mat2AXIvideo_32_1080_1920_16_U0_img_rows_V_read = img_5_rows_V_dout;
assign Scale_1080_1920_16_16_int_U0_ap_continue = ap_const_logic_1;
assign Scale_1080_1920_16_16_int_U0_ap_start = (img_2_rows_V_channel_empty_n & img_2_cols_V_channel_empty_n & img_3_rows_V_empty_n & img_3_cols_V_empty_n);
assign Scale_1080_1920_16_16_int_U0_dst_cols_V_read = img_3_cols_V_dout;
assign Scale_1080_1920_16_16_int_U0_dst_data_stream_0_V_full_n = img_3_data_stream_0_V_full_n;
assign Scale_1080_1920_16_16_int_U0_dst_data_stream_1_V_full_n = img_3_data_stream_1_V_full_n;
assign Scale_1080_1920_16_16_int_U0_dst_data_stream_2_V_full_n = img_3_data_stream_2_V_full_n;
assign Scale_1080_1920_16_16_int_U0_dst_rows_V_read = img_3_rows_V_dout;
assign Scale_1080_1920_16_16_int_U0_src_cols_V_read = img_2_cols_V_channel_dout;
assign Scale_1080_1920_16_16_int_U0_src_data_stream_0_V_dout = img_2_data_stream_0_V_dout;
assign Scale_1080_1920_16_16_int_U0_src_data_stream_0_V_empty_n = img_2_data_stream_0_V_empty_n;
assign Scale_1080_1920_16_16_int_U0_src_data_stream_1_V_dout = img_2_data_stream_1_V_dout;
assign Scale_1080_1920_16_16_int_U0_src_data_stream_1_V_empty_n = img_2_data_stream_1_V_empty_n;
assign Scale_1080_1920_16_16_int_U0_src_data_stream_2_V_dout = img_2_data_stream_2_V_dout;
assign Scale_1080_1920_16_16_int_U0_src_data_stream_2_V_empty_n = img_2_data_stream_2_V_empty_n;
assign Scale_1080_1920_16_16_int_U0_src_rows_V_read = img_2_rows_V_channel_dout;
assign Sobel_1_0_3_16_16_1080_1920_1080_1920_U0_ap_continue = ap_const_logic_1;
assign Sobel_1_0_3_16_16_1080_1920_1080_1920_U0_ap_start = (img_0_rows_V_channel_empty_n & img_0_cols_V_channel_empty_n);
assign Sobel_1_0_3_16_16_1080_1920_1080_1920_U0_p_dst_data_stream_0_V_full_n = img_1_data_stream_0_V_full_n;
assign Sobel_1_0_3_16_16_1080_1920_1080_1920_U0_p_dst_data_stream_1_V_full_n = img_1_data_stream_1_V_full_n;
assign Sobel_1_0_3_16_16_1080_1920_1080_1920_U0_p_dst_data_stream_2_V_full_n = img_1_data_stream_2_V_full_n;
assign Sobel_1_0_3_16_16_1080_1920_1080_1920_U0_p_src_cols_V_read = img_0_cols_V_channel_dout;
assign Sobel_1_0_3_16_16_1080_1920_1080_1920_U0_p_src_data_stream_0_V_dout = img_0_data_stream_0_V_dout;
assign Sobel_1_0_3_16_16_1080_1920_1080_1920_U0_p_src_data_stream_0_V_empty_n = img_0_data_stream_0_V_empty_n;
assign Sobel_1_0_3_16_16_1080_1920_1080_1920_U0_p_src_data_stream_1_V_dout = img_0_data_stream_1_V_dout;
assign Sobel_1_0_3_16_16_1080_1920_1080_1920_U0_p_src_data_stream_1_V_empty_n = img_0_data_stream_1_V_empty_n;
assign Sobel_1_0_3_16_16_1080_1920_1080_1920_U0_p_src_data_stream_2_V_dout = img_0_data_stream_2_V_dout;
assign Sobel_1_0_3_16_16_1080_1920_1080_1920_U0_p_src_data_stream_2_V_empty_n = img_0_data_stream_2_V_empty_n;
assign Sobel_1_0_3_16_16_1080_1920_1080_1920_U0_p_src_rows_V_read = img_0_rows_V_channel_dout;
assign SubS_1080_1920_16_unsigned_char_16_U0_ap_continue = ap_const_logic_1;
assign SubS_1080_1920_16_unsigned_char_16_U0_ap_start = (img_1_rows_V_empty_n & img_1_cols_V_empty_n & img_2_rows_V_empty_n & img_2_cols_V_empty_n);
assign SubS_1080_1920_16_unsigned_char_16_U0_dst_cols_V_read = img_2_cols_V_dout;
assign SubS_1080_1920_16_unsigned_char_16_U0_dst_data_stream_0_V_full_n = img_2_data_stream_0_V_full_n;
assign SubS_1080_1920_16_unsigned_char_16_U0_dst_data_stream_1_V_full_n = img_2_data_stream_1_V_full_n;
assign SubS_1080_1920_16_unsigned_char_16_U0_dst_data_stream_2_V_full_n = img_2_data_stream_2_V_full_n;
assign SubS_1080_1920_16_unsigned_char_16_U0_dst_rows_V_read = img_2_rows_V_dout;
assign SubS_1080_1920_16_unsigned_char_16_U0_src_cols_V_read = img_1_cols_V_dout;
assign SubS_1080_1920_16_unsigned_char_16_U0_src_data_stream_0_V_dout = img_1_data_stream_0_V_dout;
assign SubS_1080_1920_16_unsigned_char_16_U0_src_data_stream_0_V_empty_n = img_1_data_stream_0_V_empty_n;
assign SubS_1080_1920_16_unsigned_char_16_U0_src_data_stream_1_V_dout = img_1_data_stream_1_V_dout;
assign SubS_1080_1920_16_unsigned_char_16_U0_src_data_stream_1_V_empty_n = img_1_data_stream_1_V_empty_n;
assign SubS_1080_1920_16_unsigned_char_16_U0_src_data_stream_2_V_dout = img_1_data_stream_2_V_dout;
assign SubS_1080_1920_16_unsigned_char_16_U0_src_data_stream_2_V_empty_n = img_1_data_stream_2_V_empty_n;
assign SubS_1080_1920_16_unsigned_char_16_U0_src_rows_V_read = img_1_rows_V_dout;
assign ap_done = ap_sig_hs_done;
assign ap_ready = ap_sig_top_allready;
assign ap_sig_hs_continue = ap_const_logic_1;
assign img_0_cols_V_ap_dummy_ce = ap_const_logic_1;
assign img_0_cols_V_channel_ap_dummy_ce = ap_const_logic_1;
assign img_0_cols_V_channel_din = init_U0_ap_return_3;
assign img_0_cols_V_channel_read = Sobel_1_0_3_16_16_1080_1920_1080_1920_U0_ap_ready;
assign img_0_cols_V_channel_write = ap_chn_write_init_U0_img_0_cols_V_channel;
assign img_0_cols_V_din = init_U0_ap_return_2;
assign img_0_cols_V_read = AXIvideo2Mat_32_1080_1920_16_U0_ap_ready;
assign img_0_cols_V_write = ap_chn_write_init_U0_img_0_cols_V;
assign img_0_data_stream_0_V_ap_dummy_ce = ap_const_logic_1;
assign img_0_data_stream_0_V_din = AXIvideo2Mat_32_1080_1920_16_U0_img_data_stream_0_V_din;
assign img_0_data_stream_0_V_read = Sobel_1_0_3_16_16_1080_1920_1080_1920_U0_p_src_data_stream_0_V_read;
assign img_0_data_stream_0_V_write = AXIvideo2Mat_32_1080_1920_16_U0_img_data_stream_0_V_write;
assign img_0_data_stream_1_V_ap_dummy_ce = ap_const_logic_1;
assign img_0_data_stream_1_V_din = AXIvideo2Mat_32_1080_1920_16_U0_img_data_stream_1_V_din;
assign img_0_data_stream_1_V_read = Sobel_1_0_3_16_16_1080_1920_1080_1920_U0_p_src_data_stream_1_V_read;
assign img_0_data_stream_1_V_write = AXIvideo2Mat_32_1080_1920_16_U0_img_data_stream_1_V_write;
assign img_0_data_stream_2_V_ap_dummy_ce = ap_const_logic_1;
assign img_0_data_stream_2_V_din = AXIvideo2Mat_32_1080_1920_16_U0_img_data_stream_2_V_din;
assign img_0_data_stream_2_V_read = Sobel_1_0_3_16_16_1080_1920_1080_1920_U0_p_src_data_stream_2_V_read;
assign img_0_data_stream_2_V_write = AXIvideo2Mat_32_1080_1920_16_U0_img_data_stream_2_V_write;
assign img_0_rows_V_ap_dummy_ce = ap_const_logic_1;
assign img_0_rows_V_channel_ap_dummy_ce = ap_const_logic_1;
assign img_0_rows_V_channel_din = init_U0_ap_return_1;
assign img_0_rows_V_channel_read = Sobel_1_0_3_16_16_1080_1920_1080_1920_U0_ap_ready;
assign img_0_rows_V_channel_write = ap_chn_write_init_U0_img_0_rows_V_channel;
assign img_0_rows_V_din = init_U0_ap_return_0;
assign img_0_rows_V_read = AXIvideo2Mat_32_1080_1920_16_U0_ap_ready;
assign img_0_rows_V_write = ap_chn_write_init_U0_img_0_rows_V;
assign img_1_cols_V_ap_dummy_ce = ap_const_logic_1;
assign img_1_cols_V_din = init_1_U0_ap_return_1;
assign img_1_cols_V_read = SubS_1080_1920_16_unsigned_char_16_U0_ap_ready;
assign img_1_cols_V_write = ap_chn_write_init_1_U0_img_1_cols_V;
assign img_1_data_stream_0_V_ap_dummy_ce = ap_const_logic_1;
assign img_1_data_stream_0_V_din = Sobel_1_0_3_16_16_1080_1920_1080_1920_U0_p_dst_data_stream_0_V_din;
assign img_1_data_stream_0_V_read = SubS_1080_1920_16_unsigned_char_16_U0_src_data_stream_0_V_read;
assign img_1_data_stream_0_V_write = Sobel_1_0_3_16_16_1080_1920_1080_1920_U0_p_dst_data_stream_0_V_write;
assign img_1_data_stream_1_V_ap_dummy_ce = ap_const_logic_1;
assign img_1_data_stream_1_V_din = Sobel_1_0_3_16_16_1080_1920_1080_1920_U0_p_dst_data_stream_1_V_din;
assign img_1_data_stream_1_V_read = SubS_1080_1920_16_unsigned_char_16_U0_src_data_stream_1_V_read;
assign img_1_data_stream_1_V_write = Sobel_1_0_3_16_16_1080_1920_1080_1920_U0_p_dst_data_stream_1_V_write;
assign img_1_data_stream_2_V_ap_dummy_ce = ap_const_logic_1;
assign img_1_data_stream_2_V_din = Sobel_1_0_3_16_16_1080_1920_1080_1920_U0_p_dst_data_stream_2_V_din;
assign img_1_data_stream_2_V_read = SubS_1080_1920_16_unsigned_char_16_U0_src_data_stream_2_V_read;
assign img_1_data_stream_2_V_write = Sobel_1_0_3_16_16_1080_1920_1080_1920_U0_p_dst_data_stream_2_V_write;
assign img_1_rows_V_ap_dummy_ce = ap_const_logic_1;
assign img_1_rows_V_din = init_1_U0_ap_return_0;
assign img_1_rows_V_read = SubS_1080_1920_16_unsigned_char_16_U0_ap_ready;
assign img_1_rows_V_write = ap_chn_write_init_1_U0_img_1_rows_V;
assign img_2_cols_V_ap_dummy_ce = ap_const_logic_1;
assign img_2_cols_V_channel_ap_dummy_ce = ap_const_logic_1;
assign img_2_cols_V_channel_din = init_2_U0_ap_return_3;
assign img_2_cols_V_channel_read = Scale_1080_1920_16_16_int_U0_ap_ready;
assign img_2_cols_V_channel_write = ap_chn_write_init_2_U0_img_2_cols_V_channel;
assign img_2_cols_V_din = init_2_U0_ap_return_2;
assign img_2_cols_V_read = SubS_1080_1920_16_unsigned_char_16_U0_ap_ready;
assign img_2_cols_V_write = ap_chn_write_init_2_U0_img_2_cols_V;
assign img_2_data_stream_0_V_ap_dummy_ce = ap_const_logic_1;
assign img_2_data_stream_0_V_din = SubS_1080_1920_16_unsigned_char_16_U0_dst_data_stream_0_V_din;
assign img_2_data_stream_0_V_read = Scale_1080_1920_16_16_int_U0_src_data_stream_0_V_read;
assign img_2_data_stream_0_V_write = SubS_1080_1920_16_unsigned_char_16_U0_dst_data_stream_0_V_write;
assign img_2_data_stream_1_V_ap_dummy_ce = ap_const_logic_1;
assign img_2_data_stream_1_V_din = SubS_1080_1920_16_unsigned_char_16_U0_dst_data_stream_1_V_din;
assign img_2_data_stream_1_V_read = Scale_1080_1920_16_16_int_U0_src_data_stream_1_V_read;
assign img_2_data_stream_1_V_write = SubS_1080_1920_16_unsigned_char_16_U0_dst_data_stream_1_V_write;
assign img_2_data_stream_2_V_ap_dummy_ce = ap_const_logic_1;
assign img_2_data_stream_2_V_din = SubS_1080_1920_16_unsigned_char_16_U0_dst_data_stream_2_V_din;
assign img_2_data_stream_2_V_read = Scale_1080_1920_16_16_int_U0_src_data_stream_2_V_read;
assign img_2_data_stream_2_V_write = SubS_1080_1920_16_unsigned_char_16_U0_dst_data_stream_2_V_write;
assign img_2_rows_V_ap_dummy_ce = ap_const_logic_1;
assign img_2_rows_V_channel_ap_dummy_ce = ap_const_logic_1;
assign img_2_rows_V_channel_din = init_2_U0_ap_return_1;
assign img_2_rows_V_channel_read = Scale_1080_1920_16_16_int_U0_ap_ready;
assign img_2_rows_V_channel_write = ap_chn_write_init_2_U0_img_2_rows_V_channel;
assign img_2_rows_V_din = init_2_U0_ap_return_0;
assign img_2_rows_V_read = SubS_1080_1920_16_unsigned_char_16_U0_ap_ready;
assign img_2_rows_V_write = ap_chn_write_init_2_U0_img_2_rows_V;
assign img_3_cols_V_ap_dummy_ce = ap_const_logic_1;
assign img_3_cols_V_channel_ap_dummy_ce = ap_const_logic_1;
assign img_3_cols_V_channel_din = init_3_U0_ap_return_3;
assign img_3_cols_V_channel_read = Erode_16_16_1080_1920_U0_ap_ready;
assign img_3_cols_V_channel_write = ap_chn_write_init_3_U0_img_3_cols_V_channel;
assign img_3_cols_V_din = init_3_U0_ap_return_2;
assign img_3_cols_V_read = Scale_1080_1920_16_16_int_U0_ap_ready;
assign img_3_cols_V_write = ap_chn_write_init_3_U0_img_3_cols_V;
assign img_3_data_stream_0_V_ap_dummy_ce = ap_const_logic_1;
assign img_3_data_stream_0_V_din = Scale_1080_1920_16_16_int_U0_dst_data_stream_0_V_din;
assign img_3_data_stream_0_V_read = Erode_16_16_1080_1920_U0_p_src_data_stream_0_V_read;
assign img_3_data_stream_0_V_write = Scale_1080_1920_16_16_int_U0_dst_data_stream_0_V_write;
assign img_3_data_stream_1_V_ap_dummy_ce = ap_const_logic_1;
assign img_3_data_stream_1_V_din = Scale_1080_1920_16_16_int_U0_dst_data_stream_1_V_din;
assign img_3_data_stream_1_V_read = Erode_16_16_1080_1920_U0_p_src_data_stream_1_V_read;
assign img_3_data_stream_1_V_write = Scale_1080_1920_16_16_int_U0_dst_data_stream_1_V_write;
assign img_3_data_stream_2_V_ap_dummy_ce = ap_const_logic_1;
assign img_3_data_stream_2_V_din = Scale_1080_1920_16_16_int_U0_dst_data_stream_2_V_din;
assign img_3_data_stream_2_V_read = Erode_16_16_1080_1920_U0_p_src_data_stream_2_V_read;
assign img_3_data_stream_2_V_write = Scale_1080_1920_16_16_int_U0_dst_data_stream_2_V_write;
assign img_3_rows_V_ap_dummy_ce = ap_const_logic_1;
assign img_3_rows_V_channel_ap_dummy_ce = ap_const_logic_1;
assign img_3_rows_V_channel_din = init_3_U0_ap_return_1;
assign img_3_rows_V_channel_read = Erode_16_16_1080_1920_U0_ap_ready;
assign img_3_rows_V_channel_write = ap_chn_write_init_3_U0_img_3_rows_V_channel;
assign img_3_rows_V_din = init_3_U0_ap_return_0;
assign img_3_rows_V_read = Scale_1080_1920_16_16_int_U0_ap_ready;
assign img_3_rows_V_write = ap_chn_write_init_3_U0_img_3_rows_V;
assign img_4_cols_V_ap_dummy_ce = ap_const_logic_1;
assign img_4_cols_V_din = init_4_U0_ap_return_1;
assign img_4_cols_V_read = Dilate_16_16_1080_1920_U0_ap_ready;
assign img_4_cols_V_write = ap_chn_write_init_4_U0_img_4_cols_V;
assign img_4_data_stream_0_V_ap_dummy_ce = ap_const_logic_1;
assign img_4_data_stream_0_V_din = Erode_16_16_1080_1920_U0_p_dst_data_stream_0_V_din;
assign img_4_data_stream_0_V_read = Dilate_16_16_1080_1920_U0_p_src_data_stream_0_V_read;
assign img_4_data_stream_0_V_write = Erode_16_16_1080_1920_U0_p_dst_data_stream_0_V_write;
assign img_4_data_stream_1_V_ap_dummy_ce = ap_const_logic_1;
assign img_4_data_stream_1_V_din = Erode_16_16_1080_1920_U0_p_dst_data_stream_1_V_din;
assign img_4_data_stream_1_V_read = Dilate_16_16_1080_1920_U0_p_src_data_stream_1_V_read;
assign img_4_data_stream_1_V_write = Erode_16_16_1080_1920_U0_p_dst_data_stream_1_V_write;
assign img_4_data_stream_2_V_ap_dummy_ce = ap_const_logic_1;
assign img_4_data_stream_2_V_din = Erode_16_16_1080_1920_U0_p_dst_data_stream_2_V_din;
assign img_4_data_stream_2_V_read = Dilate_16_16_1080_1920_U0_p_src_data_stream_2_V_read;
assign img_4_data_stream_2_V_write = Erode_16_16_1080_1920_U0_p_dst_data_stream_2_V_write;
assign img_4_rows_V_ap_dummy_ce = ap_const_logic_1;
assign img_4_rows_V_din = init_4_U0_ap_return_0;
assign img_4_rows_V_read = Dilate_16_16_1080_1920_U0_ap_ready;
assign img_4_rows_V_write = ap_chn_write_init_4_U0_img_4_rows_V;
assign img_5_cols_V_ap_dummy_ce = ap_const_logic_1;
assign img_5_cols_V_din = init_5_U0_ap_return_1;
assign img_5_cols_V_read = Mat2AXIvideo_32_1080_1920_16_U0_ap_ready;
assign img_5_cols_V_write = ap_chn_write_init_5_U0_img_5_cols_V;
assign img_5_data_stream_0_V_ap_dummy_ce = ap_const_logic_1;
assign img_5_data_stream_0_V_din = Dilate_16_16_1080_1920_U0_p_dst_data_stream_0_V_din;
assign img_5_data_stream_0_V_read = Mat2AXIvideo_32_1080_1920_16_U0_img_data_stream_0_V_read;
assign img_5_data_stream_0_V_write = Dilate_16_16_1080_1920_U0_p_dst_data_stream_0_V_write;
assign img_5_data_stream_1_V_ap_dummy_ce = ap_const_logic_1;
assign img_5_data_stream_1_V_din = Dilate_16_16_1080_1920_U0_p_dst_data_stream_1_V_din;
assign img_5_data_stream_1_V_read = Mat2AXIvideo_32_1080_1920_16_U0_img_data_stream_1_V_read;
assign img_5_data_stream_1_V_write = Dilate_16_16_1080_1920_U0_p_dst_data_stream_1_V_write;
assign img_5_data_stream_2_V_ap_dummy_ce = ap_const_logic_1;
assign img_5_data_stream_2_V_din = Dilate_16_16_1080_1920_U0_p_dst_data_stream_2_V_din;
assign img_5_data_stream_2_V_read = Mat2AXIvideo_32_1080_1920_16_U0_img_data_stream_2_V_read;
assign img_5_data_stream_2_V_write = Dilate_16_16_1080_1920_U0_p_dst_data_stream_2_V_write;
assign img_5_rows_V_ap_dummy_ce = ap_const_logic_1;
assign img_5_rows_V_din = init_5_U0_ap_return_0;
assign img_5_rows_V_read = Mat2AXIvideo_32_1080_1920_16_U0_ap_ready;
assign img_5_rows_V_write = ap_chn_write_init_5_U0_img_5_rows_V;
assign init_1_U0_ap_start = ap_sig_start_in_init_1_U0_ap_start;
assign init_1_U0_p_cols = cols;
assign init_1_U0_p_rows = rows;
assign init_2_U0_ap_start = ap_sig_start_in_init_2_U0_ap_start;
assign init_2_U0_p_cols = cols;
assign init_2_U0_p_rows = rows;
assign init_3_U0_ap_start = ap_sig_start_in_init_3_U0_ap_start;
assign init_3_U0_p_cols = cols;
assign init_3_U0_p_rows = rows;
assign init_4_U0_ap_start = ap_sig_start_in_init_4_U0_ap_start;
assign init_4_U0_p_cols = cols;
assign init_4_U0_p_rows = rows;
assign init_5_U0_ap_start = ap_sig_start_in_init_5_U0_ap_start;
assign init_5_U0_p_cols = cols;
assign init_5_U0_p_rows = rows;
assign init_U0_ap_start = ap_sig_start_in_init_U0_ap_start;
assign init_U0_p_cols = cols;
assign init_U0_p_rows = rows;
assign input_V_data_V_read = AXIvideo2Mat_32_1080_1920_16_U0_AXI_video_strm_V_data_V_read;
assign input_V_dest_V_read = AXIvideo2Mat_32_1080_1920_16_U0_AXI_video_strm_V_dest_V_read;
assign input_V_id_V_read = AXIvideo2Mat_32_1080_1920_16_U0_AXI_video_strm_V_id_V_read;
assign input_V_keep_V_read = AXIvideo2Mat_32_1080_1920_16_U0_AXI_video_strm_V_keep_V_read;
assign input_V_last_V_read = AXIvideo2Mat_32_1080_1920_16_U0_AXI_video_strm_V_last_V_read;
assign input_V_strb_V_read = AXIvideo2Mat_32_1080_1920_16_U0_AXI_video_strm_V_strb_V_read;
assign input_V_user_V_read = AXIvideo2Mat_32_1080_1920_16_U0_AXI_video_strm_V_user_V_read;
assign output_V_data_V_din = Mat2AXIvideo_32_1080_1920_16_U0_AXI_video_strm_V_data_V_din;
assign output_V_data_V_write = Mat2AXIvideo_32_1080_1920_16_U0_AXI_video_strm_V_data_V_write;
assign output_V_dest_V_din = Mat2AXIvideo_32_1080_1920_16_U0_AXI_video_strm_V_dest_V_din;
assign output_V_dest_V_write = Mat2AXIvideo_32_1080_1920_16_U0_AXI_video_strm_V_dest_V_write;
assign output_V_id_V_din = Mat2AXIvideo_32_1080_1920_16_U0_AXI_video_strm_V_id_V_din;
assign output_V_id_V_write = Mat2AXIvideo_32_1080_1920_16_U0_AXI_video_strm_V_id_V_write;
assign output_V_keep_V_din = Mat2AXIvideo_32_1080_1920_16_U0_AXI_video_strm_V_keep_V_din;
assign output_V_keep_V_write = Mat2AXIvideo_32_1080_1920_16_U0_AXI_video_strm_V_keep_V_write;
assign output_V_last_V_din = Mat2AXIvideo_32_1080_1920_16_U0_AXI_video_strm_V_last_V_din;
assign output_V_last_V_write = Mat2AXIvideo_32_1080_1920_16_U0_AXI_video_strm_V_last_V_write;
assign output_V_strb_V_din = Mat2AXIvideo_32_1080_1920_16_U0_AXI_video_strm_V_strb_V_din;
assign output_V_strb_V_write = Mat2AXIvideo_32_1080_1920_16_U0_AXI_video_strm_V_strb_V_write;
assign output_V_user_V_din = Mat2AXIvideo_32_1080_1920_16_U0_AXI_video_strm_V_user_V_din;
assign output_V_user_V_write = Mat2AXIvideo_32_1080_1920_16_U0_AXI_video_strm_V_user_V_write;


endmodule //image_filter

