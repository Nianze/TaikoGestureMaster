// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2013.2
// Copyright (C) 2013 Xilinx Inc. All rights reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

module getStructuringElement_unsigned_char_int_int_3_3_s (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_idle,
        ap_ready,
        ap_return_0,
        ap_return_1,
        ap_return_2,
        ap_return_3,
        ap_return_4,
        ap_return_5,
        ap_return_6,
        ap_return_7,
        ap_return_8
);

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
output   ap_idle;
output   ap_ready;
output  [7:0] ap_return_0;
output  [7:0] ap_return_1;
output  [7:0] ap_return_2;
output  [7:0] ap_return_3;
output  [7:0] ap_return_4;
output  [7:0] ap_return_5;
output  [7:0] ap_return_6;
output  [7:0] ap_return_7;
output  [7:0] ap_return_8;

reg ap_done;
reg ap_idle;
reg ap_ready;
reg[7:0] ap_return_0;
reg[7:0] ap_return_1;
reg[7:0] ap_return_2;
reg[7:0] ap_return_3;
reg[7:0] ap_return_4;
reg[7:0] ap_return_5;
reg[7:0] ap_return_6;
reg[7:0] ap_return_7;
reg[7:0] ap_return_8;
reg   [2:0] ap_CS_fsm = 3'b000;
wire   [1:0] i_1_fu_386_p2;
reg   [1:0] i_1_reg_1027;
wire   [0:0] sel_tmp_fu_392_p2;
reg   [0:0] sel_tmp_reg_1032;
wire   [0:0] exitcond1_fu_380_p2;
wire   [0:0] sel_tmp5_fu_410_p2;
reg   [0:0] sel_tmp5_reg_1043;
wire   [0:0] sel_tmp8_fu_416_p2;
reg   [0:0] sel_tmp8_reg_1051;
wire   [1:0] indvar_next1_fu_482_p2;
reg   [1:0] indvar_next1_reg_1062;
wire   [0:0] sel_tmp10_fu_522_p2;
reg   [0:0] sel_tmp10_reg_1067;
wire   [0:0] exitcond_fu_476_p2;
wire   [0:0] sel_tmp11_fu_528_p2;
reg   [0:0] sel_tmp11_reg_1072;
wire   [0:0] sel_tmp13_fu_533_p2;
reg   [0:0] sel_tmp13_reg_1078;
wire   [0:0] tmp_2_fu_544_p2;
reg   [0:0] tmp_2_reg_1083;
wire   [0:0] or_cond_fu_550_p2;
reg   [0:0] or_cond_reg_1090;
wire   [0:0] tmp4_fu_556_p2;
reg   [0:0] tmp4_reg_1097;
wire   [7:0] result_val13_5_fu_570_p3;
reg   [7:0] result_val13_5_reg_1103;
wire   [7:0] result_val26_5_fu_578_p3;
reg   [7:0] result_val26_5_reg_1108;
wire   [7:0] newSel3_fu_637_p3;
wire   [7:0] newSel5_fu_653_p3;
wire   [7:0] newSel8_fu_676_p3;
wire   [7:0] newSel11_fu_700_p3;
wire   [7:0] newSel13_fu_715_p3;
wire   [7:0] newSel16_fu_736_p3;
wire   [7:0] newSel17_fu_744_p3;
wire   [31:0] indvar_next_fu_758_p2;
reg   [31:0] indvar_next_reg_1151;
wire   [0:0] sel_tmp21_fu_808_p2;
reg   [0:0] sel_tmp21_reg_1156;
wire   [0:0] exitcond7_fu_752_p2;
wire   [0:0] sel_tmp22_fu_813_p2;
reg   [0:0] sel_tmp22_reg_1162;
wire   [0:0] sel_tmp23_fu_818_p2;
reg   [0:0] sel_tmp23_reg_1168;
wire   [0:0] sel_tmp24_fu_823_p2;
reg   [0:0] sel_tmp24_reg_1173;
wire   [0:0] or_cond3_fu_828_p2;
reg   [0:0] or_cond3_reg_1179;
wire   [0:0] or_cond8_fu_840_p2;
reg   [0:0] or_cond8_reg_1185;
wire   [0:0] or_cond10_fu_845_p2;
reg   [0:0] or_cond10_reg_1192;
wire   [7:0] result_val13_1_fu_859_p3;
reg   [7:0] result_val13_1_reg_1197;
wire   [7:0] result_val26_1_fu_867_p3;
reg   [7:0] result_val26_1_reg_1202;
wire   [7:0] newSel31_fu_883_p3;
reg   [7:0] newSel31_reg_1207;
wire   [7:0] newSel21_fu_927_p3;
wire   [7:0] newSel23_fu_942_p3;
wire   [7:0] newSel26_fu_964_p3;
wire   [7:0] newSel29_fu_986_p3;
wire   [7:0] newSel34_fu_1008_p3;
wire   [7:0] newSel35_fu_1016_p3;
reg   [7:0] result_val_0_2_write_assign_reg_26;
reg   [7:0] result_val_1_0_write_assign_reg_38;
reg   [7:0] result_val_1_1_write_assign_reg_50;
reg   [7:0] result_val_0_1_write_assign_reg_62;
reg   [7:0] result_val_1_2_write_assign_reg_74;
reg   [7:0] result_val_2_0_write_assign_reg_86;
reg   [7:0] result_val_0_0_write_assign_reg_98;
reg   [7:0] result_val_2_1_write_assign_reg_110;
reg   [7:0] result_val_2_2_write_assign_reg_122;
reg   [1:0] i_reg_134;
reg   [7:0] result_val2_6_reg_146;
reg   [7:0] result_val13_6_reg_157;
reg   [7:0] result_val14_6_reg_168;
reg   [7:0] result_val16_6_reg_179;
reg   [7:0] result_val1520_6_reg_190;
reg   [7:0] result_val26_6_reg_201;
reg   [7:0] result_val_6_reg_212;
reg   [7:0] result_val27_6_reg_223;
reg   [7:0] result_val28_6_reg_234;
reg   [1:0] j_reg_245;
reg   [7:0] result_val2_2_reg_256;
reg   [7:0] result_val13_2_reg_268;
reg   [7:0] result_val14_2_reg_280;
reg   [7:0] result_val16_2_reg_292;
reg   [7:0] result_val1520_2_reg_304;
reg   [7:0] result_val26_2_reg_316;
reg   [7:0] result_val_2_reg_328;
reg   [7:0] result_val27_2_reg_340;
reg   [7:0] result_val28_2_reg_352;
reg   [31:0] indvar_reg_364;
wire   [0:0] sel_tmp3_fu_398_p2;
wire   [0:0] sel_tmp4_fu_404_p2;
wire   [0:0] sel_tmp1_fu_488_p2;
wire   [0:0] sel_tmp9_fu_504_p2;
wire   [0:0] sel_tmp7_fu_510_p2;
wire   [1:0] tmp_1_fu_538_p2;
wire   [0:0] sel_tmp6_fu_499_p2;
wire   [0:0] sel_tmp2_fu_494_p2;
wire   [0:0] tmp1_fu_516_p2;
wire   [7:0] sel_tmp14_fu_562_p3;
wire   [0:0] or_cond1_fu_590_p2;
wire   [0:0] or_cond2_fu_594_p2;
wire   [7:0] newSel_fu_598_p3;
wire   [0:0] grp_fu_376_p2;
wire   [0:0] or_cond4_fu_605_p2;
wire   [7:0] newSel1_fu_610_p3;
wire   [0:0] or_cond5_fu_618_p2;
wire   [0:0] or_cond6_fu_631_p2;
wire   [7:0] newSel2_fu_623_p3;
wire   [0:0] sel_tmp12_fu_586_p2;
wire   [7:0] newSel4_fu_645_p3;
wire   [7:0] newSel6_fu_661_p3;
wire   [7:0] newSel7_fu_668_p3;
wire   [7:0] newSel9_fu_684_p3;
wire   [7:0] newSel10_fu_692_p3;
wire   [7:0] newSel12_fu_708_p3;
wire   [7:0] newSel14_fu_722_p3;
wire   [7:0] newSel15_fu_729_p3;
wire   [1:0] tmp_fu_764_p1;
wire   [0:0] sel_tmp15_fu_768_p2;
wire   [0:0] sel_tmp18_fu_784_p2;
wire   [0:0] sel_tmp19_fu_790_p2;
wire   [0:0] sel_tmp20_fu_802_p2;
wire   [0:0] sel_tmp17_fu_779_p2;
wire   [0:0] sel_tmp16_fu_774_p2;
wire   [0:0] tmp2_fu_796_p2;
wire   [0:0] tmp6_fu_834_p2;
wire   [7:0] sel_tmp25_fu_851_p3;
wire   [7:0] newSel30_fu_875_p3;
wire   [0:0] or_cond7_fu_891_p2;
wire   [7:0] newSel18_fu_895_p3;
wire   [0:0] or_cond9_fu_902_p2;
wire   [7:0] newSel19_fu_907_p3;
wire   [0:0] or_cond11_fu_922_p2;
wire   [7:0] newSel20_fu_914_p3;
wire   [7:0] newSel22_fu_935_p3;
wire   [7:0] newSel24_fu_950_p3;
wire   [7:0] newSel25_fu_957_p3;
wire   [7:0] newSel27_fu_972_p3;
wire   [7:0] newSel28_fu_979_p3;
wire   [7:0] newSel32_fu_994_p3;
wire   [7:0] newSel33_fu_1001_p3;
reg   [7:0] ap_return_0_preg = 8'b00000000;
reg   [7:0] ap_return_1_preg = 8'b00000000;
reg   [7:0] ap_return_2_preg = 8'b00000000;
reg   [7:0] ap_return_3_preg = 8'b00000000;
reg   [7:0] ap_return_4_preg = 8'b00000000;
reg   [7:0] ap_return_5_preg = 8'b00000000;
reg   [7:0] ap_return_6_preg = 8'b00000000;
reg   [7:0] ap_return_7_preg = 8'b00000000;
reg   [7:0] ap_return_8_preg = 8'b00000000;
reg   [2:0] ap_NS_fsm;
parameter    ap_const_logic_1 = 1'b1;
parameter    ap_const_logic_0 = 1'b0;
parameter    ap_ST_st1_fsm_0 = 3'b000;
parameter    ap_ST_st2_fsm_1 = 3'b1;
parameter    ap_ST_st3_fsm_2 = 3'b10;
parameter    ap_ST_st4_fsm_3 = 3'b11;
parameter    ap_ST_st5_fsm_4 = 3'b100;
parameter    ap_ST_st6_fsm_5 = 3'b101;
parameter    ap_const_lv1_0 = 1'b0;
parameter    ap_const_lv2_0 = 2'b00;
parameter    ap_const_lv32_0 = 32'b00000000000000000000000000000000;
parameter    ap_const_lv2_3 = 2'b11;
parameter    ap_const_lv2_1 = 2'b1;
parameter    ap_const_lv8_1 = 8'b1;
parameter    ap_const_lv32_1 = 32'b1;
parameter    ap_const_lv2_2 = 2'b10;
parameter    ap_const_lv8_0 = 8'b00000000;
parameter    ap_true = 1'b1;




/// the current state (ap_CS_fsm) of the state machine. ///
always @ (posedge ap_clk)
begin : ap_ret_ap_CS_fsm
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_st1_fsm_0;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

/// ap_return_0_preg assign process. ///
always @ (posedge ap_clk)
begin : ap_ret_ap_return_0_preg
    if (ap_rst == 1'b1) begin
        ap_return_0_preg <= ap_const_lv8_0;
    end else begin
        if (((ap_ST_st2_fsm_1 == ap_CS_fsm) & ~(exitcond1_fu_380_p2 == ap_const_lv1_0))) begin
            ap_return_0_preg <= result_val_0_0_write_assign_reg_98;
        end
    end
end

/// ap_return_1_preg assign process. ///
always @ (posedge ap_clk)
begin : ap_ret_ap_return_1_preg
    if (ap_rst == 1'b1) begin
        ap_return_1_preg <= ap_const_lv8_0;
    end else begin
        if (((ap_ST_st2_fsm_1 == ap_CS_fsm) & ~(exitcond1_fu_380_p2 == ap_const_lv1_0))) begin
            ap_return_1_preg <= result_val_0_1_write_assign_reg_62;
        end
    end
end

/// ap_return_2_preg assign process. ///
always @ (posedge ap_clk)
begin : ap_ret_ap_return_2_preg
    if (ap_rst == 1'b1) begin
        ap_return_2_preg <= ap_const_lv8_0;
    end else begin
        if (((ap_ST_st2_fsm_1 == ap_CS_fsm) & ~(exitcond1_fu_380_p2 == ap_const_lv1_0))) begin
            ap_return_2_preg <= result_val_0_2_write_assign_reg_26;
        end
    end
end

/// ap_return_3_preg assign process. ///
always @ (posedge ap_clk)
begin : ap_ret_ap_return_3_preg
    if (ap_rst == 1'b1) begin
        ap_return_3_preg <= ap_const_lv8_0;
    end else begin
        if (((ap_ST_st2_fsm_1 == ap_CS_fsm) & ~(exitcond1_fu_380_p2 == ap_const_lv1_0))) begin
            ap_return_3_preg <= result_val_1_0_write_assign_reg_38;
        end
    end
end

/// ap_return_4_preg assign process. ///
always @ (posedge ap_clk)
begin : ap_ret_ap_return_4_preg
    if (ap_rst == 1'b1) begin
        ap_return_4_preg <= ap_const_lv8_0;
    end else begin
        if (((ap_ST_st2_fsm_1 == ap_CS_fsm) & ~(exitcond1_fu_380_p2 == ap_const_lv1_0))) begin
            ap_return_4_preg <= result_val_1_1_write_assign_reg_50;
        end
    end
end

/// ap_return_5_preg assign process. ///
always @ (posedge ap_clk)
begin : ap_ret_ap_return_5_preg
    if (ap_rst == 1'b1) begin
        ap_return_5_preg <= ap_const_lv8_0;
    end else begin
        if (((ap_ST_st2_fsm_1 == ap_CS_fsm) & ~(exitcond1_fu_380_p2 == ap_const_lv1_0))) begin
            ap_return_5_preg <= result_val_1_2_write_assign_reg_74;
        end
    end
end

/// ap_return_6_preg assign process. ///
always @ (posedge ap_clk)
begin : ap_ret_ap_return_6_preg
    if (ap_rst == 1'b1) begin
        ap_return_6_preg <= ap_const_lv8_0;
    end else begin
        if (((ap_ST_st2_fsm_1 == ap_CS_fsm) & ~(exitcond1_fu_380_p2 == ap_const_lv1_0))) begin
            ap_return_6_preg <= result_val_2_0_write_assign_reg_86;
        end
    end
end

/// ap_return_7_preg assign process. ///
always @ (posedge ap_clk)
begin : ap_ret_ap_return_7_preg
    if (ap_rst == 1'b1) begin
        ap_return_7_preg <= ap_const_lv8_0;
    end else begin
        if (((ap_ST_st2_fsm_1 == ap_CS_fsm) & ~(exitcond1_fu_380_p2 == ap_const_lv1_0))) begin
            ap_return_7_preg <= result_val_2_1_write_assign_reg_110;
        end
    end
end

/// ap_return_8_preg assign process. ///
always @ (posedge ap_clk)
begin : ap_ret_ap_return_8_preg
    if (ap_rst == 1'b1) begin
        ap_return_8_preg <= ap_const_lv8_0;
    end else begin
        if (((ap_ST_st2_fsm_1 == ap_CS_fsm) & ~(exitcond1_fu_380_p2 == ap_const_lv1_0))) begin
            ap_return_8_preg <= result_val_2_2_write_assign_reg_122;
        end
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if (((ap_ST_st5_fsm_4 == ap_CS_fsm) & ~(ap_const_lv1_0 == exitcond7_fu_752_p2))) begin
        i_reg_134 <= i_1_reg_1027;
    end else if (((ap_ST_st1_fsm_0 == ap_CS_fsm) & ~(ap_start == ap_const_logic_0))) begin
        i_reg_134 <= ap_const_lv2_0;
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if (((ap_ST_st3_fsm_2 == ap_CS_fsm) & ~(ap_const_lv1_0 == exitcond_fu_476_p2))) begin
        indvar_reg_364 <= ap_const_lv32_0;
    end else if ((ap_ST_st6_fsm_5 == ap_CS_fsm)) begin
        indvar_reg_364 <= indvar_next_reg_1151;
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if (((ap_ST_st2_fsm_1 == ap_CS_fsm) & (exitcond1_fu_380_p2 == ap_const_lv1_0))) begin
        j_reg_245 <= ap_const_lv2_0;
    end else if ((ap_ST_st4_fsm_3 == ap_CS_fsm)) begin
        j_reg_245 <= indvar_next1_reg_1062;
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if (((ap_ST_st3_fsm_2 == ap_CS_fsm) & ~(ap_const_lv1_0 == exitcond_fu_476_p2))) begin
        result_val13_2_reg_268 <= result_val13_6_reg_157;
    end else if ((ap_ST_st6_fsm_5 == ap_CS_fsm)) begin
        result_val13_2_reg_268 <= result_val13_1_reg_1197;
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if (((ap_ST_st2_fsm_1 == ap_CS_fsm) & (exitcond1_fu_380_p2 == ap_const_lv1_0))) begin
        result_val13_6_reg_157 <= result_val_1_0_write_assign_reg_38;
    end else if ((ap_ST_st4_fsm_3 == ap_CS_fsm)) begin
        result_val13_6_reg_157 <= result_val13_5_reg_1103;
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if (((ap_ST_st3_fsm_2 == ap_CS_fsm) & ~(ap_const_lv1_0 == exitcond_fu_476_p2))) begin
        result_val14_2_reg_280 <= result_val14_6_reg_168;
    end else if ((ap_ST_st6_fsm_5 == ap_CS_fsm)) begin
        result_val14_2_reg_280 <= newSel23_fu_942_p3;
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if (((ap_ST_st2_fsm_1 == ap_CS_fsm) & (exitcond1_fu_380_p2 == ap_const_lv1_0))) begin
        result_val14_6_reg_168 <= result_val_1_1_write_assign_reg_50;
    end else if ((ap_ST_st4_fsm_3 == ap_CS_fsm)) begin
        result_val14_6_reg_168 <= newSel5_fu_653_p3;
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if (((ap_ST_st3_fsm_2 == ap_CS_fsm) & ~(ap_const_lv1_0 == exitcond_fu_476_p2))) begin
        result_val1520_2_reg_304 <= result_val1520_6_reg_190;
    end else if ((ap_ST_st6_fsm_5 == ap_CS_fsm)) begin
        result_val1520_2_reg_304 <= newSel29_fu_986_p3;
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if (((ap_ST_st2_fsm_1 == ap_CS_fsm) & (exitcond1_fu_380_p2 == ap_const_lv1_0))) begin
        result_val1520_6_reg_190 <= result_val_1_2_write_assign_reg_74;
    end else if ((ap_ST_st4_fsm_3 == ap_CS_fsm)) begin
        result_val1520_6_reg_190 <= newSel11_fu_700_p3;
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if (((ap_ST_st3_fsm_2 == ap_CS_fsm) & ~(ap_const_lv1_0 == exitcond_fu_476_p2))) begin
        result_val16_2_reg_292 <= result_val16_6_reg_179;
    end else if ((ap_ST_st6_fsm_5 == ap_CS_fsm)) begin
        result_val16_2_reg_292 <= newSel26_fu_964_p3;
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if (((ap_ST_st2_fsm_1 == ap_CS_fsm) & (exitcond1_fu_380_p2 == ap_const_lv1_0))) begin
        result_val16_6_reg_179 <= result_val_0_1_write_assign_reg_62;
    end else if ((ap_ST_st4_fsm_3 == ap_CS_fsm)) begin
        result_val16_6_reg_179 <= newSel8_fu_676_p3;
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if (((ap_ST_st3_fsm_2 == ap_CS_fsm) & ~(ap_const_lv1_0 == exitcond_fu_476_p2))) begin
        result_val26_2_reg_316 <= result_val26_6_reg_201;
    end else if ((ap_ST_st6_fsm_5 == ap_CS_fsm)) begin
        result_val26_2_reg_316 <= result_val26_1_reg_1202;
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if (((ap_ST_st2_fsm_1 == ap_CS_fsm) & (exitcond1_fu_380_p2 == ap_const_lv1_0))) begin
        result_val26_6_reg_201 <= result_val_2_0_write_assign_reg_86;
    end else if ((ap_ST_st4_fsm_3 == ap_CS_fsm)) begin
        result_val26_6_reg_201 <= result_val26_5_reg_1108;
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if (((ap_ST_st3_fsm_2 == ap_CS_fsm) & ~(ap_const_lv1_0 == exitcond_fu_476_p2))) begin
        result_val27_2_reg_340 <= result_val27_6_reg_223;
    end else if ((ap_ST_st6_fsm_5 == ap_CS_fsm)) begin
        result_val27_2_reg_340 <= newSel34_fu_1008_p3;
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if (((ap_ST_st2_fsm_1 == ap_CS_fsm) & (exitcond1_fu_380_p2 == ap_const_lv1_0))) begin
        result_val27_6_reg_223 <= result_val_2_1_write_assign_reg_110;
    end else if ((ap_ST_st4_fsm_3 == ap_CS_fsm)) begin
        result_val27_6_reg_223 <= newSel16_fu_736_p3;
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if (((ap_ST_st3_fsm_2 == ap_CS_fsm) & ~(ap_const_lv1_0 == exitcond_fu_476_p2))) begin
        result_val28_2_reg_352 <= result_val28_6_reg_234;
    end else if ((ap_ST_st6_fsm_5 == ap_CS_fsm)) begin
        result_val28_2_reg_352 <= newSel35_fu_1016_p3;
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if (((ap_ST_st2_fsm_1 == ap_CS_fsm) & (exitcond1_fu_380_p2 == ap_const_lv1_0))) begin
        result_val28_6_reg_234 <= result_val_2_2_write_assign_reg_122;
    end else if ((ap_ST_st4_fsm_3 == ap_CS_fsm)) begin
        result_val28_6_reg_234 <= newSel17_fu_744_p3;
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if (((ap_ST_st3_fsm_2 == ap_CS_fsm) & ~(ap_const_lv1_0 == exitcond_fu_476_p2))) begin
        result_val2_2_reg_256 <= result_val2_6_reg_146;
    end else if ((ap_ST_st6_fsm_5 == ap_CS_fsm)) begin
        result_val2_2_reg_256 <= newSel21_fu_927_p3;
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if (((ap_ST_st2_fsm_1 == ap_CS_fsm) & (exitcond1_fu_380_p2 == ap_const_lv1_0))) begin
        result_val2_6_reg_146 <= result_val_0_2_write_assign_reg_26;
    end else if ((ap_ST_st4_fsm_3 == ap_CS_fsm)) begin
        result_val2_6_reg_146 <= newSel3_fu_637_p3;
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if (((ap_ST_st3_fsm_2 == ap_CS_fsm) & ~(ap_const_lv1_0 == exitcond_fu_476_p2))) begin
        result_val_2_reg_328 <= result_val_6_reg_212;
    end else if ((ap_ST_st6_fsm_5 == ap_CS_fsm)) begin
        result_val_2_reg_328 <= newSel31_reg_1207;
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if (((ap_ST_st2_fsm_1 == ap_CS_fsm) & (exitcond1_fu_380_p2 == ap_const_lv1_0))) begin
        result_val_6_reg_212 <= result_val_0_0_write_assign_reg_98;
    end else if ((ap_ST_st4_fsm_3 == ap_CS_fsm)) begin
        result_val_6_reg_212 <= newSel13_fu_715_p3;
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if ((ap_ST_st2_fsm_1 == ap_CS_fsm)) begin
        i_1_reg_1027 <= i_1_fu_386_p2;
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if ((ap_ST_st3_fsm_2 == ap_CS_fsm)) begin
        indvar_next1_reg_1062 <= indvar_next1_fu_482_p2;
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if ((ap_ST_st5_fsm_4 == ap_CS_fsm)) begin
        indvar_next_reg_1151 <= indvar_next_fu_758_p2;
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if (((ap_ST_st5_fsm_4 == ap_CS_fsm) & (ap_const_lv1_0 == exitcond7_fu_752_p2))) begin
        newSel31_reg_1207 <= newSel31_fu_883_p3;
        or_cond10_reg_1192 <= or_cond10_fu_845_p2;
        or_cond3_reg_1179 <= or_cond3_fu_828_p2;
        or_cond8_reg_1185 <= or_cond8_fu_840_p2;
        result_val13_1_reg_1197 <= result_val13_1_fu_859_p3;
        result_val26_1_reg_1202 <= result_val26_1_fu_867_p3;
        sel_tmp21_reg_1156 <= sel_tmp21_fu_808_p2;
        sel_tmp22_reg_1162 <= sel_tmp22_fu_813_p2;
        sel_tmp23_reg_1168 <= sel_tmp23_fu_818_p2;
        sel_tmp24_reg_1173 <= sel_tmp24_fu_823_p2;
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if (((ap_ST_st3_fsm_2 == ap_CS_fsm) & (ap_const_lv1_0 == exitcond_fu_476_p2))) begin
        or_cond_reg_1090 <= or_cond_fu_550_p2;
        result_val13_5_reg_1103 <= result_val13_5_fu_570_p3;
        result_val26_5_reg_1108 <= result_val26_5_fu_578_p3;
        sel_tmp10_reg_1067 <= sel_tmp10_fu_522_p2;
        sel_tmp11_reg_1072 <= sel_tmp11_fu_528_p2;
        sel_tmp13_reg_1078 <= sel_tmp13_fu_533_p2;
        tmp4_reg_1097 <= tmp4_fu_556_p2;
        tmp_2_reg_1083 <= tmp_2_fu_544_p2;
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if (((ap_ST_st5_fsm_4 == ap_CS_fsm) & ~(ap_const_lv1_0 == exitcond7_fu_752_p2))) begin
        result_val_0_0_write_assign_reg_98 <= result_val_2_reg_328;
        result_val_0_1_write_assign_reg_62 <= result_val16_2_reg_292;
        result_val_0_2_write_assign_reg_26 <= result_val2_2_reg_256;
        result_val_1_0_write_assign_reg_38 <= result_val13_2_reg_268;
        result_val_1_1_write_assign_reg_50 <= result_val14_2_reg_280;
        result_val_1_2_write_assign_reg_74 <= result_val1520_2_reg_304;
        result_val_2_0_write_assign_reg_86 <= result_val26_2_reg_316;
        result_val_2_1_write_assign_reg_110 <= result_val27_2_reg_340;
        result_val_2_2_write_assign_reg_122 <= result_val28_2_reg_352;
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if (((ap_ST_st2_fsm_1 == ap_CS_fsm) & (exitcond1_fu_380_p2 == ap_const_lv1_0))) begin
        sel_tmp5_reg_1043 <= sel_tmp5_fu_410_p2;
        sel_tmp8_reg_1051 <= sel_tmp8_fu_416_p2;
        sel_tmp_reg_1032 <= sel_tmp_fu_392_p2;
    end
end

/// ap_done assign process. ///
always @ (ap_start or ap_CS_fsm or exitcond1_fu_380_p2)
begin
    if (((~(ap_const_logic_1 == ap_start) & (ap_ST_st1_fsm_0 == ap_CS_fsm)) | ((ap_ST_st2_fsm_1 == ap_CS_fsm) & ~(exitcond1_fu_380_p2 == ap_const_lv1_0)))) begin
        ap_done = ap_const_logic_1;
    end else begin
        ap_done = ap_const_logic_0;
    end
end

/// ap_idle assign process. ///
always @ (ap_start or ap_CS_fsm)
begin
    if ((~(ap_const_logic_1 == ap_start) & (ap_ST_st1_fsm_0 == ap_CS_fsm))) begin
        ap_idle = ap_const_logic_1;
    end else begin
        ap_idle = ap_const_logic_0;
    end
end

/// ap_ready assign process. ///
always @ (ap_CS_fsm or exitcond1_fu_380_p2)
begin
    if (((ap_ST_st2_fsm_1 == ap_CS_fsm) & ~(exitcond1_fu_380_p2 == ap_const_lv1_0))) begin
        ap_ready = ap_const_logic_1;
    end else begin
        ap_ready = ap_const_logic_0;
    end
end

/// ap_return_0 assign process. ///
always @ (ap_CS_fsm or exitcond1_fu_380_p2 or result_val_0_0_write_assign_reg_98 or ap_return_0_preg)
begin
    if (((ap_ST_st2_fsm_1 == ap_CS_fsm) & ~(exitcond1_fu_380_p2 == ap_const_lv1_0))) begin
        ap_return_0 = result_val_0_0_write_assign_reg_98;
    end else begin
        ap_return_0 = ap_return_0_preg;
    end
end

/// ap_return_1 assign process. ///
always @ (ap_CS_fsm or exitcond1_fu_380_p2 or result_val_0_1_write_assign_reg_62 or ap_return_1_preg)
begin
    if (((ap_ST_st2_fsm_1 == ap_CS_fsm) & ~(exitcond1_fu_380_p2 == ap_const_lv1_0))) begin
        ap_return_1 = result_val_0_1_write_assign_reg_62;
    end else begin
        ap_return_1 = ap_return_1_preg;
    end
end

/// ap_return_2 assign process. ///
always @ (ap_CS_fsm or exitcond1_fu_380_p2 or result_val_0_2_write_assign_reg_26 or ap_return_2_preg)
begin
    if (((ap_ST_st2_fsm_1 == ap_CS_fsm) & ~(exitcond1_fu_380_p2 == ap_const_lv1_0))) begin
        ap_return_2 = result_val_0_2_write_assign_reg_26;
    end else begin
        ap_return_2 = ap_return_2_preg;
    end
end

/// ap_return_3 assign process. ///
always @ (ap_CS_fsm or exitcond1_fu_380_p2 or result_val_1_0_write_assign_reg_38 or ap_return_3_preg)
begin
    if (((ap_ST_st2_fsm_1 == ap_CS_fsm) & ~(exitcond1_fu_380_p2 == ap_const_lv1_0))) begin
        ap_return_3 = result_val_1_0_write_assign_reg_38;
    end else begin
        ap_return_3 = ap_return_3_preg;
    end
end

/// ap_return_4 assign process. ///
always @ (ap_CS_fsm or exitcond1_fu_380_p2 or result_val_1_1_write_assign_reg_50 or ap_return_4_preg)
begin
    if (((ap_ST_st2_fsm_1 == ap_CS_fsm) & ~(exitcond1_fu_380_p2 == ap_const_lv1_0))) begin
        ap_return_4 = result_val_1_1_write_assign_reg_50;
    end else begin
        ap_return_4 = ap_return_4_preg;
    end
end

/// ap_return_5 assign process. ///
always @ (ap_CS_fsm or exitcond1_fu_380_p2 or result_val_1_2_write_assign_reg_74 or ap_return_5_preg)
begin
    if (((ap_ST_st2_fsm_1 == ap_CS_fsm) & ~(exitcond1_fu_380_p2 == ap_const_lv1_0))) begin
        ap_return_5 = result_val_1_2_write_assign_reg_74;
    end else begin
        ap_return_5 = ap_return_5_preg;
    end
end

/// ap_return_6 assign process. ///
always @ (ap_CS_fsm or exitcond1_fu_380_p2 or result_val_2_0_write_assign_reg_86 or ap_return_6_preg)
begin
    if (((ap_ST_st2_fsm_1 == ap_CS_fsm) & ~(exitcond1_fu_380_p2 == ap_const_lv1_0))) begin
        ap_return_6 = result_val_2_0_write_assign_reg_86;
    end else begin
        ap_return_6 = ap_return_6_preg;
    end
end

/// ap_return_7 assign process. ///
always @ (ap_CS_fsm or exitcond1_fu_380_p2 or result_val_2_1_write_assign_reg_110 or ap_return_7_preg)
begin
    if (((ap_ST_st2_fsm_1 == ap_CS_fsm) & ~(exitcond1_fu_380_p2 == ap_const_lv1_0))) begin
        ap_return_7 = result_val_2_1_write_assign_reg_110;
    end else begin
        ap_return_7 = ap_return_7_preg;
    end
end

/// ap_return_8 assign process. ///
always @ (ap_CS_fsm or exitcond1_fu_380_p2 or result_val_2_2_write_assign_reg_122 or ap_return_8_preg)
begin
    if (((ap_ST_st2_fsm_1 == ap_CS_fsm) & ~(exitcond1_fu_380_p2 == ap_const_lv1_0))) begin
        ap_return_8 = result_val_2_2_write_assign_reg_122;
    end else begin
        ap_return_8 = ap_return_8_preg;
    end
end
always @ (ap_start or ap_CS_fsm or exitcond1_fu_380_p2 or exitcond_fu_476_p2 or exitcond7_fu_752_p2)
begin
    case (ap_CS_fsm)
        ap_ST_st1_fsm_0 : 
            if (~(ap_start == ap_const_logic_0)) begin
                ap_NS_fsm = ap_ST_st2_fsm_1;
            end else begin
                ap_NS_fsm = ap_ST_st1_fsm_0;
            end
        ap_ST_st2_fsm_1 : 
            if (~(exitcond1_fu_380_p2 == ap_const_lv1_0)) begin
                ap_NS_fsm = ap_ST_st1_fsm_0;
            end else begin
                ap_NS_fsm = ap_ST_st3_fsm_2;
            end
        ap_ST_st3_fsm_2 : 
            if (~(ap_const_lv1_0 == exitcond_fu_476_p2)) begin
                ap_NS_fsm = ap_ST_st5_fsm_4;
            end else begin
                ap_NS_fsm = ap_ST_st4_fsm_3;
            end
        ap_ST_st4_fsm_3 : 
            ap_NS_fsm = ap_ST_st3_fsm_2;
        ap_ST_st5_fsm_4 : 
            if ((ap_const_lv1_0 == exitcond7_fu_752_p2)) begin
                ap_NS_fsm = ap_ST_st6_fsm_5;
            end else begin
                ap_NS_fsm = ap_ST_st2_fsm_1;
            end
        ap_ST_st6_fsm_5 : 
            ap_NS_fsm = ap_ST_st5_fsm_4;
        default : 
            ap_NS_fsm = 'bx;
    endcase
end
assign exitcond1_fu_380_p2 = (i_reg_134 == ap_const_lv2_3? 1'b1: 1'b0);
assign exitcond7_fu_752_p2 = (indvar_reg_364 == ap_const_lv32_0? 1'b1: 1'b0);
assign exitcond_fu_476_p2 = (j_reg_245 == ap_const_lv2_3? 1'b1: 1'b0);
assign grp_fu_376_p2 = (sel_tmp_reg_1032 | sel_tmp8_reg_1051);
assign i_1_fu_386_p2 = (i_reg_134 + ap_const_lv2_1);
assign indvar_next1_fu_482_p2 = (j_reg_245 + ap_const_lv2_1);
assign indvar_next_fu_758_p2 = (indvar_reg_364 + ap_const_lv32_1);
assign newSel10_fu_692_p3 = ((or_cond2_fu_594_p2)? newSel9_fu_684_p3: result_val1520_6_reg_190);
assign newSel11_fu_700_p3 = ((or_cond4_fu_605_p2)? result_val1520_6_reg_190: newSel10_fu_692_p3);
assign newSel12_fu_708_p3 = ((tmp_2_reg_1083)? ap_const_lv8_1: result_val_6_reg_212);
assign newSel13_fu_715_p3 = ((or_cond_reg_1090)? result_val_6_reg_212: newSel12_fu_708_p3);
assign newSel14_fu_722_p3 = ((tmp_2_reg_1083)? result_val27_6_reg_223: ap_const_lv8_1);
assign newSel15_fu_729_p3 = ((or_cond_reg_1090)? result_val27_6_reg_223: newSel14_fu_722_p3);
assign newSel16_fu_736_p3 = ((or_cond4_fu_605_p2)? newSel15_fu_729_p3: result_val27_6_reg_223);
assign newSel17_fu_744_p3 = ((or_cond6_fu_631_p2)? result_val28_6_reg_234: ap_const_lv8_1);
assign newSel18_fu_895_p3 = ((sel_tmp21_reg_1156)? result_val2_2_reg_256: ap_const_lv8_0);
assign newSel19_fu_907_p3 = ((or_cond8_reg_1185)? result_val2_2_reg_256: newSel18_fu_895_p3);
assign newSel1_fu_610_p3 = ((or_cond2_fu_594_p2)? result_val2_6_reg_146: newSel_fu_598_p3);
assign newSel20_fu_914_p3 = ((or_cond9_fu_902_p2)? result_val2_2_reg_256: newSel19_fu_907_p3);
assign newSel21_fu_927_p3 = ((or_cond11_fu_922_p2)? newSel20_fu_914_p3: result_val2_2_reg_256);
assign newSel22_fu_935_p3 = ((sel_tmp22_reg_1162)? ap_const_lv8_0: result_val14_2_reg_280);
assign newSel23_fu_942_p3 = ((or_cond9_fu_902_p2)? result_val14_2_reg_280: newSel22_fu_935_p3);
assign newSel24_fu_950_p3 = ((sel_tmp21_reg_1156)? ap_const_lv8_0: result_val16_2_reg_292);
assign newSel25_fu_957_p3 = ((or_cond8_reg_1185)? result_val16_2_reg_292: newSel24_fu_950_p3);
assign newSel26_fu_964_p3 = ((or_cond9_fu_902_p2)? result_val16_2_reg_292: newSel25_fu_957_p3);
assign newSel27_fu_972_p3 = ((sel_tmp22_reg_1162)? result_val1520_2_reg_304: ap_const_lv8_0);
assign newSel28_fu_979_p3 = ((or_cond8_reg_1185)? newSel27_fu_972_p3: result_val1520_2_reg_304);
assign newSel29_fu_986_p3 = ((or_cond9_fu_902_p2)? result_val1520_2_reg_304: newSel28_fu_979_p3);
assign newSel2_fu_623_p3 = ((or_cond4_fu_605_p2)? result_val2_6_reg_146: newSel1_fu_610_p3);
assign newSel30_fu_875_p3 = ((sel_tmp24_fu_823_p2)? ap_const_lv8_0: result_val_2_reg_328);
assign newSel31_fu_883_p3 = ((or_cond3_fu_828_p2)? result_val_2_reg_328: newSel30_fu_875_p3);
assign newSel32_fu_994_p3 = ((sel_tmp24_reg_1173)? result_val27_2_reg_340: ap_const_lv8_0);
assign newSel33_fu_1001_p3 = ((or_cond3_reg_1179)? result_val27_2_reg_340: newSel32_fu_994_p3);
assign newSel34_fu_1008_p3 = ((or_cond9_fu_902_p2)? newSel33_fu_1001_p3: result_val27_2_reg_340);
assign newSel35_fu_1016_p3 = ((or_cond11_fu_922_p2)? result_val28_2_reg_352: ap_const_lv8_0);
assign newSel3_fu_637_p3 = ((or_cond6_fu_631_p2)? newSel2_fu_623_p3: result_val2_6_reg_146);
assign newSel4_fu_645_p3 = ((sel_tmp12_fu_586_p2)? ap_const_lv8_1: result_val14_6_reg_168);
assign newSel5_fu_653_p3 = ((or_cond4_fu_605_p2)? result_val14_6_reg_168: newSel4_fu_645_p3);
assign newSel6_fu_661_p3 = ((sel_tmp11_reg_1072)? ap_const_lv8_1: result_val16_6_reg_179);
assign newSel7_fu_668_p3 = ((or_cond2_fu_594_p2)? result_val16_6_reg_179: newSel6_fu_661_p3);
assign newSel8_fu_676_p3 = ((or_cond4_fu_605_p2)? result_val16_6_reg_179: newSel7_fu_668_p3);
assign newSel9_fu_684_p3 = ((sel_tmp12_fu_586_p2)? result_val1520_6_reg_190: ap_const_lv8_1);
assign newSel_fu_598_p3 = ((sel_tmp11_reg_1072)? result_val2_6_reg_146: ap_const_lv8_1);
assign or_cond10_fu_845_p2 = (tmp6_fu_834_p2 & grp_fu_376_p2);
assign or_cond11_fu_922_p2 = (or_cond9_fu_902_p2 | or_cond10_reg_1192);
assign or_cond1_fu_590_p2 = (tmp_2_reg_1083 | sel_tmp13_reg_1078);
assign or_cond2_fu_594_p2 = (sel_tmp_reg_1032 & tmp4_reg_1097);
assign or_cond3_fu_828_p2 = (sel_tmp17_fu_779_p2 | sel_tmp16_fu_774_p2);
assign or_cond4_fu_605_p2 = (or_cond_reg_1090 | or_cond1_fu_590_p2);
assign or_cond5_fu_618_p2 = (tmp4_reg_1097 & grp_fu_376_p2);
assign or_cond6_fu_631_p2 = (or_cond4_fu_605_p2 | or_cond5_fu_618_p2);
assign or_cond7_fu_891_p2 = (sel_tmp24_reg_1173 | sel_tmp23_reg_1168);
assign or_cond8_fu_840_p2 = (sel_tmp_reg_1032 & tmp6_fu_834_p2);
assign or_cond9_fu_902_p2 = (or_cond3_reg_1179 | or_cond7_fu_891_p2);
assign or_cond_fu_550_p2 = (sel_tmp6_fu_499_p2 | sel_tmp2_fu_494_p2);
assign result_val13_1_fu_859_p3 = ((sel_tmp17_fu_779_p2)? result_val13_2_reg_268: sel_tmp25_fu_851_p3);
assign result_val13_5_fu_570_p3 = ((sel_tmp6_fu_499_p2)? result_val13_6_reg_157: sel_tmp14_fu_562_p3);
assign result_val26_1_fu_867_p3 = ((sel_tmp17_fu_779_p2)? ap_const_lv8_0: result_val26_2_reg_316);
assign result_val26_5_fu_578_p3 = ((sel_tmp6_fu_499_p2)? ap_const_lv8_1: result_val26_6_reg_201);
assign sel_tmp10_fu_522_p2 = (j_reg_245 == ap_const_lv2_1? 1'b1: 1'b0);
assign sel_tmp11_fu_528_p2 = (sel_tmp8_reg_1051 & sel_tmp10_fu_522_p2);
assign sel_tmp12_fu_586_p2 = (sel_tmp_reg_1032 & sel_tmp10_reg_1067);
assign sel_tmp13_fu_533_p2 = (sel_tmp5_reg_1043 & sel_tmp10_fu_522_p2);
assign sel_tmp14_fu_562_p3 = ((sel_tmp2_fu_494_p2)? ap_const_lv8_1: result_val13_6_reg_157);
assign sel_tmp15_fu_768_p2 = (tmp_fu_764_p1 == ap_const_lv2_1? 1'b1: 1'b0);
assign sel_tmp16_fu_774_p2 = (sel_tmp_reg_1032 & sel_tmp15_fu_768_p2);
assign sel_tmp17_fu_779_p2 = (sel_tmp5_reg_1043 & sel_tmp15_fu_768_p2);
assign sel_tmp18_fu_784_p2 = (tmp_fu_764_p1 != ap_const_lv2_1? 1'b1: 1'b0);
assign sel_tmp19_fu_790_p2 = (tmp_fu_764_p1 != ap_const_lv2_2? 1'b1: 1'b0);
assign sel_tmp1_fu_488_p2 = (j_reg_245 == ap_const_lv2_0? 1'b1: 1'b0);
assign sel_tmp20_fu_802_p2 = (tmp_fu_764_p1 == ap_const_lv2_2? 1'b1: 1'b0);
assign sel_tmp21_fu_808_p2 = (sel_tmp8_reg_1051 & sel_tmp20_fu_802_p2);
assign sel_tmp22_fu_813_p2 = (sel_tmp_reg_1032 & sel_tmp20_fu_802_p2);
assign sel_tmp23_fu_818_p2 = (sel_tmp5_reg_1043 & sel_tmp20_fu_802_p2);
assign sel_tmp24_fu_823_p2 = (sel_tmp8_reg_1051 & sel_tmp15_fu_768_p2);
assign sel_tmp25_fu_851_p3 = ((sel_tmp16_fu_774_p2)? ap_const_lv8_0: result_val13_2_reg_268);
assign sel_tmp2_fu_494_p2 = (sel_tmp_reg_1032 & sel_tmp1_fu_488_p2);
assign sel_tmp3_fu_398_p2 = (i_reg_134 != ap_const_lv2_0? 1'b1: 1'b0);
assign sel_tmp4_fu_404_p2 = (i_reg_134 != ap_const_lv2_1? 1'b1: 1'b0);
assign sel_tmp5_fu_410_p2 = (sel_tmp3_fu_398_p2 & sel_tmp4_fu_404_p2);
assign sel_tmp6_fu_499_p2 = (sel_tmp5_reg_1043 & sel_tmp1_fu_488_p2);
assign sel_tmp7_fu_510_p2 = (j_reg_245 != ap_const_lv2_1? 1'b1: 1'b0);
assign sel_tmp8_fu_416_p2 = (i_reg_134 == ap_const_lv2_0? 1'b1: 1'b0);
assign sel_tmp9_fu_504_p2 = (j_reg_245 != ap_const_lv2_0? 1'b1: 1'b0);
assign sel_tmp_fu_392_p2 = (i_reg_134 == ap_const_lv2_1? 1'b1: 1'b0);
assign tmp1_fu_516_p2 = (sel_tmp9_fu_504_p2 & sel_tmp7_fu_510_p2);
assign tmp2_fu_796_p2 = (sel_tmp18_fu_784_p2 & sel_tmp19_fu_790_p2);
assign tmp4_fu_556_p2 = (tmp1_fu_516_p2 | sel_tmp10_fu_522_p2);
assign tmp6_fu_834_p2 = (tmp2_fu_796_p2 | sel_tmp20_fu_802_p2);
assign tmp_1_fu_538_p2 = (i_reg_134 | j_reg_245);
assign tmp_2_fu_544_p2 = (tmp_1_fu_538_p2 == ap_const_lv2_0? 1'b1: 1'b0);
assign tmp_fu_764_p1 = indvar_reg_364[1:0];


endmodule //getStructuringElement_unsigned_char_int_int_3_3_s

